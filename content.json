{"meta":{"title":"特特的天","subtitle":"生活就像心电图——一帆风顺说明你挂了","description":"","author":"John Doe","url":"https://tetedetian2.github.io","root":"/"},"pages":[{"title":"","date":"2020-07-19T18:38:51.982Z","updated":"2020-07-17T09:52:17.000Z","comments":true,"path":"css/style.css","permalink":"https://tetedetian2.github.io/css/style.css","excerpt":"","text":"@supports (backdrop-filter: blur(20px)) { .blur { background: rgba(255,255,255,0.9) !important; backdrop-filter: saturate(200%) blur(20px); } } .shadow { box-shadow: 0 1px 2px 0px rgba(0,0,0,0.1); } .shadow.floatable { transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } .shadow.floatable:hover { box-shadow: 0 2px 4px 0px rgba(0,0,0,0.1), 0 4px 8px 0px rgba(0,0,0,0.1), 0 8px 16px 0px rgba(0,0,0,0.1); } @font-face { font-family: 'UbuntuMono'; src: url(\"https://cdn.jsdelivr.net/gh/xaoxuu/cdn-fonts/UbuntuMono/UbuntuMono-Regular.ttf\"); font-weight: 'normal'; font-style: 'normal'; } @font-face { font-family: 'Varela Round'; src: url(\"https://cdn.jsdelivr.net/gh/xaoxuu/cdn-fonts/VarelaRound/VarelaRound-Regular.ttf\"); font-weight: 'normal'; font-style: 'normal'; } * { box-sizing: border-box; outline: none; margin: 0; padding: 0; } html { color: #444; width: 100%; height: 100%; font-family: UbuntuMono, \"PingFang SC\", \"Microsoft YaHei\", Helvetica, Arial, Menlo, Monaco, monospace, sans-serif; font-size: 16px; } html >::-webkit-scrollbar { height: 4px; width: 4px; } html >::-webkit-scrollbar-track-piece { background: transparent; } html >::-webkit-scrollbar-thumb { background: #2196f3; cursor: pointer; border-radius: 2px; } html >::-webkit-scrollbar-thumb:hover { background: #ff5722; } body { background-color: #f4f4f4; text-rendering: optimizelegibility; -webkit-tap-highlight-color: rgba(0,0,0,0); line-height: 1.65; -webkit-text-size-adjust: 100%; -ms-text-size-adjust: 100%; } body.modal-active { overflow: hidden; } @media screen and (max-width: 680px) { body.modal-active { position: fixed; top: 0; right: 0; bottom: 0; left: 0; } } ::-moz-selection { background: rgba(33,150,243,0.2); } ::selection { background: rgba(33,150,243,0.2); } h1 { font-size: 1.625rem; } h2 { font-size: 1.375rem; } h3 { font-size: 1.25rem; } h4 { font-size: 1.125rem; } h5 { font-size: 1rem; } h6 { font-size: 1rem; } h1, h2, h3, h4, h6 { font-weight: normal; } a { color: #2196f3; cursor: pointer; text-decoration: none; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } a:hover { color: #ff5722; } a:active, a:hover { outline: 0; } a:not([href]) { cursor: default; } pre { tab-size: 4; -moz-tab-size: 4; -o-tab-size: 4; -webkit-tab-size: 4; } img { max-width: 100%; } .clearfix { zoom: 1; } .clearfix:before, .clearfix:after { content: \" \"; display: table; } .clearfix:after { clear: both; } .hidden { text-indent: -9999px; visibility: hidden; display: none; } .inner { position: relative; width: 80%; max-width: 710px; margin: 0 auto; } .vertical { display: table-cell; vertical-align: middle; } ul, ol { padding-left: 0; } ul li, ol li { list-style: none; } article, aside, details, figcaption, figure, footer, header, hgroup, main, menu, nav, section, summary { display: block; } abbr[title] { border-bottom: 1px dotted; } b, strong { font-weight: bold; } dfn { font-style: italic; } h1 { font-size: 2em; margin: 0.67em 0; } mark { background: #ff0; color: #000; } small { font-size: 80%; } sub, sup { font-size: 50%; line-height: 1em; } sup { vertical-align: text-top; } sub { vertical-align: text-bottom; } img { border: 0; background: none; max-width: 100%; } svg:not(:root) { overflow: hidden; } figure { margin: 1em 40px; } hr { -moz-box-sizing: content-box; box-sizing: content-box; height: 0; border: 0; border-radius: 1px; border-bottom: 1px solid rgba(68,68,68,0.1); } pre { overflow: auto; } code, kbd, pre, samp { font-family: monospace, monospace; font-size: 1em; } button, input, optgroup, select, textarea { color: inherit /* 1 */; font: inherit /* 2 */; margin: 0 /* 3 */; } button { overflow: visible; } button, select { text-transform: none; } button, html input[type=\"button\"], input[type=\"reset\"], input[type=\"submit\"] { -webkit-appearance: button /* 2 */; cursor: pointer /* 3 */; } button[disabled], html input[disabled] { cursor: default; } button::-moz-focus-inner, input::-moz-focus-inner { border: 0; padding: 0; } input[type=\"checkbox\"], input[type=\"radio\"] { box-sizing: border-box /* 1 */; padding: 0 /* 2 */; } input[type=\"number\"]::-webkit-inner-spin-button, input[type=\"number\"]::-webkit-outer-spin-button { height: auto; } input[type=\"search\"] { -webkit-appearance: textfield /* 1 */; -moz-box-sizing: content-box; -webkit-box-sizing: content-box /* 2 */; box-sizing: content-box; } input[type=\"search\"]::-webkit-search-cancel-button, input[type=\"search\"]::-webkit-search-decoration { -webkit-appearance: none; } fieldset { border: 1px solid #c0c0c0; margin: 0 2px; padding: 0.35em 0.625em 0.75em; } legend { border: 0 /* 1 */; padding: 0 /* 2 */; } textarea { overflow: auto; } optgroup { font-weight: bold; } table { border-collapse: collapse; overflow: auto; display: inline-block; max-width: 100%; margin-right: 0.4rem; vertical-align: text-top; } table::-webkit-scrollbar { height: 4px; width: 4px; } table::-webkit-scrollbar-track-piece { background: transparent; } table::-webkit-scrollbar-thumb { background: rgba(118,118,118,0.4); cursor: pointer; border-radius: 2px; } table::-webkit-scrollbar-thumb:hover { background: #767676; } table th { background-color: #f1f1f1; } table td, table th { padding: 8px 16px; border: 2px solid #f1f1f1; line-height: 1.5; font-size: 90%; } table tr { word-break: keep-all; background-color: #fefefe; } table tbody >tr { transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } table tbody >tr:hover { background-color: #f1f1f1; } td, th { padding: 0; } span.btn { display: inline; } span.btn >a { display: inline-block; background: #2196f3; color: #fff; padding: 4px 4px 2px 4px; margin: 2px; line-height: 1.1; border-radius: 2px; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } span.btn >a i { margin-right: 2px; } span.btn >a:hover { color: #fff; background: #ff5722; } span.btn >a:not([href]) { opacity: 0.5; } span.btn >a:not([href]):hover { cursor: not-allowed; } span.btn.regular >a { padding: 8px 12px 6px 12px; } span.btn.regular >a i { margin-right: 4px; } span.btn.large >a { padding: 12px 36px 10px 36px; } span.btn.large >a i { margin-right: 8px; } span.btn.center { display: block; text-align: center; } div.btns { margin: 0 -8px; display: flex; flex-wrap: wrap; align-items: flex-start; overflow: visible; line-height: 1.8; } div.btns, div.btns p, div.btns a { font-size: 0.8125rem; color: #555; } div.btns b { font-size: 0.875rem; } div.btns.wide>a { padding-left: 32px; padding-right: 32px; } div.btns.fill>a { flex-grow: 1; width: auto; } div.btns.around { justify-content: space-around; } div.btns.center { justify-content: center; } div.btns.grid2>a { width: calc(100%/2 - 16px); } @media screen and (max-width: 1024px) { div.btns.grid2>a { width: calc(100%/2 - 16px); } } @media screen and (max-width: 768px) { div.btns.grid2>a { width: calc(100%/2 - 16px); } } @media screen and (max-width: 500px) { div.btns.grid2>a { width: calc(100%/1 - 16px); } } div.btns.grid3>a { width: calc(100%/3 - 16px); } @media screen and (max-width: 1024px) { div.btns.grid3>a { width: calc(100%/3 - 16px); } } @media screen and (max-width: 768px) { div.btns.grid3>a { width: calc(100%/3 - 16px); } } @media screen and (max-width: 500px) { div.btns.grid3>a { width: calc(100%/1 - 16px); } } div.btns.grid4>a { width: calc(100%/4 - 16px); } @media screen and (max-width: 1024px) { div.btns.grid4>a { width: calc(100%/3 - 16px); } } @media screen and (max-width: 768px) { div.btns.grid4>a { width: calc(100%/3 - 16px); } } @media screen and (max-width: 500px) { div.btns.grid4>a { width: calc(100%/2 - 16px); } } div.btns.grid5>a { width: calc(100%/5 - 16px); } @media screen and (max-width: 1024px) { div.btns.grid5>a { width: calc(100%/4 - 16px); } } @media screen and (max-width: 768px) { div.btns.grid5>a { width: calc(100%/3 - 16px); } } @media screen and (max-width: 500px) { div.btns.grid5>a { width: calc(100%/2 - 16px); } } div.btns a { transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; margin: 8px; margin-top: calc(1.25 * 16px + 32px); min-width: 120px; font-weight: bold; display: flex; justify-content: flex-start; align-content: center; align-items: center; flex-direction: column; padding: 8px; text-align: center; background: #f6f6f6; border-radius: 4px; } div.btns a>img:first-child, div.btns a>i:first-child { transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; height: 64px; width: 64px; box-shadow: 0 1px 2px 0px rgba(0,0,0,0.1); margin: 16px 8px 4px 8px; margin-top: calc(-1.25 * 16px - 32px); border: 2px solid #fff; background: #fff; line-height: 60px; font-size: 28px; } div.btns a>img:first-child.auto, div.btns a>i:first-child.auto { width: auto; } div.btns a>i:first-child { color: #fff; background: #2196f3; } div.btns a p, div.btns a b { margin: 0.25em; font-weight: normal; line-height: 1.25; word-wrap: break-word; } div.btns a b { font-weight: bold; line-height: 1.3; } div.btns a img { margin: 0.4em auto; } div.btns a:not([href]) { cursor: default; color: inherit; } div.btns a[href]:hover { background: rgba(255,87,34,0.15); } div.btns a[href]:hover, div.btns a[href]:hover b { color: #ff5722; } div.btns a[href]:hover>img:first-child, div.btns a[href]:hover>i:first-child { transform: scale(1.1) translateY(-8px); box-shadow: 0 4px 8px 0px rgba(0,0,0,0.1); } div.btns a[href]:hover>i:first-child { background: #ff5722; } div.btns.circle a>img:first-child, div.btns.circle a>i:first-child { border-radius: 32px; } div.btns.rounded a>img:first-child, div.btns.rounded a>i:first-child { border-radius: 16px; } article .checkbox { display: flex; font-size: 0.9375rem; align-items: center; /* Checkbox */ /* Radio */ /* Colors */ } article .checkbox input { transform: translate(0, -1px); -webkit-appearance: none; -moz-appearance: none; -ms-appearance: none; -o-appearance: none; appearance: none; position: relative; height: 16px; width: 16px; transition: all 0.15s ease-out 0s; cursor: pointer; display: inline-block; outline: none; border-radius: 2px; flex-shrink: 0; margin-right: 8px; } article .checkbox input[type=checkbox]:before, article .checkbox input[type=checkbox]:after { position: absolute; content: \"\"; background: #fff; } article .checkbox input[type=checkbox]:before { left: 1px; top: 5px; width: 0px; height: 2px; transition: all 0.2s ease-in; transform: rotate(45deg); -webkit-transform: rotate(45deg); -moz-transform: rotate(45deg); -ms-transform: rotate(45deg); -o-transform: rotate(45deg); } article .checkbox input[type=checkbox]:after { right: 7px; bottom: 3px; width: 2px; height: 0px; transition: all 0.2s ease-out; transform: rotate(40deg); -webkit-transform: rotate(40deg); -moz-transform: rotate(40deg); -ms-transform: rotate(40deg); -o-transform: rotate(40deg); transition-delay: 0.25s; } article .checkbox input[type=checkbox]:checked:before { left: 0px; top: 7px; width: 6px; height: 2px; } article .checkbox input[type=checkbox]:checked:after { right: 3px; bottom: 1px; width: 2px; height: 10px; } article .checkbox.minus input[type=checkbox]:before { transform: rotate(0); left: 1px; top: 5px; width: 0px; height: 2px; } article .checkbox.minus input[type=checkbox]:after { transform: rotate(0); left: 1px; top: 5px; width: 0px; height: 2px; } article .checkbox.minus input[type=checkbox]:checked:before { left: 1px; top: 5px; width: 10px; height: 2px; } article .checkbox.minus input[type=checkbox]:checked:after { left: 1px; top: 5px; width: 10px; height: 2px; } article .checkbox.plus input[type=checkbox]:before { transform: rotate(0); left: 1px; top: 5px; width: 0px; height: 2px; } article .checkbox.plus input[type=checkbox]:after { transform: rotate(0); left: 5px; top: 1px; width: 2px; height: 0px; } article .checkbox.plus input[type=checkbox]:checked:before { left: 1px; top: 5px; width: 10px; height: 2px; } article .checkbox.plus input[type=checkbox]:checked:after { left: 5px; top: 1px; width: 2px; height: 10px; } article .checkbox.times input[type=checkbox]:before { transform: rotate(45deg); left: 3px; top: 1px; width: 0px; height: 2px; } article .checkbox.times input[type=checkbox]:after { transform: rotate(135deg); right: 3px; top: 1px; width: 0px; height: 2px; } article .checkbox.times input[type=checkbox]:checked:before { left: 1px; top: 5px; width: 10px; height: 2px; } article .checkbox.times input[type=checkbox]:checked:after { right: 1px; top: 5px; width: 10px; height: 2px; } article .checkbox input[type=radio] { border-radius: 50%; } article .checkbox input[type=radio]:before { content: \"\"; display: block; width: 8px; height: 8px; border-radius: 50%; margin: 2px; transform: scale(0); transition: all 0.25s ease-out; } article .checkbox input[type=radio]:checked:before { transform: scale(1); } article .checkbox input { border: 2px solid #2196f3; } article .checkbox input[type=checkbox]:checked { background: #2196f3; } article .checkbox input[type=radio]:checked:before { background: #2196f3; } article .checkbox.red input { border-color: #fe5f58; } article .checkbox.red input[type=checkbox]:checked { background: #fe5f58; } article .checkbox.red input[type=radio]:checked:before { background: #fe5f58; } article .checkbox.green input { border-color: #3dc550; } article .checkbox.green input[type=checkbox]:checked { background: #3dc550; } article .checkbox.green input[type=radio]:checked:before { background: #3dc550; } article .checkbox.yellow input { border-color: #ffbd2b; } article .checkbox.yellow input[type=checkbox]:checked { background: #ffbd2b; } article .checkbox.yellow input[type=radio]:checked:before { background: #ffbd2b; } article .checkbox.cyan input { border-color: #1bcdfc; } article .checkbox.cyan input[type=checkbox]:checked { background: #1bcdfc; } article .checkbox.cyan input[type=radio]:checked:before { background: #1bcdfc; } article .checkbox.blue input { border-color: #2196f3; } article .checkbox.blue input[type=checkbox]:checked { background: #2196f3; } article .checkbox.blue input[type=radio]:checked:before { background: #2196f3; } article .checkbox p { display: inline-block; margin-top: 0 !important; margin-bottom: 0 !important; } div.dropmenu { display: inline-block; position: relative; line-height: 2.4; cursor: default; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; color: rgba(68,68,68,0.85); background: #f6f6f6; border-radius: 4px; border: 1px solid #e7e7e7; padding: 0 16px; padding-top: 1px; font-size: 0.875rem; font-weight: bold; } div.dropmenu:hover { background: #e8f4fd; border-color: #cce7fb; } div.dropmenu:hover >ul { display: block; margin-left: -8px; margin-top: -4px; } div.dropmenu ul>li { list-style: none; } div.dropmenu ul>li >a:hover { text-decoration: none !important; } div.dropmenu .list-v .list-v { left: calc(100% - 0.5 * 16px); } details { display: block; padding: 16px; margin: 0.4rem 0; border-radius: 4px; background: #fff; font-size: 95%; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; border: 1px solid #f6f6f6; } details p { font-size: 0.9375rem; } details summary { cursor: pointer; padding: 16px; margin: -16px; border-radius: 4px; color: rgba(85,85,85,0.7); font-size: 0.875rem; font-weight: bold; position: relative; line-height: normal; } details summary > p, details summary > h1, details summary > h2, details summary > h3, details summary > h4, details summary > h5, details summary > h6 { display: inline; border-bottom: none !important; } details summary:hover { color: #555; } details summary:hover:after { position: absolute; content: '+'; text-align: center; top: 50%; transform: translateY(-50%); right: 16px; } details >summary { background: #f6f6f6; } details[blue] { border-color: #e8f4fd; } details[blue] >summary { background: #e8f4fd; } details[cyan] { border-color: #e8fafe; } details[cyan] >summary { background: #e8fafe; } details[green] { border-color: #ebf9ed; } details[green] >summary { background: #ebf9ed; } details[yellow] { border-color: #fff8e9; } details[yellow] >summary { background: #fff8e9; } details[red] { border-color: #feefee; } details[red] >summary { background: #feefee; } details[open] { border-color: rgba(85,85,85,0.2); } details[open] >summary { border-bottom: 1px solid rgba(85,85,85,0.2); border-bottom-left-radius: 0; border-bottom-right-radius: 0; } details[open][blue] { border-color: rgba(33,150,243,0.3); } details[open][blue] >summary { border-bottom-color: rgba(33,150,243,0.3); } details[open][cyan] { border-color: rgba(27,205,252,0.3); } details[open][cyan] >summary { border-bottom-color: rgba(27,205,252,0.3); } details[open][green] { border-color: rgba(61,197,80,0.3); } details[open][green] >summary { border-bottom-color: rgba(61,197,80,0.3); } details[open][yellow] { border-color: rgba(255,189,43,0.3); } details[open][yellow] >summary { border-bottom-color: rgba(255,189,43,0.3); } details[open][red] { border-color: rgba(254,95,88,0.3); } details[open][red] >summary { border-bottom-color: rgba(254,95,88,0.3); } details[open] >summary { color: #555; margin-bottom: 0; } details[open] >summary:hover:after { content: '-'; } details[open] >div.content { padding: 16px; margin: -16px; margin-top: 0; } details[open] >div.content p>a:hover { text-decoration: underline; } details[open] >div.content > p:first-child, details[open] >div.content > .tabs:first-child, details[open] >div.content > ul:first-child, details[open] >div.content > ol:first-child, details[open] >div.content > .highlight:first-child, details[open] >div.content > .note:first-child, details[open] >div.content > .fancybox:first-child, details[open] >div.content > details:first-child { margin-top: 0; } details[open] >div.content > p:last-child, details[open] >div.content > .tabs:last-child, details[open] >div.content > ul:last-child, details[open] >div.content > ol:last-child, details[open] >div.content > .highlight:last-child, details[open] >div.content > .note:last-child, details[open] >div.content > .fancybox:last-child, details[open] >div.content > details:last-child { margin-bottom: 0; } audio, video { border-radius: 4px; max-width: 100%; } video { z-index: 1; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } video:hover { box-shadow: 0 4px 8px 0px rgba(0,0,0,0.24), 0 8px 16px 0px rgba(0,0,0,0.24); } div.video { line-height: 0; text-align: center; } div.videos { max-width: calc(100% + 2 * 4px); display: flex; flex-wrap: wrap; justify-content: flex-start; align-items: flex-end; margin: 0.4rem -4px; } div.videos .video, div.videos iframe { width: 100%; margin: 4px; } div.videos iframe { border-radius: 4px; width: 100%; min-height: 300px; } div.videos.left { justify-content: flex-start; } div.videos.center { justify-content: center; } div.videos.right { justify-content: flex-end; } div.videos.stretch { align-items: stretch; } div.videos[col='1'] .video, div.videos[col='1'] iframe { width: 100%; } div.videos[col='2'] .video, div.videos[col='2'] iframe { width: calc(50% - 2 * 4px); } div.videos[col='3'] .video, div.videos[col='3'] iframe { width: calc(33.33% - 2 * 4px); } div.videos[col='4'] .video, div.videos[col='4'] iframe { width: calc(25% - 2 * 4px); } div.note { position: relative; margin-top: 0.4rem; margin-bottom: 0.4rem; padding: 0.5rem 16px 0.4rem 16px; padding-left: calc(16px + 16px); border-radius: 4px; background: #f5f5f5; border-left: 4px solid #696969; } div.note h2, div.note h3, div.note h4, div.note h5, div.note h6 { margin-top: 3px; margin-bottom: 0; padding-top: 0 !important; border-bottom: initial; } div.note p, div.note ul, div.note ol, div.note blockquote, div.note img { font-size: 0.9375rem; margin-top: 0.4rem; margin-bottom: 0.4rem; } div.note::before { position: absolute; top: calc(50% - 24px * 0.5); left: 4px; width: 24px; height: 24px; text-align: center; font-weight: 600; line-height: 24px; vertical-align: middle; font-family: 'Font Awesome 5 Free'; } div.note::before { color: #696969; content: '\\f054'; } div.note::before { content: '\\f054'; } div.note.quote { background: #e8f4fd; border-color: #2196f3; } div.note.quote::before { color: #2196f3; content: '\\f10d'; } div.note.info { background: #e8f4fd; border-color: #2196f3; } div.note.info::before { color: #2196f3; content: '\\f129'; } div.note.success, div.note.done { background: #ebf9ed; border-color: #3dc550; } div.note.success::before, div.note.done::before { color: #3dc550; content: '\\f00c'; } div.note.warning { background: #fff8e9; border-color: #ffbd2b; } div.note.warning::before { color: #ffbd2b; content: '\\f12a'; } div.note.danger, div.note.error { background: #feefee; border-color: #fe5f58; } div.note.danger::before, div.note.error::before { color: #fe5f58; content: '\\f00d'; } div.note.radiation::before { content: '\\f7b9'; } div.note.bug::before { content: '\\f188'; } div.note.idea::before { content: '\\f0eb'; } div.note.link::before { content: '\\f0c1'; } div.note.paperclip::before { content: '\\f0c6'; } div.note.todo::before { content: '\\f0ae'; } div.note.message::before { content: '\\f4ad'; } div.note.guide::before { content: '\\f277'; } div.note.download::before { content: '\\f019'; } div.note.up::before { content: '\\f102'; } div.note.undo::before { content: '\\f2ea'; } div.note.play::before { content: '\\f144'; } div.note.clear { background: none; border-color: none; } div.note.light { background: #f5f5f5; border-color: #a1a1a1; } div.note.light::before { color: #a1a1a1; } div.note.gray { background: #f5f5f5; border-color: #696969; } div.note.gray::before { color: #696969; } div.note.red { background: #feefee; border-color: #fe5f58; } div.note.red::before { color: #fe5f58; } div.note.yellow { background: #fff8e9; border-color: #ffbd2b; } div.note.yellow::before { color: #ffbd2b; } div.note.green { background: #ebf9ed; border-color: #3dc550; } div.note.green::before { color: #3dc550; } div.note.cyan { background: #e8fafe; border-color: #1bcdfc; } div.note.cyan::before { color: #1bcdfc; } div.note.blue { background: #e8f4fd; border-color: #2196f3; } div.note.blue::before { color: #2196f3; } p.p.subtitle { font-weight: bold; color: #2196f3; font-size: 1rem !important; padding-top: 0.8rem; } p.p.subtitle:first-child { padding-top: 0.4rem; } span.p.logo, p.p.logo { font-family: \"Varela Round\", \"PingFang SC\", \"Microsoft YaHei\", Helvetica, Arial, Helvetica, monospace; } span.p.code, p.p.code { font-family: Menlo, UbuntuMono, Monaco, monospace, courier, sans-serif; } span.p.left, p.p.left { display: block; text-align: left; } span.p.center, p.p.center { display: block; text-align: center; } span.p.right, p.p.right { display: block; text-align: right; } span.p.small, p.p.small { font-size: 0.875rem; } span.p.large, p.p.large { font-size: 3rem; line-height: 1.4; } span.p.huge, p.p.huge { font-size: 4rem; line-height: 1.4; } span.p.ultra, p.p.ultra { font-size: 6rem; line-height: 1.4; } span.p.small, p.p.small, span.p.large, p.p.large, span.p.huge, p.p.huge, span.p.ultra, p.p.ultra { margin: 0; padding: 0; } span.p.bold, p.p.bold { font-weight: bold; } span.p.h1, p.p.h1 { font-size: 1.625rem; color: #444; padding-top: 0.8rem; } span.p.h2, p.p.h2 { font-size: 1.375rem; color: #444; padding-top: 0.8rem; border-bottom: 1px solid rgba(68,68,68,0.1); } span.p.h3, p.p.h3 { font-size: 1.25rem; color: #444; padding-top: 0.8rem; } span.p.h4, p.p.h4 { font-size: 1.125rem; color: #444; padding-top: 0.8rem; } span.p.h5, p.p.h5 { font-size: 1rem; color: #444; padding-top: 0.6rem; } span.p.red, p.p.red { color: #fe5f58; } span.p.yellow, p.p.yellow { color: #ffbd2b; } span.p.green, p.p.green { color: #3dc550; } span.p.cyan, p.p.cyan { color: #1bcdfc; } span.p.blue, p.p.blue { color: #2196f3; } span.p.gray, p.p.gray { color: #999; } div.tabs { display: block; position: relative; margin-top: 0.4rem; margin-bottom: 0.4rem; border-radius: 4px; background: #fff; border: 1px solid rgba(85,85,85,0.2); font-size: 95%; } div.tabs p { font-size: 95%; } div.tabs .highlight, div.tabs p, div.tabs ul, div.tabs ol, div.tabs div.note, div.tabs details { margin-top: 0.4rem; margin-bottom: 0.4rem; } div.tabs ul.nav-tabs { display: flex; overflow-x: auto; white-space: nowrap; justify-content: flex-start; margin: 0 !important; padding: 8px 8px 0 8px; background: #f6f6f6; border-radius: 4px 4px 0 0; line-height: 1.5; } div.tabs ul.nav-tabs li.tab { list-style-type: none; margin-top: 0; margin-bottom: 0; } div.tabs ul.nav-tabs li.tab:last-child { padding-right: 16px; } div.tabs ul.nav-tabs li.tab a { display: block; cursor: pointer; border-radius: 4px 4px 0 0; padding: 8px; text-align: center; font-size: 0.875rem; line-height: inherit; font-weight: bold; color: rgba(68,68,68,0.65); border: 1px solid transparent; } div.tabs ul.nav-tabs li.tab a:hover { color: #555; } div.tabs ul.nav-tabs li.tab a i { pointer-events: none; } div.tabs ul.nav-tabs li.tab.active a { cursor: default; color: #555; background: #fff; border: 1px solid rgba(85,85,85,0.2); border-bottom: 1px solid #fff; } div.tabs .tab-content { border-top: 1px solid rgba(85,85,85,0.2); margin-top: -1px; } div.tabs .tab-content .tab-pane { padding: 16px; } div.tabs .tab-content .tab-pane:not(.active) { display: none; } div.tabs .tab-content .tab-pane.active { display: block; } div.tabs .tab-content .tab-pane > p:first-child, div.tabs .tab-content .tab-pane > .tabs:first-child, div.tabs .tab-content .tab-pane > ul:first-child, div.tabs .tab-content .tab-pane > ol:first-child, div.tabs .tab-content .tab-pane > .highlight:first-child, div.tabs .tab-content .tab-pane > .note:first-child, div.tabs .tab-content .tab-pane > .fancybox:first-child { margin-top: 0; } div.tabs .tab-content .tab-pane > p:last-child, div.tabs .tab-content .tab-pane > .tabs:last-child, div.tabs .tab-content .tab-pane > ul:last-child, div.tabs .tab-content .tab-pane > ol:last-child, div.tabs .tab-content .tab-pane > .highlight:last-child, div.tabs .tab-content .tab-pane > .note:last-child, div.tabs .tab-content .tab-pane > .fancybox:last-child { margin-bottom: 0; } pre { position: relative; } .hljs { margin: -16px !important; padding: 16px !important; -webkit-font-smoothing: auto; -moz-osx-font-smoothing: auto; } .hljs::-webkit-scrollbar { height: 4px; width: 4px; } .hljs::-webkit-scrollbar-track-piece { background: transparent; } .hljs::-webkit-scrollbar-thumb { background: rgba(118,118,118,0.4); cursor: pointer; border-radius: 2px; } .hljs::-webkit-scrollbar-thumb:hover { background: #767676; } .hljs:before { position: absolute; top: 0; right: 0; color: rgba(68,68,68,0.65); font-size: 0.75rem; padding: 4px 8px; } .hljs.md:before, .hljs.markdown:before { content: \"md\"; } .hljs.yaml:before { content: \"YAML\"; } .hljs.json:before { content: \"JSON\"; } .hljs.html:before { content: \"HTML\"; } .hljs.js:before, .hljs.javascript:before { content: \"JS\"; } .hljs.css:before { content: \"CSS\"; } .hljs.less:before { content: \"Less\"; } .hljs.stylus:before { content: \"Stylus\"; } .hljs.bash:before { content: \"bash\"; } .hljs.shell:before { content: \"shell\"; } .hljs.sh:before { content: \"sh\"; } .hljs.ini:before { content: \"ini\"; } .hljs.c:before { content: \"C\"; } .hljs.cpp:before { content: \"C++\"; } .hljs.objc:before, .hljs.objectivec:before { content: \"Objective-C\"; } .hljs.swift:before { content: \"Swift\"; } .hljs.java:before { content: \"Java\"; } .hljs.python:before { content: \"Python\"; } .hljs.php:before { content: \"PHP\"; } .hljs.rust:before { content: \"Rust\"; } .hljs.sql:before { content: \"SQL\"; } .hljs.ruby:before { content: \"Ruby\"; } .hljs.makefile:before { content: \"Makefile\"; } .hljs.go:before { content: \"Go\"; } .hljs.typescript:before { content: \"TypeScript\"; } .highlight { position: relative; width: 100%; margin: 0.4rem 0; display: block; background: #f6f6f6; font-size: 0.8125rem; font-family: Menlo, UbuntuMono, Monaco, monospace, courier, sans-serif; border-radius: 4px; border: 1px solid #e7e7e7; line-height: 1.5; -webkit-font-smoothing: auto; -moz-osx-font-smoothing: auto; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } .highlight figcaption { position: sticky; left: 0; padding: 4px 8px 4px 8px; background-color: #eaeaea; border-top-left-radius: 4px; border-top-right-radius: 4px; } .highlight >table { overflow: auto; display: block; margin: 0; background-color: transparent; border: none; } .highlight >table td, .highlight >table th { padding: 0; border: none; line-height: 1.5; } .highlight >table tr { background-color: transparent; } .highlight >table tr:hover { background-color: transparent; } .highlight >table .gutter { -moz-user-select: none; -ms-user-select: none; -webkit-user-select: none; user-select: none; padding: 0 12px; text-align: right; border-width: 0; margin-left: 0; position: sticky; left: 0; z-index: 1; background-color: #e9e9e9; } .highlight >table .gutter pre { color: rgba(68,68,68,0.65); } .highlight >table pre { background: transparent; margin: 0; padding: 0; border: none; } .highlight >table .code { padding: 16px; vertical-align: top; background-color: transparent; } .highlight >table .code:before { content: \"\"; position: absolute; top: 0; right: 0; color: rgba(68,68,68,0.65); font-size: 0.75rem; padding: 4px 8px; } .highlight.md .code:before, .highlight.markdown .code:before { content: \"md\"; } .highlight.yaml .code:before { content: \"YAML\"; } .highlight.json .code:before { content: \"JSON\"; } .highlight.diff .code:before { content: \"diff\"; } .highlight.html .code:before { content: \"HTML\"; } .highlight.js .code:before, .highlight.javascript .code:before { content: \"JS\"; } .highlight.css .code:before { content: \"CSS\"; } .highlight.less .code:before { content: \"Less\"; } .highlight.stylus .code:before { content: \"Stylus\"; } .highlight.bash .code:before { content: \"bash\"; } .highlight.shell .code:before { content: \"shell\"; } .highlight.sh .code:before { content: \"sh\"; } .highlight.ini .code:before { content: \"ini\"; } .highlight.c .code:before { content: \"C\"; } .highlight.cpp .code:before { content: \"C++\"; } .highlight.objc .code:before, .highlight.objectivec .code:before { content: \"Objective-C\"; } .highlight.swift .code:before { content: \"Swift\"; } .highlight.java .code:before { content: \"Java\"; } .highlight.python .code:before { content: \"Python\"; } .highlight.php .code:before { content: \"PHP\"; } .highlight.rust .code:before { content: \"Rust\"; } .highlight.sql .code:before { content: \"SQL\"; } .highlight.ruby .code:before { content: \"Ruby\"; } .highlight.makefile .code:before { content: \"Makefile\"; } .highlight.go .code:before { content: \"Go\"; } .highlight.typescript .code:before { content: \"TypeScript\"; } .highlight pre .line, .highlight pre .params { color: rgba(68,68,68,0.9); } .highlight pre .line .addition { color: #3fa33f; } .highlight pre .line .deletion { color: #ee2b29; } .highlight pre .marked { background-color: rgba(254,213,66,0.4); padding: 2px 8px 2px 0; border-radius: 2px; width: 100%; } .highlight pre .title, .highlight pre .attr, .highlight pre .attribute { color: #3f51b5; } .highlight pre .comment { color: rgba(85,85,85,0.5); } .highlight pre .keyword, .highlight pre .meta-keyword, .highlight pre .javascript .function { color: #9c27b0; } .highlight pre .type, .highlight pre .built_in, .highlight pre .tag .name { color: #4ba7ee; } .highlight pre .variable, .highlight pre .regexp, .highlight pre .ruby .constant, .highlight pre .xml .tag .title, .highlight pre .xml .pi, .highlight pre .xml .doctype, .highlight pre .html .doctype, .highlight pre .css .id, .highlight pre .css .class, .highlight pre .css .pseudo { color: #fd8607; } .highlight pre .number, .highlight pre .preprocessor, .highlight pre .literal, .highlight pre .constant { color: #fd8607; } .highlight pre .class, .highlight pre .ruby .class .title, .highlight pre .css .rules .attribute { color: #ff9800; } .highlight pre .string, .highlight pre .meta-string { color: #449e48; } .highlight pre .value, .highlight pre .inheritance, .highlight pre .header, .highlight pre .ruby .symbol, .highlight pre .xml .cdata { color: #4caf50; } .highlight pre .css .hexcolor { color: #6cc; } .highlight pre .function, .highlight pre .python .decorator, .highlight pre .python .title, .highlight pre .ruby .function .title, .highlight pre .ruby .title .keyword, .highlight pre .perl .sub, .highlight pre .javascript .title, .highlight pre .coffeescript .title { color: #69c; } .highlight.html .line .tag .name, .highlight.css .line .tag .name, .highlight.less .line .tag .name, .highlight.stylus .line .tag .name, .highlight.html .line .selector-tag, .highlight.css .line .selector-tag, .highlight.less .line .selector-tag, .highlight.stylus .line .selector-tag { color: #ee2b29; } .highlight.html .line .selector-class, .highlight.css .line .selector-class, .highlight.less .line .selector-class, .highlight.stylus .line .selector-class, .highlight.html .line .selector-attr, .highlight.css .line .selector-attr, .highlight.less .line .selector-attr, .highlight.stylus .line .selector-attr { color: #fd8607; } .highlight.html .line .attribute, .highlight.css .line .attribute, .highlight.less .line .attribute, .highlight.stylus .line .attribute { color: #3f51b5; } .highlight.html .line .number, .highlight.css .line .number, .highlight.less .line .number, .highlight.stylus .line .number { color: #17afca; } .highlight.objc .line .meta, .highlight.objectivec .line .meta, .highlight.swift .line .meta, .highlight.c .line .meta { color: #9c27b0; } .highlight.objc .line .meta-string, .highlight.objectivec .line .meta-string, .highlight.swift .line .meta-string, .highlight.c .line .meta-string, .highlight.objc .line .string, .highlight.objectivec .line .string, .highlight.swift .line .string, .highlight.c .line .string { color: #fb3f1b; } .highlight.objc .line .class, .highlight.objectivec .line .class, .highlight.swift .line .class, .highlight.c .line .class { color: rgba(68,68,68,0.9); } .highlight.objc .line .class .title, .highlight.objectivec .line .class .title, .highlight.swift .line .class .title, .highlight.c .line .class .title { color: #1e80f0; } .highlight.objc .line .comment, .highlight.objectivec .line .comment, .highlight.swift .line .comment, .highlight.c .line .comment { color: #3fa33f; } .highlight.json .line .attr { color: #e24f5a; } .highlight.json .line .literal { color: #3f51b5; } .highlight.yaml .line .attr { color: #e24f5a; } .alert { display: none; position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%); z-index: 999; text-align: center; padding: 30px 36px 29px 36px; border-radius: 8px; box-shadow: 0 1px 2px 0px rgba(0,0,0,0.1); font-weight: bold; font-size: 1.125rem; } .alert.alert-success { color: #247830; background: #daf4de; } .alert.alert-info { color: #028baf; background-color: #e4f9ff; } .alert.alert-warning { color: #c48700; background-color: #fffdf7; } .alert.alert-danger { color: #ef0b01; background-color: #fff; } @media screen and (max-width: 500px) { .l_header .list-v .aplayer, .l_header .list-v .aplayer-pic { border-radius: 4px; width: 64px; height: 64px; } } .highlight { position: relative; } .btn-copy { z-index: 1; display: inline-block; cursor: pointer; border: none; -moz-user-select: none; -ms-user-select: none; -webkit-user-select: none; user-select: none; -webkit-appearance: none; font-family: Menlo, Menlo, UbuntuMono, Monaco, monospace, courier, sans-serif; font-size: calc(0.8125rem - 1px); font-weight: bold; padding: 4px 8px; color: rgba(68,68,68,0.65); background: #fff; border-radius: 2px; box-shadow: 0 1px 2px 0px rgba(0,0,0,0.1); position: absolute; top: 0; right: 0; opacity: 0; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } .btn-copy >i { margin-right: 4px; } .btn-copy:hover { color: #ff5722; background: #ffeee8; } .highlight:hover .btn-copy { opacity: 1; } .article pre:hover .btn-copy { opacity: 1; } .darkmode-toggle { z-index: 100000; } .darkmode--activated .MiniValine .vpage .more { background: #21232f; } .darkmode--activated img { filter: brightness(30%); } .darkmode--activated .MiniValine .vlist .vcard .vcomment-body .text-wrapper .vcomment.expand:before { background: linear-gradient(180deg, rgba(246,246,246,0), rgba(0,0,0,0.9)); } .darkmode--activated .MiniValine .vlist .vcard .vcomment-body .text-wrapper .vcomment.expand:after { background: rgba(0,0,0,0.9); } .darkmode--activated .MiniValine .vlist .vcard .vcomment-body .text-wrapper .vcomment pre { background: #282c34; border: 1px solid #282c34; } .darkmode--activated .MiniValine .vinputs-area .vextra-area .vsmile-icons { background: transparent; } .darkmode--activated .container { background: #21232f; } .darkmode--activated .blur { background: #21232f !important; } .darkmode--activated .loading-bar-wrapper { background: #21232f; } .darkmode--activated .nav-main .u-search-input { background: #87ceeb !important; } .darkmode--activated .list-v { background: #21232f; } .darkmode--activated .vsubmit { background: #21232f; } .darkmode--activated .l_header ul>li>a:hover { background: rgba(33,150,243,0.2); } .darkmode--activated #archive-page .archive .archive-post a:hover { background: rgba(33,150,243,0.2); } .darkmode--activated .l_main .article .prev-next>a { background: #21232f; } .darkmode--activated .article blockquote { background: #21232f; } .darkmode--activated .highlight>table { background: #282c34; } .darkmode--activated .gutter { background: #282c34 !important; background-color: #282c34 !important; } .darkmode--activated .highlight figcaption { background-color: #21252b; } .darkmode--activated .highlight { border: 1px solid #21252b !important; background: #282c34; } .darkmode--activated details>summary { background: #282c34; } .darkmode--activated details { border: 1px solid #282c34; background: #282c34; } .darkmode--activated .note { background: #282c34 !important; } .darkmode--activated .nav-tabs { background: #282c34 !important; } .darkmode--activated .tabs { background: #282c34 !important; } .darkmode--activated .btns a { background: #282c34 !important; } .darkmode--activated .tab.active a { background: #87ceeb !important; } .darkmode--activated .widget>.content ul.entry a:hover, .darkmode--activated .widget>.content ul.popular-posts a:hover { background: rgba(33,150,243,0.2); } div.gallery { margin: 0.4rem 0; overflow: hidden; } div.gallery >.fancybox, div.gallery >p>.fancybox { margin: 1px; padding: 0; position: relative; } div.gallery >.fancybox .image-caption, div.gallery >p>.fancybox .image-caption { opacity: 0; transform: translateY(100%); transition: all 0.3s ease; pointer-events: none; position: absolute; width: 100%; bottom: 0; text-align: center; background: rgba(0,0,0,0.3); color: #fff; } div.gallery >.fancybox .image-caption:empty, div.gallery >p>.fancybox .image-caption:empty { display: none; } div.gallery >.fancybox:hover .image-caption, div.gallery >p>.fancybox:hover .image-caption { opacity: 1; transform: translateY(0); } div.gallery, div.gallery >p { display: flex; justify-content: center; align-items: center; flex-wrap: nowrap; padding: 0 !important; align-items: stretch; } div.gallery[col]>p { flex-wrap: wrap; justify-content: flex-start; } div.gallery[col='2']>p>.fancybox { width: calc(50% - 2 * 1px); } div.gallery[col='3']>p>.fancybox { width: calc(33.33% - 2 * 1px); } div.gallery[col='4']>p>.fancybox { width: calc(25% - 2 * 1px); } div.gallery[col='5']>p>.fancybox { width: calc(20% - 2 * 1px); } div.gallery[col='6']>p>.fancybox { width: calc(16.66% - 2 * 1px); } div.gallery[col='7']>p>.fancybox { width: calc(14.2857% - 2 * 1px); } div.gallery[col='8']>p>.fancybox { width: calc(12.5% - 2 * 1px); } div.gallery >p { margin: 0; } div.gallery.left, div.gallery.left>p { justify-content: flex-start; } div.gallery.center, div.gallery.center>p { justify-content: center; } div.gallery.right, div.gallery.right>p { justify-content: flex-end; } div.gallery.stretch, div.gallery.stretch>p { align-items: stretch; } div.gallery.stretch img, div.gallery.stretch>p img { transform: scale(1.5); } .fancybox-container .fancybox-stage { cursor: zoom-out; } .fancybox { display: flex; flex-direction: column; justify-content: center; align-items: center; flex-wrap: nowrap; padding: 0 !important; overflow: hidden; border-radius: 2px; } @media screen and (max-width: 500px) { .fancybox { border-radius: 1px; } } .fancybox a { line-height: 0; margin: 0; align-items: stretch; cursor: zoom-in; } .fancybox .gallery { overflow: hidden; } .fancybox .image-caption { font-size: 0.8125rem; padding-top: 0.4rem; padding-bottom: 0.4rem; color: rgba(68,68,68,0.65); } .article mjx-container { font-family: Menlo, UbuntuMono, Monaco, monospace, courier, sans-serif; background: rgba(255,255,255,0); padding: 16px 8px; border-radius: 4px; min-width: 0 !important; } .article mjx-container[jax=\"CHTML\"][display=\"true\"], .article .has-jax { overflow: auto hidden; } .article mjx-container + br { display: none; } #loading-bar-wrapper { position: fixed; width: 100%; top: 0; height: 2px; z-index: 99999; } .loading-circle { display: none; height: 100%; width: 100%; position: fixed; top: 0; left: 0; z-index: 999999; background-color: rgba(250,250,250,0.9); } .loading-circle img { width: 280px; height: 210px; position: relative; top: 45%; left: 50%; margin-left: -140px; margin-top: -105px; } #loader-circle { display: block; position: relative; left: 50%; top: 50%; width: 150px; height: 150px; margin: -75px 0 0 -75px; border-radius: 50%; border: 3px solid transparent; border-top-color: #ff5a5a; -webkit-animation: spin 1s linear infinite; animation: spin 1s linear infinite; } #loader-circle:before { content: \"\"; position: absolute; top: 5px; left: 5px; right: 5px; bottom: 5px; border-radius: 50%; border: 3px solid transparent; border-top-color: #5af33f; -webkit-animation: spin 3s linear infinite; animation: spin 3s linear infinite; } #loader-circle:after { content: \"\"; position: absolute; top: 15px; left: 15px; right: 15px; bottom: 15px; border-radius: 50%; border: 3px solid transparent; border-top-color: #6dc9ff; -webkit-animation: spin 2s linear infinite; animation: spin 2s linear infinite; } @-webkit-keyframes spin { 0% { -webkit-transform: rotate(0deg); -ms-transform: rotate(0deg); transform: rotate(0deg); } 100% { -webkit-transform: rotate(360deg); -ms-transform: rotate(360deg); transform: rotate(360deg); } } @-moz-keyframes spin { 0% { -webkit-transform: rotate(0deg); -ms-transform: rotate(0deg); transform: rotate(0deg); } 100% { -webkit-transform: rotate(360deg); -ms-transform: rotate(360deg); transform: rotate(360deg); } } @-webkit-keyframes spin { 0% { -webkit-transform: rotate(0deg); -ms-transform: rotate(0deg); transform: rotate(0deg); } 100% { -webkit-transform: rotate(360deg); -ms-transform: rotate(360deg); transform: rotate(360deg); } } @-o-keyframes spin { 0% { -webkit-transform: rotate(0deg); -ms-transform: rotate(0deg); transform: rotate(0deg); } 100% { -webkit-transform: rotate(360deg); -ms-transform: rotate(360deg); transform: rotate(360deg); } } @keyframes spin { 0% { -webkit-transform: rotate(0deg); -ms-transform: rotate(0deg); transform: rotate(0deg); } 100% { -webkit-transform: rotate(360deg); -ms-transform: rotate(360deg); transform: rotate(360deg); } } .l_main #comments { position: relative; } .l_main #comments #valine_container >i { display: block; margin: 16px auto; } .l_main #comments #valine_container img { display: inline; } .l_main #comments #valine_container .vwrap { border-radius: 8px; border-style: dashed; border: 1px dashed rgba(68,68,68,0.3); transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } .l_main #comments #valine_container .vwrap:hover { border: 1px dashed #2196f3; } .l_main #comments #valine_container .vwrap .cancel-reply { margin-top: 0; margin-bottom: 0; } .l_main #comments #valine_container .vwrap .vheader .vinput { border-radius: 0; border-bottom: 1px dashed rgba(68,68,68,0.3); } .l_main #comments #valine_container .vwrap .vheader .vinput:hover { border-bottom: 1px dashed #2196f3; } .l_main #comments #valine_container .vwrap .vheader .vinput:focus { border-bottom: 1px solid #2196f3; } .l_main #comments #valine_container .vwrap .vedit .vicon { height: 22px; } .l_main #comments #valine_container .vwrap .vemojis, .l_main #comments #valine_container .vwrap .vpreview { background: #f6f6f6; border-radius: 4px; padding: 8px; } .l_main #comments #valine_container .vwrap .vemojis::-webkit-scrollbar, .l_main #comments #valine_container .vwrap .vpreview::-webkit-scrollbar { height: 4px; width: 4px; } .l_main #comments #valine_container .vwrap .vemojis::-webkit-scrollbar-track-piece, .l_main #comments #valine_container .vwrap .vpreview::-webkit-scrollbar-track-piece { background: transparent; } .l_main #comments #valine_container .vwrap .vemojis::-webkit-scrollbar-thumb, .l_main #comments #valine_container .vwrap .vpreview::-webkit-scrollbar-thumb { background: rgba(118,118,118,0.4); cursor: pointer; border-radius: 2px; } .l_main #comments #valine_container .vwrap .vemojis::-webkit-scrollbar-thumb:hover, .l_main #comments #valine_container .vwrap .vpreview::-webkit-scrollbar-thumb:hover { background: #767676; } .l_main #comments #valine_container .vwrap .vemojis .vemoji, .l_main #comments #valine_container .vwrap .vpreview .vemoji { max-height: 22px; max-width: 100px; } .l_main #comments #valine_container .vwrap .vemojis i, .l_main #comments #valine_container .vwrap .vpreview i { width: auto; padding: 8px; border-radius: 4px; transition: box-shadow 0.2s ease-out, background 0.2s ease-out; } .l_main #comments #valine_container .vwrap .vemojis i:hover, .l_main #comments #valine_container .vwrap .vpreview i:hover { background: #fbfbfb; box-shadow: 1px 1px 2px rgba(0,0,0,0.1), -1px -1px 2px rgba(255,255,255,0.5), inset 8px 8px 16px rgba(0,0,0,0.05), inset -8px -8px 16px rgba(255,255,255,0.4); } .l_main #comments #valine_container .vwrap .vemojis i:active, .l_main #comments #valine_container .vwrap .vpreview i:active { background: #f1f1f1; box-shadow: 0px 0px 0px rgba(0,0,0,0.1), 0px 0px 0px rgba(255,255,255,0.8), inset 2px 2px 4px rgba(0,0,0,0.1), inset -2px -2px 4px #fff, inset -8px -8px 16px rgba(255,255,255,0.4); } .l_main #comments #valine_container .vwrap .vedit .vctrl span { padding: 0; margin: 10px; } .l_main #comments #valine_container .vwrap .vedit span { fill: #555; } .l_main #comments #valine_container .vwrap .vedit span.actived { fill: #2196f3; } .l_main #comments #valine_container .vcount { color: #555; font-size: 0.875rem; padding: 0; font-weight: inherit; } .l_main #comments #valine_container .vcount .vnum { color: #555; font-size: 1.375rem; } .l_main #comments #valine_container button { border: none; padding: 4px 2rem; border-radius: 4px; background: #f1f1f1; color: #444; line-height: 2; font-size: 14px; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } .l_main #comments #valine_container button:hover { color: #ff5722; background: #ffeee8; } .l_main #comments #valine_container button.vmore { width: 100%; padding: 8px 2rem; } .l_main #comments #valine_container .vcards .vquote { border-left: none; } .l_main #comments #valine_container .vcards .vh { border-bottom: 1px dashed rgba(68,68,68,0.1); } .l_main #comments #valine_container .vcards .vimg { border: 1px solid #fff; padding: 0; background: #f6f6f6; } .l_main #comments #valine_container .vcards .vcontent.expand:before { background: linear-gradient(180deg, rgba(255,255,255,0.9), rgba(246,246,246,0.9)); } .l_main #comments #valine_container .vcards .vcontent.expand:after { background: rgba(246,246,246,0.9); color: #444; } .l_main #comments #valine_container .vcards .vhead span.vnick { color: #6e6e6e; cursor: default; } .l_main #comments #valine_container .vcards .vhead a.vnick { color: #ff9800; font-weight: bold; } .l_main #comments #valine_container .vcards .vhead a.vnick:hover { color: #ff5722; } .l_main #comments #valine_container .vcards .vhead .vsys { margin: 2px; padding: 1px 8px; background-color: #f6f6f6; } .l_main #comments #valine_container .vcards .vmeta .vat { font-weight: bold; color: #2196f3; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } .l_main #comments #valine_container .vcards .vmeta .vat:hover { color: #ff5722; text-decoration: underline; } .l_main #comments #valine_container .vcards .vcontent blockquote { padding-top: 0.4rem; padding-bottom: 0.4rem; background: #e8f4fd; border-left: 4px solid #2196f3; border-radius: 4px; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } .l_main #comments #valine_container .vcards .vcontent code { color: #555; font-family: Menlo, UbuntuMono, Monaco, monospace, courier, sans-serif; } .l_main #comments #valine_container .vcards .vcontent pre { background: #f6f6f6; } .l_main #comments #valine_container .vcards .vcontent pre code { border: none; } .l_main #comments #valine_container .vcards .vcontent a { color: #2196f3; line-height: inherit; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } .l_main #comments #valine_container .vcards .vcontent a:hover { color: #ff5722; text-decoration: underline; } .l_main #comments #valine_container .vcards .vcontent p { color: #555; margin-top: 0.4rem; margin-bottom: 0.4rem; line-height: inherit; } .l_main #comments #valine_container .vcards .vcontent .vemoji { max-height: 24px; border-radius: 0; margin-top: -10px; max-width: 100px; } .l_main #comments #valine_container .vempty { color: rgba(68,68,68,0.65); } .l_main #comments #valine_container .vpower, .l_main #comments #valine_container .vpower a { font-size: 0.75rem; } .l_main #comments #valine_container .vpower a { color: #555; } .l_main #comments #valine_container .vpower a:hover { text-decoration: underline; color: #ff5722; } .l_main #comments #valine_container .vinput { color: #444; } .l_main #comments #valine_container p { color: #444; } #archive-page { margin-bottom: 32px; } #archive-page .archive .archive-year { margin-top: 4em; margin-bottom: 1em; } #archive-page .archive .archive-year:first-child { margin-top: 0em; padding-top: 0; } #archive-page .archive .archive-year h2 { margin-top: 1em; } #archive-page .archive .archive-post a { color: #444; width: 100%; display: inline-flex; flex-flow: row nowrap; justify-content: flex-start; align-items: flex-start; background: transparent; border-left: 2px solid transparent; border-radius: 2px; vertical-align: middle; font-size: 0.875rem; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } #archive-page .archive .archive-post a.child { padding-left: 32px; } #archive-page .archive .archive-post a:hover { background: #e8f4fd; border-left: 2px solid #2196f3; } #archive-page .archive .archive-post a:active { border-left: 4px solid #2196f3; } #archive-page .archive .archive-post time { flex: none; vertical-align: middle; padding: 0.4em; padding-left: 2em; color: rgba(68,68,68,0.65); } @media screen and (max-width: 500px) { #archive-page .archive .archive-post time { padding-left: 1em; } } #archive-page .archive .archive-post .title { flex: auto; padding: 0.4em; } #archive-page .archive .archive-post .title i { color: #ff5722; } #archive-page .archive .archive-post .title i.red { color: #fe5f58; } #archive-page .archive .archive-post .title i.green { color: #3dc550; } #archive-page .archive .archive-post .title i.yellow { color: #ffbd2b; } #archive-page .archive .archive-post .title i.blue { color: #1bcdfc; } #archive-page .archive .archive-post .title i.theme { color: #2196f3; } #archive-page .archive .archive-post .title i.accent { color: #ff5722; } #archive-page .archive .archive-post .title i.orange { color: #ff5722; } #archive-page .archive .all-categories time { color: #444; } #archive-page .archive .all-categories .title { color: rgba(68,68,68,0.65); } #archive-page .archive .all-tags { display: flex; flex-wrap: wrap; align-items: flex-start; justify-content: flex-start; align-items: baseline; word-spacing: 8px; text-align: center; } #archive-page .archive .all-tags >a { color: rgba(68,68,68,0.65); margin-right: 16px; } #archive-page .archive .all-tags >a:hover, #archive-page .archive .all-tags >a:active, #archive-page .archive .all-tags >a.active { color: #ff5722 !important; } .article .article-entry >a:hover, .article .article-entry >p>a:hover, .article .article-entry blockquote a:hover, .article .article-entry div.note a:hover { text-decoration: underline; } .article .article-entry >ul>li >a:hover, .article .article-entry >ol>li >a:hover, .article .article-entry tbody tr td >a:hover, .article .article-entry >ul>li >p>a:hover, .article .article-entry >ol>li >p>a:hover, .article .article-entry tbody tr td >p>a:hover { text-decoration: underline; } .article .article-entry div.tab-pane >p >a:hover, .article .article-entry div.tab-pane li >a:hover { text-decoration: underline; } .article { color: #555; word-wrap: break-word; } .article img { position: relative; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } .article img.inline { display: inline; vertical-align: middle; transform: translateY(-4px); } @media screen and (max-width: 500px) { .article img { box-shadow: none; } } .article div>img, .article p>img { display: block; margin: auto; border-radius: 4px; } @media screen and (max-width: 500px) { .article div>img, .article p>img { border-radius: 2px; } } .article span img { display: inline; margin: auto; } .article a { word-break: break-word; } .article h1:first-child, .article h2:first-child, .article h3:first-child, .article h4:first-child, .article h5:first-child, .article h6:first-child { margin-top: 0.4rem; padding-top: 0; } .article h1.title, .article h2.title, .article h3.title, .article h4.title, .article h5.title, .article h6.title { left: 0; } .article h1.title:before, .article h2.title:before, .article h3.title:before, .article h4.title:before, .article h5.title:before, .article h6.title:before { content: none; } .article h1, .article h2 { padding-bottom: 0.2em; margin-bottom: 0.5em; border-bottom: 1px solid rgba(68,68,68,0.1); } .article h1 { text-align: left; color: #444; margin-top: 48px; } .article h2 { text-align: left; color: #444; margin-top: 48px; } .article h3 { text-align: left; color: #444; margin-top: 24px; } .article h4 { text-align: left; color: #444; margin-top: 16px; } .article h5 { font-weight: bold; color: #444; margin-top: 0.6rem; } .article h6 { color: #444; margin-top: 0.6rem; } .article center, .article center p { text-align: center; } .article .aplayer { margin: 0.4rem 0; display: inline-block; width: 400px; max-width: 100%; border-radius: 4px; color: #666; } .article p.small-img img, .article div.small-img img { width: auto; max-width: 100%; margin: 0; box-shadow: none; } .article s, .article del { opacity: 0.7; } .article u { color: #ff5722; } .article psw { color: #6e6e6e; background: #6e6e6e; border-radius: 2px; } .article psw:hover { background: none; } .article kbd { border-radius: 2px; border: 1px solid #e7e7e7; background: #f6f6f6; padding-left: 4px; padding-right: 4px; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } .article kbd:hover { cursor: default; border-color: #2196f3; background: #2196f3; color: #fff; } .article p { margin-top: 0.6rem; margin-bottom: 0.6rem; text-align: justify; max-width: 100%; line-height: inherit; } .article ul, .article ol { font-size: 95%; list-style: initial; padding-left: 8px; margin-left: 16px; margin-top: 2px; margin-bottom: 2px; } .article ul ul, .article ol ul, .article ul ol, .article ol ol { margin-top: 0; margin-bottom: 0; } .article ul li, .article ol li { margin-top: 0px; margin-bottom: 0px; } .article ul li li, .article ol li li { margin-top: 0; margin-bottom: 0; } .article ul li p, .article ol li p { margin-top: 4px; margin-bottom: 0; } .article ul.task-list, .article ol.task-list { padding-left: 0; margin-left: 4px; } .article ul.task-list li, .article ol.task-list li { list-style: none; } .article ul.task-list li input, .article ol.task-list li input { margin-right: 4px; } .article ul>li { list-style: initial; } .article ol>li { list-style: decimal; } .article .subtitle h6 { color: rgba(68,68,68,0.9); } .article figure figcaption span { display: inline-block; margin-right: 5px; } .article blockquote { background: #e8f4fd; border-left: 4px solid #2196f3; border-radius: 4px; } .article blockquote { position: relative; width: 100%; padding: 0.5rem 16px 0.4rem 16px; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } .article blockquote, .article blockquote p, .article blockquote ul, .article blockquote ol { text-align: left; word-wrap: normal; font-size: 95%; margin-top: 0.4rem; margin-bottom: 0.4rem; } .article blockquote footer { padding: 0; text-align: justify; color: inherit; font-style: italic; margin: 0.4rem 0; } .article blockquote footer cite { color: rgba(68,68,68,0.65); margin-left: 1em; } .article blockquote footer cite::before { content: '----'; padding: 0 0.3em; } .article blockquote.pullquote.right { border-left: none; border-right: 4px solid #2196f3; } .article blockquote.pullquote.right p { text-align: right; } .article pre { display: block; -moz-box-sizing: border-box; box-sizing: border-box; margin-top: 0.4rem; margin-bottom: 0.4rem; overflow: auto; background: #f6f6f6; font-size: 0.8125rem; font-family: Menlo, UbuntuMono, Monaco, monospace, courier, sans-serif; border: 1px solid #e7e7e7; padding: 16px; border-radius: 4px; } .article pre >code:not([class]) { background: transparent; } .article div>pre { border-radius: 4px; } .article div>pre>code:not([class]) { padding: 0; margin: 0; background: transparent; color: rgba(68,68,68,0.9); } .article code { font-family: Menlo, UbuntuMono, Monaco, monospace, courier, sans-serif; } .article code:not([class]) { padding: 3px 4px 1px 4px; vertical-align: middle; font-size: 0.8125rem; background: #f6f6f6; border-radius: 2px; border: 1px solid #e7e7e7; } @media screen and (max-width: 500px) { .article ul, .article ol { font-size: 0.875rem; } .article figure { font-size: 13px; line-height: 1.5; } } .article .widget { background: transparent; margin: 0.4rem 0; box-shadow: none; border-radius: 4px; cursor: auto; background: #f6f6f6; padding: 8px 0; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; width: 100%; } .article .widget:hover { box-shadow: none; } .article .widget:active { box-shadow: none; } .article .widget header { padding: 4px 0.6em; padding-bottom: 0; } .article .widget header, .article .widget header a { color: rgba(68,68,68,0.85); } .article .widget.copyright, .article .widget.qrcode { background: none; padding: 0; } .article .widget.copyright header, .article .widget.qrcode header { display: none; } .article .widget.copyright .content, .article .widget.qrcode .content { padding: 0; } .article .widget.list .content, .article .widget.related_posts .content { padding: 0 0.6em !important; } .article .widget .content { padding: 0 0.6em; margin: 0; } .article .widget .content ul { padding-left: 9px; margin-left: 16px; } .article .widget .content ul a { display: inline; border-left: none; padding: 0; padding-left: 4px; color: #2196f3; font-weight: normal; } .article .widget .content ul a:hover { text-decoration: underline; color: #ff5722; } .article .widget .content ul a:hover, .article .widget .content ul a.active, .article .widget .content ul a:active { border-left: none !important; background: none !important; } .article .widget .content .list a .name { display: inline; color: #2196f3; } .article .widget .content .list a:hover .name { text-decoration: underline; color: #ff5722; } .article .widget.qrcode > .content { display: flex; flex-wrap: wrap; align-items: center; justify-content: center; padding-left: 16px; padding-right: 16px; margin-bottom: 4px; } .article .widget.qrcode > .content>.fancybox, .article .widget.qrcode > .content>img { margin: 0 8px; } .article .widget.qrcode > .content img { margin-bottom: 4px; } .article .article_footer { margin-top: 64px; } .article .widget-blur { backdrop-filter: none; } .article .article-entry> h1, .article .article-entry> h2, .article .article-entry> h3, .article .article-entry> h4, .article .article-entry> h5, .article .article-entry> h6 { position: relative; pointer-events: none; margin-top: 0; margin-bottom: 0.6rem; } .article .article-entry> h1 >a, .article .article-entry> h2 >a, .article .article-entry> h3 >a, .article .article-entry> h4 >a, .article .article-entry> h5 >a, .article .article-entry> h6 >a { color: inherit; pointer-events: auto; } .article .article-entry> h1 >a:hover, .article .article-entry> h2 >a:hover, .article .article-entry> h3 >a:hover, .article .article-entry> h4 >a:hover, .article .article-entry> h5 >a:hover, .article .article-entry> h6 >a:hover { color: #ff5722; } .article .article-entry> h1:before, .article .article-entry> h2:before, .article .article-entry> h3:before, .article .article-entry> h4:before, .article .article-entry> h5:before, .article .article-entry> h6:before { content: ''; display: block; margin-top: -80px; height: 80px; visibility: hidden; pointer-events: none; } .article .article-entry> h1:before, .article .article-entry> h2:before { margin-top: -32px; } .article .article-entry> h3:before { margin-top: -56px; } .article .article-entry> h4:before { margin-top: -64px; } .article .article-entry> h5 { font-weight: bold; } .article .article-entry> p { font-size: 0.9375rem; } article .readmore { margin-top: 0.6rem; } article .readmore >a { font-size: 0.875rem; } .cover-wrapper .cover { top: 0; left: 0; max-width: 100%; height: 100vh; display: flex; flex-wrap: nowrap; flex-direction: column; align-items: center; align-self: center; align-content: center; color: #555; padding: 16px; } .cover-wrapper .cover .cover-body div.b { margin-top: 8vh; margin-bottom: 8vh; } .cover-wrapper .cover.half { margin-bottom: -100px; max-height: 640px; min-height: 400px; height: calc(36vh - 64px + 200px); } .cover-wrapper .cover.half .cover-body div.b { margin-top: 10%; margin-bottom: 0; } @media screen and (max-width: 500px) { .cover-wrapper .cover.half .cover-body div.a { margin-top: 10%; } } .cover-wrapper .cover .scroll-down { width: 100%; height: 64px; position: absolute; bottom: 0; text-align: center; cursor: pointer; } .cover-wrapper .cover .scroll-down .scroll-down-effects { color: #fff; font-size: 24px; line-height: 64px; position: absolute; width: 24px; left: calc(50% - 12px); text-shadow: 0 1px 2px rgba(0,0,0,0.1); animation: scroll-down-effect 1.5s infinite; } @-moz-keyframes scroll-down-effect { 0% { top: 0; opacity: 1; } 50% { top: -16px; opacity: 0.4; } 100% { top: 0; opacity: 1; } } @-webkit-keyframes scroll-down-effect { 0% { top: 0; opacity: 1; } 50% { top: -16px; opacity: 0.4; } 100% { top: 0; opacity: 1; } } @-o-keyframes scroll-down-effect { 0% { top: 0; opacity: 1; } 50% { top: -16px; opacity: 0.4; } 100% { top: 0; opacity: 1; } } @keyframes scroll-down-effect { 0% { top: 0; opacity: 1; } 50% { top: -16px; opacity: 0.4; } 100% { top: 0; opacity: 1; } } .cover-wrapper .cover .cover-body { margin: auto; } .cover-wrapper .cover .cover-body, .cover-wrapper .cover .cover-body div.a, .cover-wrapper .cover .cover-body div.b { display: flex; flex-direction: column; align-items: center; justify-content: center; max-width: 100%; } .cover-wrapper .cover .cover-body .title { font-family: \"Varela Round\", \"PingFang SC\", \"Microsoft YaHei\", Helvetica, Arial, Helvetica, monospace; font-size: 3rem; line-height: 1.2; } .cover-wrapper .cover .cover-body .subtitle { font-size: 0.875rem; } .cover-wrapper .cover .cover-body .logo { max-height: 100px; max-width: calc(100% - 4 * 16px); } @media screen and (min-height: 1024px) { .cover-wrapper .cover .cover-body .title { font-size: 3.6rem; } .cover-wrapper .cover .cover-body .subtitle { font-size: 1.05rem; } .cover-wrapper .cover .cover-body .logo { max-height: 150px; } } .cover-wrapper .cover .cover-body .m_search { position: relative; max-width: calc(100% - 16px); width: 320px; vertical-align: middle; } .cover-wrapper .cover .cover-body .m_search .form { position: relative; display: block; width: 100%; } .cover-wrapper .cover .cover-body .m_search .icon, .cover-wrapper .cover .cover-body .m_search .input { transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } .cover-wrapper .cover .cover-body .m_search .icon { position: absolute; display: block; line-height: 2.5rem; width: 32px; top: 0; left: 5px; color: rgba(85,85,85,0.75); } .cover-wrapper .cover .cover-body .m_search .input { display: block; height: 2.5rem; width: 100%; box-shadow: none; box-sizing: border-box; font-size: 0.875rem; -webkit-appearance: none; padding-left: 36px; border-radius: 1.4rem; background: rgba(255,255,255,0.6); backdrop-filter: blur(10px); border: none; color: #444; } @media screen and (max-width: 500px) { .cover-wrapper .cover .cover-body .m_search .input { padding-left: 36px; } } .cover-wrapper .cover .cover-body .m_search .input:hover { background: rgba(255,255,255,0.8); } .cover-wrapper .cover .cover-body .m_search .input:focus { background: #fff; } .cover-wrapper .cover .cover-body .menu { margin-top: 16px; } .cover-wrapper .cover .cover-body .menu ul { display: flex; flex-wrap: wrap; align-items: baseline; justify-content: center; } .cover-wrapper .cover .cover-body .menu ul li { display: flex; flex-wrap: wrap; align-items: center; padding: 0; height: auto; } .cover-wrapper .cover .cover-body .menu ul>li>a { font-size: 0.875rem; padding: 2px; margin: 4px; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; color: rgba(85,85,85,0.65); text-shadow: 0 1px 2px rgba(0,0,0,0.05); border-bottom: 2px solid transparent; } .cover-wrapper .cover .cover-body .menu ul>li>a i { margin-right: 4px; } .cover-wrapper .cover .cover-body .menu ul>li>a:hover, .cover-wrapper .cover .cover-body .menu ul>li>a.active, .cover-wrapper .cover .cover-body .menu ul>li>a:active { color: #555; border-bottom: 2px solid #555; } .cover-wrapper .cover .cover-body .switcher > li a:hover { background: rgba(68,68,68,0.15); } footer { position: relative; padding: 40px 10px 120px 10px; width: 100%; color: rgba(102,102,102,0.5); margin: 0px auto; overflow: hidden; text-align: center; } footer, footer p { font-size: 0.8125rem; } footer .licenses { color: fade(, 50%); text-decoration: underline; } footer .codename { text-decoration: underline; } footer .social-wrapper { display: flex; justify-content: center; flex-wrap: wrap; margin: 4px 8px; font-size: 16px; } footer a { color: rgba(102,102,102,0.75); padding: 0; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } footer a:hover { color: #666; } footer a.social { position: relative; display: inline-block; text-align: center; display: flex; justify-content: center; align-items: center; width: 36px; height: 36px; margin: 4px; border-radius: 100px; color: rgba(102,102,102,0.75); } footer a.social:hover { background: rgba(102,102,102,0.1); color: #666; } footer .copyright { margin-top: 16px; } footer .copyright p { font-size: 0.75rem; } @media screen and (max-width: 768px) { footer { justify-content: center; } } .article.article-entry.l_friends .friends-group .friend-content { display: flex; flex-wrap: wrap; margin: -8px; border-radius: 8px; align-items: flex-start; line-height: 1.3; } .article.article-entry.l_friends .friends-group .friend-content .friend-card { display: flex; border-radius: 4px; box-shadow: 0 1px 2px 0px rgba(0,0,0,0.1); padding: 8px 0; margin: 8px; margin-top: calc(2.25 * 16px + 32px); color: rgba(68,68,68,0.65); background: #f6f6f6; justify-content: flex-start; align-content: flex-start; flex-direction: column; width: calc(100%/4 - 16px); } @media screen and (max-width: 1024px) { .article.article-entry.l_friends .friends-group .friend-content .friend-card { width: calc(100%/4 - 16px); } } @media screen and (max-width: 768px) { .article.article-entry.l_friends .friends-group .friend-content .friend-card { width: calc(100%/3 - 16px); } } @media screen and (max-width: 500px) { .article.article-entry.l_friends .friends-group .friend-content .friend-card { width: calc(100%/2 - 16px); } } .article.article-entry.l_friends .friends-group .friend-content .friend-card:hover .friend-left .avatar { transform: scale(1.2) rotate(12deg); box-shadow: 0 2px 4px 0px rgba(0,0,0,0.1), 0 4px 8px 0px rgba(0,0,0,0.1), 0 8px 16px 0px rgba(0,0,0,0.1); } .article.article-entry.l_friends .friends-group .friend-content .friend-card .friend-left { display: flex; align-self: center; } .article.article-entry.l_friends .friends-group .friend-content .friend-card .friend-left .avatar { width: 64px; height: 64px; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; box-shadow: 0 1px 2px 0px rgba(0,0,0,0.1); margin: 16px 8px 4px 8px; margin-top: calc(-1.25 * 16px - 32px); border-radius: 100%; border: 2px solid #fff; background: #fff; } .article.article-entry.l_friends .friends-group .friend-content .friend-card .friend-right { margin: 4px 8px; display: flex; flex-direction: column; text-align: center; } .article.article-entry.l_friends .friends-group .friend-content .friend-card .friend-right p { text-align: center; } .article.article-entry.l_friends .friends-group .friend-content .friend-card .friend-right .friend-tags-wrapper { transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; margin-left: -2px; word-break: break-all; } .article.article-entry.l_friends .friends-group .friend-content .friend-card .friend-right p { margin: 0; } .article.article-entry.l_friends .friends-group .friend-content .friend-card .friend-right p.friend-name { font-size: 0.8125rem; padding-top: 4px; font-weight: bold; } .article.article-entry.l_friends .friends-group .friend-content .friend-card .friend-right p.tags { font-size: 0.75rem; display: inline; background: none; word-wrap: break-word; padding-right: 4px; } .l_body { position: relative; margin: 16px; } .l_body.nocover { margin-top: 64px; } @media screen and (max-width: 425px) { .l_body { margin: 80px 0 16px; } .l_body.nocover { margin-top: 48px; } } .l_body .s-top { transition: all 0.6s ease; -moz-transition: all 0.6s ease; -webkit-transition: all 0.6s ease; -o-transition: all 0.6s ease; z-index: 9; position: fixed; width: 48px; height: 48px; line-height: 48px; border-radius: 100%; bottom: 32px; right: 32px; transform: translateY(100px) scale(0); transform-origin: bottom; color: #444; } @media screen and (max-width: 768px) { .l_body .s-top { right: 16px; } } .l_body .s-top.show { transform: translateY(0) scale(1); } .l_body .s-top.show.hl { background: #2196f3; color: #fff; box-shadow: 0 1px 2px 0px rgba(0,0,0,0.1); } @media screen and (min-width: 768px) { .l_body .s-top:hover { transform: scale(1.2); border-radius: 25%; background: #2196f3; color: #fff; box-shadow: 0 2px 4px 0px rgba(0,0,0,0.1), 0 4px 8px 0px rgba(0,0,0,0.1), 0 8px 16px 0px rgba(0,0,0,0.1); } .l_body .s-top:hover.hl { box-shadow: 0 2px 4px 0px rgba(0,0,0,0.1), 0 4px 8px 0px rgba(0,0,0,0.1), 0 8px 16px 0px rgba(0,0,0,0.1); } } .l_main { width: calc(100% - 1 * 240px); padding-right: 16px; float: left; } @media screen and (max-width: 768px) { .l_main { width: 100%; } } .l_main.no_sidebar { width: 100%; padding-right: 0; max-width: 840px; margin: auto; } @media screen and (min-width: 2048px) { .l_main.no_sidebar { max-width: calc(55vw - 240px); } } .l_main.no_sidebar ~.l_side { display: none; } .l_main .post-list { position: relative; margin: 16px auto; column-gap: 16px; } .l_main .post-list.multiple-columns { columns: 320px; } .l_main .post-wrapper { column-break-inside: avoid; break-inside: avoid-column; } .l_main .post-wrapper { margin-bottom: 16px; } .l_main .post-wrapper .post div.meta { margin-bottom: 16px; } .l_main .post-wrapper .post div.meta .title { font-size: 1.375rem; } .l_main .post-wrapper .post div.meta .title a { font-size: 1.375rem; } @media screen and (max-width: 500px) { .l_main .post-wrapper .post div.meta .title { font-size: 1.25rem; } } @media screen and (max-width: 500px) and (max-width: 500px) { .l_main .post-wrapper .post { padding: 24px 16px; } } .l_main .widget .content p, .l_main .widget .content ul, .l_main .widget .content ol, .l_main .widget .content table, .l_main .widget .content .tabs, .l_main .widget .content details { margin-top: 0.4rem; margin-bottom: 0.4rem; } .l_main .widget .content .post { padding-top: 0; padding-bottom: 0; margin-top: 0.4rem; margin-bottom: 0.4rem; } .l_main .widget.grid .content .grid.fixed a { width: calc(100%/8 - 0 * 16px); } @media screen and (max-width: 1024px) { .l_main .widget.grid .content .grid.fixed a { width: calc(100%/7 - 0 * 16px); } } @media screen and (max-width: 768px) { .l_main .widget.grid .content .grid.fixed a { width: calc(100%/6 - 0 * 16px); } } @media screen and (max-width: 500px) { .l_main .widget.grid .content .grid.fixed a { width: calc(100%/5 - 0 * 16px); } } @media screen and (max-width: 425px) { .l_main .widget.grid .content .grid.fixed a { width: calc(100%/4 - 0 * 16px); } } @media screen and (max-width: 375px) { .l_main .widget.grid .content .grid.fixed a { width: calc(100%/3 - 0 * 16px); } } .l_main .post { position: relative; margin: 16px auto; padding: 24px; border-radius: 8px; } @media screen and (max-width: 425px) { .l_main .post { border-radius: 0; } } .l_main .post h1 { font-weight: normal; font-size: 1.625rem; } .l_main .post section.meta { color: rgba(68,68,68,0.65); margin-bottom: 16px; line-height: normal; } .l_main .post section.meta#header-meta { margin-top: 0; margin-bottom: 16px; } .l_main .post section.meta#footer-meta { margin-top: 32px; margin-bottom: 8px; } .l_main .post section.meta .aplayer, .l_main .post section.meta .thumbnail { transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; width: 65px; height: 65px; border-radius: 100%; float: right; margin: 4px; box-shadow: 0 1px 2px 0px rgba(0,0,0,0.1); } .l_main .post section.meta .aplayer:hover, .l_main .post section.meta .thumbnail:hover { border-radius: 25%; transform: scale(1.1); box-shadow: 0 2px 4px 0px rgba(0,0,0,0.1), 0 4px 8px 0px rgba(0,0,0,0.1), 0 8px 16px 0px rgba(0,0,0,0.1); } @media screen and (max-width: 500px) { .l_main .post section.meta .aplayer:hover, .l_main .post section.meta .thumbnail:hover { border-radius: 100%; transform: scale(1); box-shadow: 0 1px 2px 0px rgba(0,0,0,0.1); } } .l_main .post section.meta .thumbnail { width: auto; border-radius: 4px; box-shadow: none; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } .l_main .post section.meta .thumbnail:hover { border-radius: 4px; transform: scale(1.1) rotate(4deg); box-shadow: none; } .l_main .post section.meta .title { transition: all 0.1s ease; -moz-transition: all 0.1s ease; -webkit-transition: all 0.1s ease; -o-transition: all 0.1s ease; margin: 0; color: #444; } .l_main .post section.meta .title p.h1, .l_main .post section.meta .title p.h2 { margin-top: 1rem; border-bottom: none; } .l_main .post section.meta .title p.h1 { font-size: 1.7875rem; } .l_main .post section.meta .title p.h2 { font-size: 1.5125rem; } .l_main .post section.meta .title a { display: inline; font-weight: normal; color: #444; } .l_main .post section.meta .title a:hover { color: #ff5722; } .l_main .post section.meta .new-meta-box { transition: all 0.1s ease; -moz-transition: all 0.1s ease; -webkit-transition: all 0.1s ease; -o-transition: all 0.1s ease; padding-top: 4px; padding-bottom: 8px; display: flex; align-items: center; flex-wrap: wrap; -webkit-font-smoothing: auto; -moz-osx-font-smoothing: auto; } .l_main .post section.meta .new-meta-box, .l_main .post section.meta .new-meta-box p, .l_main .post section.meta .new-meta-box i { font-size: 0.8125rem; } .l_main .post section.meta .new-meta-box .new-meta-item { color: rgba(68,68,68,0.65); display: flex; align-items: baseline; justify-content: center; margin: 0 16px 0 0; } .l_main .post section.meta .new-meta-box .new-meta-item.link-btns { display: flex; flex-wrap: wrap; justify-content: flex-start; } .l_main .post section.meta .new-meta-box .new-meta-item.link-btns .btn { color: #fff; padding: 1px 4px; border-radius: 2px; margin: 2px; line-height: 1.5; } .l_main .post section.meta .new-meta-box .new-meta-item.link-btns .btn:hover { box-shadow: 0 4px 8px 0 rgba(0,0,0,0.1), 0 8px 16px 0 rgba(0,0,0,0.1); } .l_main .post section.meta .new-meta-box .new-meta-item.link-btns .btn i { padding-left: 3px; } .l_main .post section.meta .new-meta-box .new-meta-item.link-btns .btn p { color: #fff; padding-top: 3px; padding-right: 2px; } .l_main .post section.meta .new-meta-box .new-meta-item.link-btns .btn:hover { color: #fff; } .l_main .post section.meta .new-meta-box .new-meta-item.link-btns .btn:hover p { color: #fff; } .l_main .post section.meta .new-meta-box .new-meta-item .notlink { cursor: default; } .l_main .post section.meta .new-meta-box .new-meta-item .notlink:hover { color: rgba(68,68,68,0.65); } .l_main .post section.meta .new-meta-box .new-meta-item .notlink:hover p { color: rgba(68,68,68,0.65); } .l_main .post section.meta .new-meta-box .new-meta-item:last-child { margin-right: 0; } .l_main .post section.meta .new-meta-box .new-meta-item img, .l_main .post section.meta .new-meta-box .new-meta-item i { display: inline; } .l_main .post section.meta .new-meta-box .new-meta-item i { margin-right: 4px; border-radius: 0; } .l_main .post section.meta .new-meta-box .new-meta-item i.fa-hashtag { margin-right: 2px; } .l_main .post section.meta .new-meta-box .new-meta-item p, .l_main .post section.meta .new-meta-box .new-meta-item a { color: rgba(68,68,68,0.65); padding: 3px 0; } .l_main .post section.meta .new-meta-box .new-meta-item a { display: flex; justify-content: center; align-items: center; } .l_main .post section.meta .new-meta-box .new-meta-item a img { height: 16px; width: 16px; margin-right: 5px; } .l_main .post section.meta .new-meta-box .new-meta-item a p { margin: 0; font-weight: normal; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } .l_main .post section.meta .new-meta-box .new-meta-item a:hover { color: #ff5722; } .l_main .post section.meta .new-meta-box .new-meta-item a:hover p { color: #ff5722; } .l_main .post section.meta .new-meta-box .author img, .l_main .post section.meta .new-meta-box .author i { border-radius: 100%; } .l_main .post section.meta .new-meta-box .author img { transform: translateY(-0.5px); } @media screen and (max-width: 500px) { .l_main .post section.meta .new-meta-box .share { width: 100%; margin-top: 16px; background: #f6f6f6; } } .l_main .post section.meta .new-meta-box .share-body { position: relative; display: flex; justify-content: center; margin: 0; padding: 0 2px; border-radius: 2px; } .l_main .post section.meta .new-meta-box .share-body a { padding: 0; margin: 0 1px; } .l_main .post section.meta .new-meta-box .share-body a img { margin: 2px; height: 24px; width: auto; background: transparent; } @media screen and (max-width: 500px) { .l_main .post section.meta .new-meta-box .share-body a img { height: 32px; margin: 8px; } } .l_main .post span>img { display: inline-block; } .l_main .post a img { display: inline; } @media screen and (max-width: 768px) { .l_main { padding-right: 0; } .l_main .post div.meta .title { font-size: 1.25rem; } } @media screen and (max-width: 768px) and (max-width: 500px) { .l_main { width: 100%; } } @media screen and (max-width: 768px) and (max-width: 500px) { .l_main .post { padding: 24px 16px; } } .body-wrapper { position: relative; display: flex; width: 100%; max-width: 1080px; margin: 0 auto; flex-wrap: wrap; justify-content: space-between; align-items: stretch; } @media screen and (min-width: 2048px) { .body-wrapper { max-width: 55vw; } } div.hoverbox >div.target { display: none; position: absolute; background: #fff; border-radius: 8px; box-shadow: 0 2px 4px 0px rgba(0,0,0,0.1), 0 4px 8px 0px rgba(0,0,0,0.1), 0 8px 16px 0px rgba(0,0,0,0.1); padding: 8px; left: 50%; top: -20px; transform: translate(-50%, -100%); } div.hoverbox >div.target >img { margin: 0; padding: 0; height: 128px; width: 128px; min-width: 128px; } div.hoverbox:hover >div.target { display: flex; } @media screen and (max-width: 500px) { div.hoverbox >div.target { position: absolute; } } .comments .article p[ct] { margin-top: 0; margin-bottom: 0.4rem; font-size: 1.125rem; color: #444; } .comments .article p[cst] { margin-top: 0.4rem; margin-bottom: 0.4rem; font-size: 0.875rem; } .white-box { background: #fff; } .reveal { visibility: hidden; } .l_header { position: fixed; z-index: 1000; top: 0; width: 100%; height: 64px; background: #fff; box-shadow: 0 1px 2px 0px rgba(0,0,0,0.1); } .l_header.hide { transform: translateY(100px) scale(0); } .l_header.show { transform: translateY(0) scale(1); } .l_header .container { margin-left: 16px; margin-right: 16px; } .l_header .wrapper { height: 100%; -moz-user-select: none; -ms-user-select: none; -webkit-user-select: none; user-select: none; } .l_header .wrapper .nav-main, .l_header .wrapper .nav-sub { display: flex; flex-wrap: nowrap; justify-content: space-between; align-items: center; } .l_header .wrapper .nav-main { transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } .l_header .wrapper.sub .nav-main { transform: translateY(-64px); } .l_header .wrapper .nav-sub { transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; opacity: 0; width: calc(100% - 2 * 16px); position: absolute; } @media screen and (min-width: 2048px) { .l_header .wrapper .nav-sub { max-width: 55vw; margin: auto; } } .l_header .wrapper.sub .nav-sub { opacity: 1; } .l_header .wrapper .title { position: relative; color: #444; padding-left: 24px; max-height: 64px; } .l_header .wrapper .nav-main .title { white-space: nowrap; overflow: hidden; text-overflow: ellipsis; flex-shrink: 0; line-height: 64px; padding: 0 24px; font-size: 1.25rem; font-family: \"Varela Round\", \"PingFang SC\", \"Microsoft YaHei\", Helvetica, Arial, Helvetica, monospace; } .l_header .wrapper .nav-main .title img { height: 64px; } .l_header .nav-sub { max-width: 1080px; margin: auto; } .l_header .nav-sub .title { font-size: 0.9375rem; font-family: UbuntuMono, \"PingFang SC\", \"Microsoft YaHei\", Helvetica, Arial, Menlo, Monaco, monospace, sans-serif; line-height: 1.2; max-height: 64px; white-space: normal; flex-shrink: 1; } .l_header .switcher { display: none; line-height: 64px; align-items: center; } .l_header .switcher .s-toc { display: none; } @media screen and (max-width: 768px) { .l_header .switcher .s-toc { display: flex; } } .l_header .switcher >li { height: 48px; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; margin: 2px; } @media screen and (max-width: 500px) { .l_header .switcher >li { margin: 0 1px; height: 48px; } } .l_header .switcher >li >a { display: flex; justify-content: center; align-items: center; width: 48px; height: 48px; padding: 0.85em 1.1em; border-radius: 100px; border: none; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; color: #2196f3; } .l_header .switcher >li >a:hover { border: none; } .l_header .switcher >li >a.active, .l_header .switcher >li >a:active { border: none; background: #e8f4fd; } @media screen and (max-width: 500px) { .l_header .switcher >li >a { width: 32px; height: 48px; } } .l_header .nav-sub .switcher { display: flex; } .l_header .m_search { display: flex; height: 64px; width: 240px; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } @media screen and (max-width: 1024px) { .l_header .m_search { width: 44px; min-width: 44px; } .l_header .m_search input::placeholder { opacity: 0; } .l_header .m_search:hover { width: 240px; } .l_header .m_search:hover input::placeholder { opacity: 1; } } @media screen and (min-width: 500px) { .l_header .m_search:hover .input { width: 100%; } .l_header .m_search:hover .input::placeholder { opacity: 1; } } @media screen and (max-width: 500px) { .l_header .m_search { min-width: 0; } .l_header .m_search input::placeholder { opacity: 1; } } .l_header .m_search .form { position: relative; display: flex; width: 100%; align-items: center; } .l_header .m_search .icon { position: absolute; width: 32px; left: 5px; color: rgba(68,68,68,0.7); } @media screen and (max-width: 500px) { .l_header .m_search .icon { display: none; } } .l_header .m_search .input { display: block; padding-top: 8px; padding-bottom: 8px; line-height: 1.3; width: 100%; color: #444; background: #fafafa; box-shadow: none; box-sizing: border-box; padding-left: 36px; font-size: 0.875rem; border-radius: 8px; border: none; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } @media screen and (min-width: 500px) { .l_header .m_search .input:focus { box-shadow: 0 4px 8px 0px rgba(0,0,0,0.1); } } @media screen and (max-width: 500px) { .l_header .m_search .input { background: #f6f6f6; padding-left: 8px; border: none; } .l_header .m_search .input:hover, .l_header .m_search .input:focus { border: none; } } @media (max-width: 500px) { .l_header .m_search { left: 0; width: 0; overflow: hidden; position: absolute; background: #fff; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } .l_header .m_search .input { border-radius: 32px; margin-left: 16px; padding-left: 16px; } .l_header.z_search-open .m_search { width: 100%; } .l_header.z_search-open .m_search .input { width: calc(100% - 112px); } } ul.nav-list-h li:hover >ul.list-v, ul.list-v li:hover >ul.list-v { display: block; } ul.nav-list-h { display: flex; align-items: stretch; height: 64px; } ul.nav-list-h>li { position: relative; justify-content: center; } ul.nav-list-h>li >a { height: 100%; line-height: 64px; border-bottom: 2px solid transparent; } ul.list-v { z-index: 1; display: none; position: absolute; background: #fff; box-shadow: 0 0 1px 0px rgba(0,0,0,0.1), 0 4px 8px 0px rgba(0,0,0,0.1); margin-top: -6px; border-radius: 4px; padding: 8px 0; } ul.list-v >hr { margin-top: 8px; margin-bottom: 8px; } ul.list-v >li { white-space: nowrap; word-break: keep-all; } ul.list-v >li.header { font-size: 0.75rem; font-weight: bold; line-height: 2em; color: rgba(68,68,68,0.65); margin: 8px 16px 4px; } ul.list-v >li.header i { margin-right: 8px; } ul.list-v >li ul { margin-left: 0; display: none; margin-top: -40px; } ul.list-v .aplayer-container { min-height: 64px; padding: 6px 16px; } ul.list-v >li>a { transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; display: block; color: #696969; font-size: 0.875rem; font-weight: bold; line-height: 33px; padding: 0 20px 0 16px; height: 32px; border-left: 2px solid transparent; text-overflow: ellipsis; } ul.list-v >li>a:hover, ul.list-v >li>a.active, ul.list-v >li>a:active { color: #2196f3; border-left: 2px solid #2196f3; border-bottom: none; } ul.list-v >li>a >i { margin-right: 8px; } ul.list-v >li>a.current { border-left-color: rgba(33,150,243,0.8); border-bottom-color: rgba(33,150,243,0.8); } ul.list-v >li>a:hover { color: #2196f3; border-left-color: #2196f3; border-bottom-color: #2196f3; background: #e8f4fd; } ul.list-v >li>a:active, ul.list-v >li>a.active { color: #2196f3; border-left-color: #2196f3; border-bottom-color: #2196f3; } .l_header .menu >ul>li>a { display: block; padding: 0 8px; } .l_header .menu >ul>li>a >i { margin-right: 4px; } .l_header ul>li>a { color: #696969; } .l_header ul>li>a.current { border-left-color: rgba(33,150,243,0.8); border-bottom-color: rgba(33,150,243,0.8); } .l_header ul>li>a:hover { color: #2196f3; border-left-color: #2196f3; border-bottom-color: #2196f3; background: #e8f4fd; } .l_header ul>li>a:active, .l_header ul>li>a.active { color: #2196f3; border-left-color: #2196f3; border-bottom-color: #2196f3; } .l_header ul>li>a i.music { animation: rotate-effect 1.5s linear infinite; } @-moz-keyframes rotate-effect { 0% { transform: rotate(0); } 25% { transform: rotate(90deg); } 50% { transform: rotate(180deg); } 75% { transform: rotate(270deg); } 100% { transform: rotate(360deg); } } @-webkit-keyframes rotate-effect { 0% { transform: rotate(0); } 25% { transform: rotate(90deg); } 50% { transform: rotate(180deg); } 75% { transform: rotate(270deg); } 100% { transform: rotate(360deg); } } @-o-keyframes rotate-effect { 0% { transform: rotate(0); } 25% { transform: rotate(90deg); } 50% { transform: rotate(180deg); } 75% { transform: rotate(270deg); } 100% { transform: rotate(360deg); } } @keyframes rotate-effect { 0% { transform: rotate(0); } 25% { transform: rotate(90deg); } 50% { transform: rotate(180deg); } 75% { transform: rotate(270deg); } 100% { transform: rotate(360deg); } } .menu-phone li ul.list-v { right: calc(100% - 0.5 * 16px); } .menu-phone li ul.list-v ul { right: calc(100% - 0.5 * 16px); } .l_header .wrapper { max-width: 1080px; margin: auto; } @media screen and (min-width: 2048px) { .l_header .wrapper { max-width: 55vw; } } .l_header .wrapper .menu { flex: 1 1 auto; margin: 0 16px 0 0; } .l_header .wrapper .menu .list-v ul { left: calc(100% - 0.5 * 16px); } .menu-phone { display: none; margin-top: 16px; right: 8px; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } .menu-phone ul { right: calc(100% - 0.5 * 16px); } @media screen and (max-width: 500px) { .menu-phone { display: block; } } .cover-wrapper .l_header { transition: all 0.5s ease; -moz-transition: all 0.5s ease; -webkit-transition: all 0.5s ease; -o-transition: all 0.5s ease; transform: translateY(-128px); } .cover-wrapper .l_header.show { transform: translateY(0); } @media screen and (min-width: 2048px) { .l_header { max-width: 65vw; left: calc((100% - 65vw) * 0.5); border-bottom-left-radius: 8px; border-bottom-right-radius: 8px; } } @media screen and (max-width: 500px) { .l_header .container { margin-left: 0; margin-right: 0; } .l_header .wrapper .nav-main .title { padding-left: 16px; padding-right: 16px; } .l_header .wrapper .nav-sub { width: 100%; } .l_header .wrapper .nav-sub .title { overflow-y: scroll; margin-top: 2px; padding: 8px 16px; } .l_header .wrapper .switcher { display: flex; margin-right: 8px; } .l_header .menu { display: none; } } @media screen and (max-width: 500px) { .list-v li { max-width: 270px; } } .l_main .prev-next { width: 100%; display: flex; justify-content: space-between; align-items: baseline; color: rgba(68,68,68,0.65); margin: 0; font-size: 0.9375rem; } .l_main .prev-next .prev { text-align: left; border-top-right-radius: 32px; border-bottom-right-radius: 32px; } .l_main .prev-next .next { text-align: right; border-top-left-radius: 32px; border-bottom-left-radius: 32px; } .l_main .prev-next p { margin: 16px; } .l_main .prev-next section { color: rgba(68,68,68,0.65); padding: 16px; border-radius: 8px; } .l_main .prev-next section:hover { color: #ff5722; } @media screen and (max-width: 425px) { .l_main .prev-next section { border-radius: 0; } } .l_main .article .prev-next { width: 100%; display: flex; justify-content: space-between; align-content: flex-start; margin-top: 8px; } .l_main .article .prev-next >a { width: 100%; padding: 8px; color: rgba(68,68,68,0.65); background: #f6f6f6; border-radius: 4px; } .l_main .article .prev-next >a:hover { background: #ffeee8; } .l_main .article .prev-next >a:hover p.title { color: #ff5722; } .l_main .article .prev-next >a p.title { margin: 8px 0.5rem; font-weight: bold; font-size: 1rem; } .l_main .article .prev-next >a p.title >i { width: 1rem; } .l_main .article .prev-next >a p.content { font-size: 0.875rem; margin: 0 0.5rem; text-align: justify; word-break: break-all; } .l_main .article .prev-next >a:only-child { margin-left: 0; margin-right: 0; } .l_main .article .prev-next .prev { margin-left: 0; margin-right: 8px; } .l_main .article .prev-next .prev p.title { text-align: left; } .l_main .article .prev-next .next { margin-left: 8px; margin-right: 0; } .l_main .article .prev-next .next p.title { text-align: right; } #u-search { display: none; position: fixed; top: 0; left: 0; width: 100%; height: 100%; padding: 60px 20px; z-index: 1001; } @media screen and (max-width: 680px) { #u-search { padding: 0px; } } #u-search .modal { position: fixed; height: 80%; width: 100%; max-width: 640px; left: 50%; top: 0; margin: 64px 0px 0px -320px; background: #fff; z-index: 3; border-radius: 4px; overflow: hidden; } @media screen and (max-width: 680px) { #u-search .modal { box-shadow: none; max-width: none; top: 0; left: 0; margin: 0; height: 100%; border-radius: 0; } } #u-search .modal-ajax-content { opacity: 0; visibility: hidden; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } #u-search .modal-ajax-content.loaded { opacity: 1; visibility: visible; } #u-search .modal-header { position: relative; width: 100%; height: 64px; z-index: 3; border-top-left-radius: 4px; border-top-right-radius: 4px; font-size: 16px; box-shadow: 0 1px 2px 0px rgba(0,0,0,0.1); background: #fff; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } @media screen and (max-width: 680px) { #u-search .modal-header { border-radius: 0; padding: 0px; } } #u-search .modal-header .btn-close { display: block; position: absolute; width: 55px; height: 64px; top: 0; right: 0; color: #2196f3; cursor: pointer; text-align: center; line-height: 64px; vertical-align: middle; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; z-index: 2; } #u-search .modal-header .btn-close:hover { transform: rotate(90deg); } #u-search .modal-header .modal-loading { position: absolute; bottom: 0; left: 0; width: 100%; height: 2px; background: transparent; z-index: 1; } #u-search .modal-header .modal-loading .modal-loading-bar { display: block; position: relative; width: 0%; height: 100%; background: #2196f3; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } #u-search .modal-header #u-search-modal-form { position: relative; width: 100%; height: 100%; z-index: 2; } #u-search .modal-header #u-search-modal-form #u-search-modal-input { margin: 16px 50px; padding: 0 8px; width: calc(100% - 100px - 16px); line-height: 2rem; border-radius: 4px; vertical-align: middle; border: none; appearance: none; box-shadow: none; background: transparent; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } @media screen and (max-width: 680px) { #u-search .modal-header #u-search-modal-form #u-search-modal-input { padding: 0; } } #u-search .modal-header #u-search-modal-form #u-search-modal-input:focus { border-top-left-radius: 4px; border-top-right-radius: 4px; } #u-search .modal-header #u-search-modal-btn-submit { position: absolute; top: 0; left: 0; padding-left: 5px; padding-top: 2px; background: transparent; border: none; width: 50px; height: 64px; vertical-align: middle; color: #2196f3; z-index: 2; } #u-search .modal-footer { position: absolute; display: none; bottom: 0; left: 0; width: 100%; height: 50px; padding: 0px 15px; background: #fff; } #u-search .modal-footer .logo { position: absolute; top: 0; left: 0; width: 100%; height: 100%; text-align: center; z-index: 0; } #u-search .modal-footer .logo a { display: inline-block; height: 50px; } #u-search .modal-footer .logo.google img { height: 24px; margin-top: 13px; } #u-search .modal-footer .logo.baidu img { height: 22px; margin-top: 14px; } #u-search .modal-footer .logo img { position: relative; display: inline-block; width: auto; height: 18px; margin-top: 16px; } #u-search .modal-footer .modal-error { position: relative; float: left; vertical-align: middle; line-height: 50px; font-size: 13px; z-index: 1; } #u-search .modal-footer .modal-metadata { position: relative; float: left; vertical-align: middle; line-height: 50px; font-size: 13px; z-index: 1; } #u-search .modal-footer .nav { position: relative; display: block; float: right; vertical-align: middle; font-size: 0.875rem; font-weight: bold; line-height: 50px; color: rgba(68,68,68,0.65); cursor: pointer; z-index: 1; } #u-search .modal-footer .nav:hover { color: #ff5722; } #u-search .modal-footer .nav.btn-next { margin-left: 16px; } #u-search .modal-footer .nav .icon { font-size: 0.875rem; } #u-search .modal-body { position: absolute; padding: 16px; width: 100%; height: calc(100% - 64px); top: 64px; left: 0; overflow-y: scroll; -webkit-overflow-scrolling: touch; background: #fff; border-radius: 4px; } #u-search .modal-body::-webkit-scrollbar { height: 4px; width: 4px; } #u-search .modal-body::-webkit-scrollbar-track-piece { background: transparent; } #u-search .modal-body::-webkit-scrollbar-thumb { background: rgba(118,118,118,0.4); cursor: pointer; border-radius: 2px; } #u-search .modal-body::-webkit-scrollbar-thumb:hover { background: #767676; } #u-search .modal-body .modal-results { list-style: none; } #u-search .modal-body .modal-results .result { position: relative; display: block; padding: 16px; border-radius: 4px; } #u-search .modal-body .modal-results .result b[mark] { color: #0c7cd5; text-decoration: underline; } #u-search .modal-body .modal-results .result:hover { background: #e8f4fd; } #u-search .modal-body .modal-results .result .title { display: inline-block; max-width: 100%; color: #5e5e5e; font-weight: bold; padding: 1px; margin-bottom: 2px; white-space: normal; overflow: hidden; text-overflow: ellipsis; font-size: 1.125rem; } #u-search .modal-body .modal-results .result .digest { display: block; white-space: inherit; overflow: hidden; word-break: break-all; text-overflow: ellipsis; font-size: 0.8125rem; color: rgba(68,68,68,0.65); } #u-search .modal-body .modal-results .result .icon { position: absolute; top: 50%; right: 0; margin-top: -4px; font-size: 11px; color: #808080; } #u-search .modal-overlay { position: absolute; top: 0; left: 0; width: 100%; height: 100%; background: rgba(0,0,0,0.7); z-index: 1; } .l_side { width: 240px; float: right; position: relative; display: flex; flex-direction: column; } @media screen and (max-width: 768px) { .l_side { width: 100%; } } .l_side .widget { overflow: hidden; } .l_side .widget >.content { max-height: calc(100vh - 144px); overflow: auto; text-align: justify; font-size: 0.875rem; max-width: 100%; } @media screen and (max-width: 768px) { .l_side .widget >.content { max-height: none; } } .l_side .widget >.content::-webkit-scrollbar { height: 4px; width: 4px; } .l_side .widget >.content::-webkit-scrollbar-track-piece { background: transparent; } .l_side .widget >.content::-webkit-scrollbar-thumb { background: rgba(118,118,118,0.4); cursor: pointer; border-radius: 2px; } .l_side .widget >.content::-webkit-scrollbar-thumb:hover { background: #767676; } .widget { z-index: 0; background: #fff; margin-top: 16px; border-radius: 8px; width: 100%; display: none; } .widget ul li, .widget ol li { margin-top: 0; margin-bottom: 0; } .widget.desktop { display: block; } @media screen and (max-width: 768px) { .widget { display: none !important; } .widget.mobile { display: block !important; } } @media screen and (max-width: 425px) { .widget { width: calc(100% - 2 * 16px); margin: 16px 16px 0 16px; display: none !important; } .widget.mobile { display: block !important; } } .widget header { border-top-left-radius: 8px; border-top-right-radius: 8px; padding: calc(16px - 2px); font-weight: bold; padding-bottom: 0; } .widget header, .widget header a { color: #2196f3; } .widget header >a:hover { color: #ff5722; } .widget header span.name { margin-left: 8px; } .widget >.content { padding: 8px 0; } .widget >.content p { margin-top: 0.4rem; margin-bottom: 0.4rem; } .widget >.content ul>li a { color: rgba(68,68,68,0.65); padding: 0 16px; padding-left: 12px; line-height: 2; display: flex; justify-content: space-between; align-content: center; border-left: 2px solid transparent; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } .widget >.content ul.entry, .widget >.content ul.popular-posts { list-style: none; } .widget >.content ul.entry a .name, .widget >.content ul.popular-posts a .name { flex: auto; color: rgba(68,68,68,0.8); } .widget >.content ul.entry a .badge, .widget >.content ul.popular-posts a .badge { flex: none; font-weight: normal; font-size: 0.875rem; color: rgba(68,68,68,0.7); } .widget >.content ul.entry a:hover, .widget >.content ul.popular-posts a:hover { border-left: 2px solid #2196f3; background: #e8f4fd; } .widget >.content ul.entry a.active, .widget >.content ul.popular-posts a.active { border-left: 2px solid #2196f3; } .widget >.content ul.entry a.active .name, .widget >.content ul.popular-posts a.active .name { color: #2196f3; } .widget >.content ul.entry a.active .badge, .widget >.content ul.popular-posts a.active .badge { color: rgba(33,150,243,0.9); } .widget >.content ul.entry a:active, .widget >.content ul.popular-posts a:active { border-left: 4px solid #2196f3; } .widget >.content ul.entry a.child, .widget >.content ul.popular-posts a.child { padding-left: 32px; } .widget.blogger { transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } .widget.blogger .content { padding: 0; text-align: center; display: flex; flex-direction: column; align-items: stretch; } .widget.blogger .content >.avatar { align-self: center; overflow: hidden; position: relative; border-top-left-radius: 8px; border-top-right-radius: 8px; line-height: 0; } .widget.blogger .content >.avatar.circle { border-radius: 100%; width: 128px; height: 128px; margin-top: 32px; margin-bottom: 0.4rem; } .widget.blogger .content >.avatar.circle img { display: block; position: absolute; top: 50%; left: 50%; transform: translate(-50%, -50%); } @media screen and (max-width: 768px) { .widget.blogger .content >.avatar { width: 80px; height: 80px; border-radius: 100%; border: 2px solid #fff; } .widget.blogger .content >.avatar img { display: block; top: 50%; left: 50%; transform: translate(-50%, -50%); position: absolute; } } .widget.blogger .content .text :first-child { margin-top: 16px; } .widget.blogger .content h2 { font-weight: bold; margin: 8px; } @media screen and (max-width: 768px) { .widget.blogger .content h2 { margin: 8px; } } .widget.blogger .content p { font-weight: bold; margin: 8px 8px 0 8px; empty-cells: hide; } .widget.blogger .content .social-wrapper { display: flex; justify-content: space-between; flex-wrap: wrap; margin: 4px 4px; } .widget.blogger .content .social-wrapper a { color: rgba(68,68,68,0.65); padding: 0; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } .widget.blogger .content .social-wrapper a:hover { color: #ff5722; } .widget.blogger .content .social-wrapper a.social { font-size: 0.9375rem; display: flex; justify-content: center; align-items: center; width: 32px; height: 32px; margin: 4px; border-radius: 100px; } .widget.blogger .content .social-wrapper a.social:hover { background: #e8f4fd; color: #2196f3; } @media screen and (max-width: 768px) { .widget.blogger .content .social-wrapper { justify-content: center; display: none; } } @media screen and (max-width: 768px) { .widget.blogger { box-shadow: none; background: transparent !important; margin-top: 32px; backdrop-filter: none; color: #555; } } .widget.text .content { padding: 4px 16px; } .widget.text .content, .widget.text .content p { font-size: 0.875rem; word-break: break-all; } .widget.text .content a { color: #2196f3; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } .widget.text .content a:hover { color: #ff5722; text-decoration: underline; } .widget.text .content a:active { color: #d93400; } .widget.list .content { padding: 8px 0; } .widget.list .content a { font-size: 0.875rem; font-weight: bold; line-height: 1.5; padding-top: 6px; padding-bottom: 6px; } .widget.list .content a img, .widget.list .content a i { margin-right: 4px; } .widget.list .content a i { margin-left: 1px; } .widget.list .content a img { vertical-align: middle; height: 20px; width: 20px; margin-bottom: 4px; } .widget.list .content a img#round { border-radius: 100%; } .widget.grid .content .grid { border: none; display: flex; flex-wrap: wrap; justify-content: space-around; padding: 4px 16px; } .widget.grid .content .grid a { text-align: center; border-radius: 2px; margin: 0; padding: 4px 8px; display: flex; flex-direction: column; align-items: center; font-size: 0.75rem; font-weight: bold; color: rgba(68,68,68,0.7); line-height: 1.5; word-wrap: break-word; } .widget.grid .content .grid a i { margin-top: 0.3em; margin-bottom: 0.3em; font-size: 1.8em; } .widget.grid .content .grid a img { display: inline; vertical-align: middle; margin-bottom: 4px; } .widget.grid .content .grid a img#round { border-radius: 100%; } .widget.grid .content .grid a.active { color: #2196f3; background: #e8f4fd; } .widget.grid .content .grid a:hover { color: #2196f3; border-radius: 2px; background: #e8f4fd; } .widget.grid .content .grid.fixed a { width: calc(100%/3 - 0 * 16px); } @media screen and (max-width: 768px) { .widget.grid .content .grid.fixed a { width: calc(100%/6 - 0 * 16px); } } @media screen and (max-width: 500px) { .widget.grid .content .grid.fixed a { width: calc(100%/5 - 0 * 16px); } } @media screen and (max-width: 425px) { .widget.grid .content .grid.fixed a { width: calc(100%/4 - 0 * 16px); } } @media screen and (max-width: 375px) { .widget.grid .content .grid.fixed a { width: calc(100%/3 - 0 * 16px); } } .widget.tagcloud .content { text-align: justify; padding: 8px 16px; } .widget.tagcloud .content a { display: inline-block; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; line-height: 1.6em; } .widget.tagcloud .content a:hover { color: #ff5722 !important; text-decoration: underline; } .widget.related_posts .content { font-weight: bold; } .widget.related_posts .content ul { margin-top: 8px; margin-bottom: 8px; } .widget.related_posts .content h3 { font-size: 0.875rem; font-weight: bold; margin: 0; } .widget.related_posts .content h3 a { line-height: inherit; padding-top: 4px; padding-bottom: 4px; } .widget.qrcode .content { display: flex; flex-wrap: wrap; align-items: center; justify-content: space-around; padding-left: 16px; padding-right: 16px; } .widget.qrcode .content, .widget.qrcode .content img { margin-bottom: 4px; } .l_side>.widget.page >.content { padding-top: 0; padding-left: 12px; padding-right: 12px; } .aplayer-container { display: flex; justify-content: center; min-height: 100px; } .aplayer-container meting-js { max-width: 100%; } .aplayer { max-width: 500px; border-radius: 4px; color: #444; font-family: UbuntuMono, \"PingFang SC\", \"Microsoft YaHei\", Helvetica, Arial, Menlo, Monaco, monospace, sans-serif; } .aplayer .aplayer-list { text-align: left; } @media screen and (max-width: 500px) { .aplayer { border-radius: 8px; } } .l_side .toc-wrapper { z-index: 1; overflow: hidden; border-radius: 8px; position: sticky; top: 80px; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; line-height: 1.6; transition: all 0.28s ease; -moz-transition: all 0.28s ease; -webkit-transition: all 0.28s ease; -o-transition: all 0.28s ease; } .l_side .toc-wrapper header { position: sticky; width: 100%; top: 0; padding-bottom: 4px; } .l_side .toc-wrapper .content { max-height: calc(100vh - 144px); } .l_side .toc-wrapper .content a { border-left: 2px solid transparent; } .l_side .toc-wrapper .content a:hover { background: #e8f4fd; border-left: 2px solid #2196f3; } .l_side .toc-wrapper .content a:active { border-left: 4px solid #2196f3; } .l_side .toc-wrapper .content a.active { color: #2196f3; border-left: 2px solid #2196f3; } @media screen and (max-width: 768px) { .l_side .toc-wrapper { z-index: 1001; position: fixed; max-height: 1000px; width: auto; max-width: calc(100% - 2 * 16px); top: 32px; right: 16px; border-radius: 4px; box-shadow: 0 4px 8px 0px rgba(0,0,0,0.1); border: 1px solid #e7e7e7; visibility: hidden; transform: scale(0, 0); transform-origin: right top; } .l_side .toc-wrapper.active { visibility: visible; transform: scale(1, 1); } } @media screen and (max-width: 425px) { .l_side .toc-wrapper { right: 0; } } .l_side .toc-wrapper a { padding-left: 8px; color: rgba(68,68,68,0.65); font-size: 0.875rem; display: inline-block; } .l_side .toc-wrapper ul .toc-child a, .l_side .toc-wrapper ol .toc-child a { font-weight: normal; } .l_side .toc-wrapper ul .toc-item.toc-level-1 .toc-child a, .l_side .toc-wrapper ol .toc-item.toc-level-1 .toc-child a { padding-left: 12.8px; } .l_side .toc-wrapper ul .toc-item.toc-level-2 .toc-child a, .l_side .toc-wrapper ol .toc-item.toc-level-2 .toc-child a { padding-left: 25.6px; } .l_side .toc-wrapper ul .toc-item.toc-level-3 .toc-child a, .l_side .toc-wrapper ol .toc-item.toc-level-3 .toc-child a { padding-left: 38.4px; } .l_side .toc-wrapper ul .toc-item.toc-level-4 .toc-child a, .l_side .toc-wrapper ol .toc-item.toc-level-4 .toc-child a { padding-left: 51.2px; } .l_side .toc-wrapper ul .toc-item.toc-level-5 .toc-child a, .l_side .toc-wrapper ol .toc-item.toc-level-5 .toc-child a { padding-left: 64px; } .l_side .toc-wrapper ul .toc-item.toc-level-6 .toc-child a, .l_side .toc-wrapper ol .toc-item.toc-level-6 .toc-child a { padding-left: 76.8px; } .l_side .toc-wrapper ul li, .l_side .toc-wrapper ol li { width: auto; text-align: left; } .l_side .toc-wrapper ul li a, .l_side .toc-wrapper ol li a { padding: 0 8px 0 11px; font-weight: bold; width: 100%; } .l_side .toc-wrapper:empty { display: none; }"},{"title":"","date":"2020-07-19T18:38:52.114Z","updated":"2020-07-17T09:52:17.000Z","comments":true,"path":"js/search.js","permalink":"https://tetedetian2.github.io/js/search.js","excerpt":"","text":"/* eslint-disable */ var SearchService = \"\"; (function($) { /** * A super class of common logics for all search services * @param options : (object) */ SearchService = function(options) { var self = this; self.config = $.extend({ per_page: 10, selectors: { body: \"body\", form: \".u-search-form\", input: \".u-search-input\", container: \"#u-search\", modal: \"#u-search .modal\", modal_body: \"#u-search .modal-body\", modal_footer: \"#u-search .modal-footer\", modal_overlay: \"#u-search .modal-overlay\", modal_results: \"#u-search .modal-results\", modal_metadata: \"#u-search .modal-metadata\", modal_error: \"#u-search .modal-error\", modal_loading_bar: \"#u-search .modal-loading-bar\", modal_ajax_content: \"#u-search .modal-ajax-content\", modal_logo: '#u-search .modal-footer .logo', btn_close: \"#u-search .btn-close\", btn_next: \"#u-search .btn-next\", btn_prev: \"#u-search .btn-prev\" }, brands: { 'hexo': {logo: '', url: ''}, 'google': {logo: 'google.svg', url: 'https://cse.google.com'}, 'algolia': {logo: 'algolia.svg', url: 'https://www.algolia.com'}, 'baidu': {logo: 'baidu.svg', url: 'http://zn.baidu.com/cse/home/index'}, 'azure': {logo: 'azure.svg', url: 'https://azure.microsoft.com/en-us/services/search/'} }, imagePath: ROOT + \"img/\" }, options); self.dom = {}; self.percentLoaded = 0; self.open = false; self.queryText = \"\"; self.nav = { next: -1, prev: -1, total: 0, current: 1 }; self.parseSelectors = function() { for (var key in self.config.selectors) { self.dom[key] = $(self.config.selectors[key]); } }; self.beforeQuery = function() { if (!self.open) { self.dom.container.fadeIn(); // self.dom.body.addClass('modal-active'); // 上面的是去除了文章的滚动条，我觉得没必要 } self.dom.input.each(function(index,elem) { $(elem).val(self.queryText); }); document.activeElement.blur(); self.dom.modal_error.hide(); self.dom.modal_ajax_content.removeClass('loaded'); self.startLoading(); }; self.afterQuery = function() { self.dom.modal_body.scrollTop(0); self.dom.modal_ajax_content.addClass('loaded'); self.stopLoading(); }; /** * Perform a complete serach operation including UI updates and query * @param startIndex {int} start index or page number */ self.search = function(startIndex, callback) { self.beforeQuery(); if (self.search instanceof Function) { self.query(self.queryText, startIndex, function() { self.afterQuery(); }); } else { console.log(\"query() does not exist.\"); self.onQueryError(self.queryText, ''); self.afterQuery(); } }; /** * Query error handler * @param queryText: (string) * @param status: (string) */ self.onQueryError = function(queryText, status) { var errMsg = \"\"; if (status === \"success\") errMsg = \"No result found for \\\"\" +queryText+ \"\\\".\"; else if (status === \"timeout\") errMsg = \"Unfortunate timeout.\"; else errMsg = \"Mysterious failure.\"; self.dom.modal_results.html(\"\"); self.dom.modal_error.html(errMsg); self.dom.modal_error.show(); }; self.nextPage = function() { if (self.nav.next !== -1) { self.search(self.nav.next); } }; self.prevPage = function() { if (self.nav.prev !== -1) { self.search(self.nav.prev); } }; self.getUrlRelativePath = function (url) { var arrUrl = url.split(\"//\"); var start = arrUrl[1].indexOf(\"/\"); var relUrl = arrUrl[1].substring(start); if (relUrl.indexOf(\"?\") != -1) { relUrl = relUrl.split(\"?\")[0]; } return relUrl; } /** * Generate html for one result * @param url : (string) url * @param title : (string) title * @param digest : (string) digest */ self.buildResult = function (url, title, digest) { var result = self.getUrlRelativePath(url); var html = \"\"; html = \"\"; html += \"\"; html += \"\" + title + \"\"; if (digest !== \"\") html += \"\" + digest + \"\"; html += \"\"; html += \"\"; return html; }; /** * Close the modal, resume body scrolling * no param */ self.close = function() { self.open = false; self.dom.container.fadeOut(); self.dom.body.removeClass('modal-active'); }; /** * Searchform submit event handler * @param queryText : (string) the query text */ self.onSubmit = function(event) { event.preventDefault(); self.queryText = $(this).find('.u-search-input').val(); if (self.queryText) { self.search(1); } }; /** * Start loading bar animation * no param */ self.startLoading = function() { self.dom.modal_loading_bar.show(); self.loadingTimer = setInterval(function() { self.percentLoaded = Math.min(self.percentLoaded+5,95); self.dom.modal_loading_bar.css('width', self.percentLoaded+'%'); }, 100); }; /** * Stop loading bar animation * no param */ self.stopLoading = function() { clearInterval(self.loadingTimer); self.dom.modal_loading_bar.css('width', '100%'); self.dom.modal_loading_bar.fadeOut(); setTimeout(function() { self.percentLoaded = 0; self.dom.modal_loading_bar.css('width', '0%'); }, 300); }; /** * Add service branding * @param service {String} service name */ self.addLogo = function(service) { var html = \"\"; if (self.config.brands[service] && self.config.brands[service].logo) { html += \"\"; html += ''; html += \"\"; self.dom.modal_logo.html(html); } }; self.destroy = function() { self.dom.form.each(function(index,elem) { $(elem).off('submit'); }); self.dom.modal_overlay.off('click'); self.dom.btn_close.off('click'); self.dom.btn_next.off('click'); self.dom.btn_prev.off('click'); self.dom.container.remove(); }; /** * Load template and register event handlers * no param */ self.init = function() { $('body').append(template); self.parseSelectors(); self.dom.modal_footer.show(); self.dom.form.each(function(index,elem) { $(elem).on('submit', self.onSubmit); }); self.dom.modal_overlay.on('click', self.close); self.dom.btn_close.on('click', self.close); self.dom.btn_next.on('click', self.nextPage); self.dom.btn_prev.on('click', self.prevPage); }; self.init(); }; var template = ' of NEXT PREV '; })(jQuery); var AlgoliaSearch; (function($) { 'use strict'; /** * Search by Algolia Search * @param options : (object) */ AlgoliaSearch = function(options) { SearchService.apply(this, arguments); var self = this; var endpoint = \"https://\" +self.config.appId+ \"-dsn.algolia.net/1/indexes/\" + self.config.indexName; self.addLogo('algolia'); /** * Generate result list html * @param data : (array) result items */ self.buildResultList = function(data) { var html = \"\"; $.each(data, function(index, row) { var url = row.permalink || row.path || \"\"; if (!row.permalink && row.path) { url = ROOT + url; } var title = row.title; var digest = \"\"; html += self.buildResult(url, title, digest, index+1); }); html += \"try{pjax.refresh(document.querySelector('#u-search'));document.addEventListener('pjax:send',function(){$('#u-search').fadeOut(500);$('body').removeClass('modal-active')});}catch(e){$('#u-search').fadeOut(500);}\"; return html; }; /** * Generate metadata after a successful query * @param data : (object) the raw search response data */ self.buildMetadata = function(data) { self.nav.current = data.page * data.hitsPerPage + 1; self.nav.currentCount = data.hits.length; self.nav.total = parseInt(data.nbHits); self.dom.modal_metadata.children('.total').html(self.nav.total); self.dom.modal_metadata.children('.range').html(self.nav.current + \"-\" + (self.nav.current+self.nav.currentCount-1)); if (self.nav.total > 0) { self.dom.modal_metadata.show(); } else { self.dom.modal_metadata.hide(); } if (data.page < data.nbPages-1) { self.nav.next = (data.page+1)+1; self.dom.btn_next.show(); } else { self.nav.next = -1; self.dom.btn_next.hide(); } if (data.page > 0) { self.nav.prev = (data.page+1)-1; self.dom.btn_prev.show(); } else { self.nav.prev = -1; self.dom.btn_prev.hide(); } }; /** * Send a GET request * @param queryText : (string) the query text * @param page : (int) the current page (start from 1) * @param callback : (function) */ self.query = function(queryText, page, callback) { $.get(endpoint, { query: queryText, page: page-1, hitsPerPage: self.config.per_page, \"x-algolia-application-id\": self.config.appId, \"x-algolia-api-key\": self.config.apiKey }, function(data, status) { if (status === 'success' && data.hits && data.hits.length > 0) { var results = self.buildResultList(data.hits); self.dom.modal_results.html(results); } else { self.onQueryError(queryText, status); } self.buildMetadata(data); if (callback) { callback(data); } }); }; return self; }; })(jQuery); var AzureSearch; (function($) { 'use strict'; /** * Search by Azure Search API * @param options : (object) */ AzureSearch = function(options) { SearchService.apply(this, arguments); var self = this; var endpoint = \"https://\" +self.config.serviceName+ \".search.windows.net/indexes/\" +self.config.indexName+ \"/docs?api-version=2015-02-28\"; self.nav.current = 1; self.addLogo('azure'); /** * Generate result list html * @param data : (array) result items */ self.buildResultList = function(data) { var html = \"\"; $.each(data, function(index, row) { var url = row.permalink || row.path || \"\"; if (!row.permalink && row.path) { url = \"/\" + url; } var title = row.title; var digest = row.excerpt || \"\"; html += self.buildResult(url, title, digest); }); html += \"try{pjax.refresh(document.querySelector('#u-search'));document.addEventListener('pjax:send',function(){$('#u-search').fadeOut(500);$('body').removeClass('modal-active')});}catch(e){$('#u-search').fadeOut(500);}\"; return html; }; /** * Generate metadata after a successful query * @param data : (object) the raw response data * @param startIndex : (int) requested start index of current query */ self.buildMetadata = function(data, startIndex) { self.nav.current = startIndex; self.nav.currentCount = data.value.length; self.nav.total = parseInt(data['@odata.count']); self.dom.modal_metadata.children('.total').html(self.nav.total); self.dom.modal_metadata.children('.range').html(self.nav.current + \"-\" + (self.nav.current+self.nav.currentCount-1)); if (self.nav.total > 0) { self.dom.modal_metadata.show(); } else { self.dom.modal_metadata.hide(); } if (self.nav.current+self.nav.currentCount 1) { self.nav.prev = self.nav.current-self.config.per_page; self.dom.btn_prev.show(); } else { self.nav.prev = -1; self.dom.btn_prev.hide(); } }; /** * Send a GET request * @param queryText : (string) the query text * @param page : (int) the current page (start from 1) * @param callback : (function) */ self.query = function(queryText, startIndex, callback) { $.ajax({ url: endpoint, headers: { \"Accept\": \"application/json\", \"api-key\": self.config.queryKey }, data: { search: queryText, $orderby: \"date desc\", $skip: startIndex-1, $top: self.config.per_page, $count: true }, type: \"GET\", success: function(data, status) { if (status === 'success' && data.value && data.value.length > 0) { var results = self.buildResultList(data.value); self.dom.modal_results.html(results); } else { self.onQueryError(queryText, status); } self.buildMetadata(data, startIndex); if (callback) { callback(data); } } }); }; return self; }; })(jQuery); var BaiduSearch; (function($) { 'use strict'; /** * TODO * Search by Baidu Search API * @param options : (object) */ BaiduSearch = function(options) { SearchService.apply(this, arguments); var self = this; var endpoint = \"\"; self.addLogo('baidu'); /** * Generate result list html * @param data : (array) result items */ self.buildResultList = function(data, queryText) { var results = [], html = \"\"; $.each(data, function(index, post) { if (self.contentSearch(post, queryText)) html += self.buildResult(post.linkUrl, post.title, post.abstract); }); html += \"try{pjax.refresh(document.querySelector('#u-search'));document.addEventListener('pjax:send',function(){$('#u-search').fadeOut(500);$('body').removeClass('modal-active')});}catch(e){$('#u-search').fadeOut(500);}\"; return html; }; /** * Generate metadata after a successful query * @param data : (object) the raw google custom search response data */ self.buildMetadata = function(data) { }; self.loadScript = function() { self.dom.input.each(function(index,elem) { $(elem).attr('disabled', true); }); var script = \"\"; self.dom.body.append(script); }; self.initBaidu = function() { self.cse = new BCse.Search(self.config.apiId); //self.cse.setPageNum(self.config.per_page); self.dom.input.each(function(index,elem) { $(elem).attr('disabled', false); }); }; /** * Get search results * @param queryText {String} * @param page {Integer} * @param callback {Function} */ self.query = function(queryText, page, callback) { self.cse.getResult(queryText, function(data) { console.log(\"Searching: \" + queryText); self.cse.getError(function(data) { console.log(data); }); if (data.length > 0) { self.buildResultList(data, queryText); self.cse.getSearchInfo(queryText, function(data) { console.log(data); self.buildMetadata(data); }); } else { self.nav.total = 0; self.nav.next = -1; self.nav.prev = -1; self.dom.modal_metadata.hide(); self.dom.btn_next.hide(); self.dom.btn_prev.hide(); self.onQueryError(queryText, \"success\"); } if (callback instanceof Function) { callback(); } }); }; self.loadScript(); return self; }; })(jQuery); var GoogleCustomSearch = \"\"; (function($) { 'use strict'; /** * Search by Google Custom Search Engine JSON API * @param options : (object) */ GoogleCustomSearch = function(options) { SearchService.apply(this, arguments); var self = this; var endpoint = \"https://www.googleapis.com/customsearch/v1\"; self.addLogo('google'); /** * Generate result list html * @param data : (array) result items */ self.buildResultList = function(data) { var html = \"\"; $.each(data, function(index, row) { var url = row.link; var title = row.title; var digest = (row.htmlSnippet || \"\").replace('',''); html += self.buildResult(url, title, digest); }); html += \"try{pjax.refresh(document.querySelector('#u-search'));document.addEventListener('pjax:send',function(){$('#u-search').fadeOut(500);$('body').removeClass('modal-active')});}catch(e){$('#u-search').fadeOut(500);}\"; return html; }; /** * Generate metadata after a successful query * @param data : (object) the raw google custom search response data */ self.buildMetadata = function(data) { if (data.queries && data.queries.request && data.queries.request[0].totalResults !== '0') { self.nav.current = data.queries.request[0].startIndex; self.nav.currentCount = data.queries.request[0].count; self.nav.total = parseInt(data.queries.request[0].totalResults); self.dom.modal_metadata.children('.total').html(self.nav.total); self.dom.modal_metadata.children('.range').html(self.nav.current + \"-\" + (self.nav.current+self.nav.currentCount-1)); self.dom.modal_metadata.show(); } else { self.dom.modal_metadata.hide(); } if (data.queries && data.queries.nextPage) { self.nav.next = data.queries.nextPage[0].startIndex; self.dom.btn_next.show(); } else { self.nav.next = -1; self.dom.btn_next.hide(); } if (data.queries && data.queries.previousPage) { self.nav.prev = data.queries.previousPage[0].startIndex; self.dom.btn_prev.show(); } else { self.nav.prev = -1; self.dom.btn_prev.hide(); } }; /** * Send a GET request * @param queryText : (string) the query text * @param startIndex : (int) the index of first item (start from 1) * @param callback : (function) */ self.query = function(queryText, startIndex, callback) { $.get(endpoint, { key: self.config.apiKey, cx: self.config.engineId, q: queryText, start: startIndex, num: self.config.per_page }, function(data, status) { if (status === 'success' && data.items && data.items.length > 0) { var results = self.buildResultList(data.items); self.dom.modal_results.html(results); } else { self.onQueryError(queryText, status); } self.buildMetadata(data); if (callback) { callback(); } }); }; return self; }; })(jQuery); var HexoSearch; (function($) { 'use strict'; /** * Search by Hexo generator json content * @param options : (object) */ HexoSearch = function(options) { SearchService.apply(this, arguments); var self = this; self.config.endpoint = ROOT + ((options||{}).endpoint || \"content.json\"); self.config.endpoint = self.config.endpoint.replace(\"//\",\"/\"); //make sure the url is correct self.cache = \"\"; /** * Search queryText in title and content of a post * Credit to: http://hahack.com/codes/local-search-engine-for-hexo/ * @param post : the post object * @param queryText : the search query */ self.contentSearch = function(post, queryText) { var post_title = post.title.trim().toLowerCase(), post_content = post.text.trim().toLowerCase(), keywords = queryText.trim().toLowerCase().split(\" \"), foundMatch = false, index_title = -1, index_content = -1, first_occur = -1; if (post_title !== '' && post_content !== '') { $.each(keywords, function(index, word) { index_title = post_title.indexOf(word); index_content = post_content.indexOf(word); if (index_title < 0 && index_content < 0) { foundMatch = false; } else { foundMatch = true; if (index_content < 0) { index_content = 0; } if (index === 0) { first_occur = index_content; } } if (foundMatch) { post_content = post.text.trim(); var start = 0, end = 0; if (first_occur >= 0) { start = Math.max(first_occur-40, 0); end = (start === 0) ? Math.min(200, post_content.length) : Math.min(first_occur + 120, post_content.length); var match_content = post_content.substring(start, end); keywords.forEach(function(keyword) { var regS = new RegExp(keyword, \"gi\"); match_content = match_content.replace(regS, \"\"+keyword+\"\"); }); post.digest = match_content + \"......\"; } else { end = Math.min(200, post_content.length); post.digest = post_content.trim().substring(0, end); } } }); } return foundMatch; }; /** * Generate result list html * @param data : (array) result items */ self.buildResultList = function(data, queryText) { var results = [], html = \"\"; $.each(data, function (index, post) { if (self.contentSearch(post, queryText)) html += self.buildResult(post.permalink, post.title, post.digest); }); html += \"try{pjax.refresh(document.querySelector('#u-search'));document.addEventListener('pjax:send',function(){$('#u-search').fadeOut(500);$('body').removeClass('modal-active')});}catch(e){$('#u-search').fadeOut(500);}\"; return html; }; /** * Generate metadata after a successful query * @param data : (object) the raw google custom search response data */ self.buildMetadata = function(data) { self.dom.modal_footer.hide(); }; /** * Send a GET request * @param queryText : (string) the query text * @param startIndex : (int) the index of first item (start from 1) * @param callback : (function) */ self.query = function(queryText, startIndex, callback) { if (!self.cache) { $.get(self.config.endpoint, { key: self.config.apiKey, cx: self.config.engineId, q: queryText, start: startIndex, num: self.config.per_page }, function(data, status) { if (status !== 'success' || !data || (!data.posts && !data.pages) || (data.posts.length < 1 && data.pages.length < 1) ) { self.onQueryError(queryText, status); } else { self.cache = data; var results = \"\"; results += self.buildResultList(data.pages, queryText); results += self.buildResultList(data.posts, queryText); self.dom.modal_results.html(results); } self.buildMetadata(data); if (callback) { callback(data); } }); } else { var results = \"\"; results += self.buildResultList(self.cache.pages, queryText); results += self.buildResultList(self.cache.posts, queryText); self.dom.modal_results.html(results); self.buildMetadata(self.cache); if (callback) { callback(self.cache); } } }; return self; }; })(jQuery);"},{"title":"博客","date":"2020-07-06T09:50:20.000Z","updated":"2020-07-20T10:50:12.449Z","comments":true,"path":"tags/hexo博客.html","permalink":"https://tetedetian2.github.io/tags/hexo%E5%8D%9A%E5%AE%A2.html","excerpt":"","text":""},{"title":"","date":"2020-07-19T18:38:52.104Z","updated":"2020-07-17T09:52:17.000Z","comments":true,"path":"js/app.js","permalink":"https://tetedetian2.github.io/js/app.js","excerpt":"","text":"/* eslint-disable */ var customSearch; (function ($) { \"use strict\"; // 校正页面定位（被导航栏挡住的区域） var scrollCorrection = 80; // (header height = 64px) + (gap = 16px) var $headerAnchor = $('.l_header', '.cover-wrapper'); if ($headerAnchor[0]) { scrollCorrection = $headerAnchor[0].clientHeight + 16; } // 尝试： 重设数据值 function restData() { scrollCorrection = 80; $headerAnchor = $('.l_header', '.cover-wrapper'); if ($headerAnchor[0]) { scrollCorrection = $headerAnchor[0].clientHeight + 16; } } // 校正页面定位（被导航栏挡住的区域） function scrolltoElement(elem, correction = scrollCorrection) { const $elem = elem.href ? $(elem.getAttribute('href')) : $(elem); $('html, body').animate({ 'scrollTop': $elem.offset().top - correction }, 500); } // 设置滚动锚点 function setScrollAnchor() { const $postsBtn = $('.menu .active'); // 一级导航上的当前激活的按钮 const $topBtn = $('.s-top'); // 向上 const $titleBtn = $('h1.title', '#header-meta'); // 文章内标题 const $bodyAnchor = $('.l_body'); // 页面主体 if ($postsBtn.length && $bodyAnchor) { $postsBtn.click(e => { e.preventDefault(); e.stopPropagation(); if($postsBtn.attr(\"href\") != \"/\") // TODO: fix it scrolltoElement($bodyAnchor); e.stopImmediatePropagation(); $postsBtn.unbind('click'); }); } if ($titleBtn.length && $bodyAnchor) { $titleBtn.click(e => { e.preventDefault(); e.stopPropagation(); scrolltoElement($bodyAnchor); e.stopImmediatePropagation(); $titleBtn.unbind('click'); }); } if ($topBtn.length && $bodyAnchor) { $topBtn.click(e => { e.preventDefault(); e.stopPropagation(); scrolltoElement($bodyAnchor); e.stopImmediatePropagation(); }); } //========================================== const $coverAnchor = $('.cover-wrapper'); var enableCover = $('#pjax-enable-cover').text(); // Pjax 处理 var showHeaderPoint = 0; if ($coverAnchor[0]) { if(enableCover == \"true\" && $('.cover.half').css('display') !== 'none') // Pjax 处理 showHeaderPoint = $coverAnchor[0].clientHeight - 180; } var pos = document.body.scrollTop; if(enableCover == \"true\" && $('.cover.half').css('display') === 'none') pos += 180; // Pjax 处理 $(document, window).scroll(() => { let scrollTop = $(window).scrollTop(); // 滚动条距离顶部的距离 if(enableCover == \"true\" && $('.cover.half').css('display') === 'none') scrollTop += 180; // Pjax 处理 const del = scrollTop - pos; pos = scrollTop; if (scrollTop > 180) { $topBtn.addClass('show'); if (del > 0) { $topBtn.removeClass('hl'); } else { $topBtn.addClass('hl'); } } else { $topBtn.removeClass('show').removeClass('hl'); } if (scrollTop > showHeaderPoint) { $headerAnchor.addClass('show'); } else { $headerAnchor.removeClass('show'); } }); //========================================== } // 设置导航栏 function setHeader() { var HEXO_ISPAGE = $.trim($('#pjax-ispage').text()); if(HEXO_ISPAGE == 'true') window.subData = { title: $.trim($('#pjax-pageTitle').text()), tools: true } if (!window.subData) return; const $wrapper = $('header .wrapper'); // 整个导航栏 const $comment = $('.s-comment', $wrapper); // 评论按钮 桌面端 移动端 const $toc = $('.s-toc', $wrapper); // 目录按钮 仅移动端 $wrapper.find('.nav-sub .title').text(window.subData.title); // 二级导航文章标题 // 决定一二级导航栏的切换 let pos = document.body.scrollTop; $(document, window).scroll(() => { const scrollTop = $(window).scrollTop(); const del = scrollTop - pos; if (del >= 50 && scrollTop > 100) { pos = scrollTop; $wrapper.addClass('sub'); } else if (del { e.stopPropagation(); $tocTarget.toggleClass('active'); $toc.toggleClass('active'); }); $(document).click(function (e) { e.stopPropagation(); $tocTarget.removeClass('active'); $toc.removeClass('active'); }); $(document, window).scroll(() => { $tocTarget.removeClass('active'); $toc.removeClass('active'); }); } else $toc.remove(); } // 设置导航栏菜单选中状态 function setHeaderMenuSelection() { var $headerMenu = $('body .navigation'); // 先把已经激活的取消激活 $headerMenu.find('li a.active').removeClass('active'); // var $underline = $headerMenu.find('.underline'); function setUnderline($item) { // if (!transition) $underline.addClass('disable-trans'); if ($item && $item.length) { $item.addClass('active').siblings().removeClass('active'); } } //set current active nav var $active_link = null; // replace '%' '/' '.' var idname = location.pathname.replace(/\\/|%|\\./g, \"\"); if (idname.length == 0) { idname = \"home\"; } var page = idname.match(/page\\d{0,}$/g); if (page) { page = page[0]; idname = idname.split(page)[0]; } var index = idname.match(/index.html/); if (index) { index = index[0]; idname = idname.split(index)[0]; } if (idname && $headerMenu) { $active_link = $('#' + idname, $headerMenu); setUnderline($active_link); } } // 设置导航栏搜索框 fix √ function setHeaderSearch() { var $switcher = $('.l_header .switcher .s-search'); // 搜索按钮 移动端 var $header = $('.l_header'); // 移动端导航栏 var $search = $('.l_header .m_search'); // 搜索框 桌面端 if ($switcher.length === 0) return; $switcher.click(function (e) { e.stopPropagation(); $header.toggleClass('z_search-open'); // 激活移动端搜索框 $switcher.toggleClass('active'); // 搜索按钮 $search.find('input').focus(); }); $(document).click(function (e) { $header.removeClass('z_search-open'); $switcher.removeClass('active'); }); $search.click(function (e) { e.stopPropagation(); }); $header.ready(function () { $header.bind('keydown', function (event) { if (event.keyCode == 9) { return false; } else { var isie = (document.all) ? true : false; var key; var ev; if (isie) { //IE浏览器 key = window.event.keyCode; ev = window.event; } else { //火狐浏览器 key = event.which; ev = event; } if (key == 9) { //IE浏览器 if (isie) { ev.keyCode = 0; ev.returnValue = false; } else { //火狐浏览器 ev.which = 0; ev.preventDefault(); } } } }); }); } // 设置导航栏搜索框 function setTocToggle() { const $toc = $('.toc-wrapper'); // 侧边栏 TOC 移动端 if ($toc.length === 0) return; $toc.click((e) => { e.stopPropagation(); $toc.addClass('active'); }); $(document).click(() => $toc.removeClass('active')); $toc.on('click', 'a', (e) => { e.preventDefault(); e.stopPropagation(); if (e.target.tagName === 'A') { scrolltoElement(e.target, 0); } else if (e.target.tagName === 'SPAN') { scrolltoElement(e.target.parentElement, 0); } $toc.removeClass('active'); const $tocBtn = $('.s-toc'); if ($tocBtn.length > 0) { $tocBtn.removeClass('active'); } }); let liElements = Array.from($toc.find('li a')); //function animate above will convert float to int. let getAnchor = () => liElements.map(elem => Math.floor($(elem.getAttribute('href')).offset().top - scrollCorrection)); let anchor = getAnchor(); let domHeigth = $(document).height(); let scrollListener = () => { let scrollTop = $('html').scrollTop() || $('body').scrollTop(); if ($(document).height() != domHeigth) { // dom 高度发生变化： 普遍来说，是图片懒加载造成的 scrollTop = $('html').scrollTop() || $('body').scrollTop(); domHeigth = $(document).height(); anchor = getAnchor(); } if (!anchor) return; //binary search. let l = 0, r = anchor.length - 1, mid; while (l < r) { mid = (l + r + 1) >> 1; if (anchor[mid] === scrollTop) l = r = mid; else if (anchor[mid] < scrollTop) l = mid; else r = mid - 1; } $(liElements).removeClass('active').eq(l).addClass('active'); }; $(window).scroll(() => { scrollListener(); }); // 监听窗口改变事件 let resizeTimer = null; $(window).bind('resize', function (){ if (resizeTimer) clearTimeout(resizeTimer); resizeTimer = setTimeout(function(){ anchor = getAnchor(); scrollListener(); } , 100); }); scrollListener(); } // 设置搜索服务 function setSearchService() { if (SEARCH_SERVICE === 'google') { customSearch = new GoogleCustomSearch({ apiKey: GOOGLE_CUSTOM_SEARCH_API_KEY, engineId: GOOGLE_CUSTOM_SEARCH_ENGINE_ID, imagePath: \"/img/\" }); } else if (SEARCH_SERVICE === 'algolia') { customSearch = new AlgoliaSearch({ apiKey: ALGOLIA_API_KEY, appId: ALGOLIA_APP_ID, indexName: ALGOLIA_INDEX_NAME, imagePath: \"/img/\" }); } else if (SEARCH_SERVICE === 'hexo') { customSearch = new HexoSearch({ imagePath: \"/img/\" }); } else if (SEARCH_SERVICE === 'azure') { customSearch = new AzureSearch({ serviceName: AZURE_SERVICE_NAME, indexName: AZURE_INDEX_NAME, queryKey: AZURE_QUERY_KEY, imagePath: \"/img/\" }); } else if (SEARCH_SERVICE === 'baidu') { customSearch = new BaiduSearch({ apiId: BAIDU_API_ID, imagePath: \"/img/\" }); } } // 设置 tabs 标签 function setTabs() { const $tabs = $('.tabs'); if ($tabs.length === 0) return; let $navs = $tabs.find('.nav-tabs .tab'); for (var i = 0; i < $navs.length; i++) { let $a = $tabs.find($navs[i].children[0]); $a.addClass($a.attr(\"href\")); $a.removeAttr('href'); } $('.tabs .nav-tabs').on('click', 'a', (e) => { e.preventDefault(); e.stopPropagation(); let $tab = $(e.target.parentElement.parentElement.parentElement); $tab.find('.nav-tabs .active').removeClass('active'); $tab.find(e.target.parentElement).addClass('active'); $tab.find('.tab-content .active').removeClass('active'); $tab.find($(e.target).attr(\"class\")).addClass('active'); return false; }); } $(function () { setHeader(); setHeaderMenuSelection(); setHeaderSearch(); setTocToggle(); setScrollAnchor(); setSearchService(); setTabs(); // 全屏封面底部箭头 $('.scroll-down').on('click', function () { scrolltoElement('.l_body'); }); try { // addEventListener是先绑定先执行，此处的绑定后执行 document.addEventListener('pjax:complete', function () { $(function () { restData(); setHeader(); setHeaderMenuSelection(); setTocToggle(); setScrollAnchor(); setTabs(); // 处理点击事件 setHeaderSearch 没有重载，需要重新绑定单个事件 var $switcher = $('.l_header .switcher .s-search'); // 搜索按钮 移动端 var $header = $('.l_header'); // 移动端导航栏 if ($switcher.length !== 0) { $(document).click(function (e) { $header.removeClass('z_search-open'); $switcher.removeClass('active'); }); } }); }); } catch (error) { // console.log(error); } }); })(jQuery); /*锚点定位*/ if(window.location.hash){ var checkExist = setInterval(function() { if (typeof jQuery == 'undefined'){return;} if ($(\"#\"+decodeURI(window.location.hash.split(\"#\")[1]).replace(/\\ /g,\"-\")).length) { $('html, body').animate({scrollTop: $(\"#\"+decodeURI(window.location.hash.split(\"#\")[1]).replace(/\\ /g,\"-\")).offset().top-10}, 500); clearInterval(checkExist); } }, 100); }"},{"title":"计算机网络","date":"2020-07-05T02:51:46.000Z","updated":"2020-07-05T02:52:32.964Z","comments":true,"path":"tags/index-2.html","permalink":"https://tetedetian2.github.io/tags/index-2.html","excerpt":"","text":""},{"title":"数据库","date":"2020-07-05T02:49:58.000Z","updated":"2020-07-05T02:51:32.630Z","comments":true,"path":"tags/index-1.html","permalink":"https://tetedetian2.github.io/tags/index-1.html","excerpt":"","text":""},{"title":"计算机网络","date":"2020-07-06T09:50:20.000Z","updated":"2020-07-06T09:51:32.898Z","comments":true,"path":"tags/index-4.html","permalink":"https://tetedetian2.github.io/tags/index-4.html","excerpt":"","text":""},{"title":"Linux","date":"2020-07-05T02:51:50.000Z","updated":"2020-07-05T02:53:04.071Z","comments":true,"path":"tags/index-3.html","permalink":"https://tetedetian2.github.io/tags/index-3.html","excerpt":"","text":""},{"title":"所有标签","date":"2020-07-20T11:20:53.533Z","updated":"2020-07-20T11:20:53.533Z","comments":true,"path":"tags/index.html","permalink":"https://tetedetian2.github.io/tags/index.html","excerpt":"","text":""},{"title":"","date":"2020-07-19T18:38:52.132Z","updated":"2020-07-17T09:52:17.000Z","comments":true,"path":"js/valine.js","permalink":"https://tetedetian2.github.io/js/valine.js","excerpt":"","text":"/*! * Valine v1.4.14 * (c) 2017-2020 xCss * Released under the GPL-2.0 License. * Last Update: 2020/4/26 下午8:39:08 */ !function(e, t) { \"object\" == typeof exports && \"object\" == typeof module ? module.exports = t() : \"function\" == typeof define && define.amd ? define([], t) : \"object\" == typeof exports ? exports.Valine = t() : e.Valine = t() }(this, function() { return function(e) { function t(r) { if (n[r]) return n[r].exports; var o = n[r] = { i: r, l: !1, exports: {} }; return e[r].call(o.exports, o, o.exports, t), o.l = !0, o.exports } var n = {}; return t.m = e, t.c = n, t.i = function(e) { return e } , t.d = function(e, n, r) { t.o(e, n) || Object.defineProperty(e, n, { configurable: !1, enumerable: !0, get: r }) } , t.n = function(e) { var n = e && e.__esModule ? function() { return e.default } : function() { return e } ; return t.d(n, \"a\", n), n } , t.o = function(e, t) { return Object.prototype.hasOwnProperty.call(e, t) } , t.p = \"\", t(t.s = 63) }([function(e, t, n) { \"use strict\"; function r(e) { return e && e.__esModule ? e : { default: e } } t.__esModule = !0; var o = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function(e) { return typeof e } : function(e) { return e && \"function\" == typeof Symbol && e.constructor === Symbol && e !== Symbol.prototype ? \"symbol\" : typeof e } , i = n(38) , a = r(i) , s = n(28) , l = r(s) , c = n(27) , u = r(c) , d = n(42) , p = r(d) , f = document , h = navigator , v = /[&\"'`\\\\]/g , g = RegExp(v.source) , m = /&(?:amp|lt|gt|quot|#39|#x60|#x5c);/g , y = RegExp(m.source) , b = { \"&\": \"&amp;\", \"\": \"&gt;\", '\"': \"&quot;\", \"'\": \"&#39;\", \"`\": \"&#x60;\", \"\\\\\": \"&#x5c;\" } , w = {}; for (var x in b) w[b[x]] = x; var k = null; Array.prototype.forEach || (Array.prototype.forEach = function(e, t) { var n, r; if (null == this) throw new TypeError(\" this is null or not defined\"); var o = Object(this) , i = o.length >>> 0; if (\"function\" != typeof e) throw new TypeError(e + \" is not a function\"); for (arguments.length > 1 && (n = t), r = 0; r < i; ) { var a; r in o && (a = o[r], e.call(n, a, r, o)), r++ } } ), window.NodeList && !NodeList.prototype.forEach && (NodeList.prototype.forEach = Array.prototype.forEach), String.prototype.trim || (String.prototype.trim = function() { return this.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, \"\") } ), (0, a.default)(l.default.fn, { prepend: function(e) { return e instanceof HTMLElement || (e = e[0]), this.forEach(function(t) { t.insertAdjacentElement(\"afterBegin\", e) }), this }, append: function(e) { return e instanceof HTMLElement || (e = e[0]), this.forEach(function(t) { t.insertAdjacentElement(\"beforeEnd\", e) }), this }, remove: function() { return this.forEach(function(e) { try { e.parentNode.removeChild(e) } catch (e) {} }), this }, find: function(e) { return (0, l.default)(e, this) }, show: function() { return this.forEach(function(e) { e.style.display = \"block\" }), this }, hide: function() { return this.forEach(function(e) { e.style.display = \"none\" }), this }, on: function(e, t, n) { return l.default.fn.off(e, t, n), this.forEach(function(r) { e.split(\" \").forEach(function(e) { r.addEventListener ? r.addEventListener(e, t, n || !1) : r.attachEvent ? r.attachEvent(\"on\" + e, t) : r[\"on\" + e] = t }) }), this }, off: function(e, t, n) { return this.forEach(function(r) { e.split(\" \").forEach(function(e) { r.removeEventListener ? r.removeEventListener(e, t, n || !1) : r.detachEvent ? r.detachEvent(\"on\" + e, t) : r[\"on\" + e] = null }) }), this }, html: function(e) { return void 0 !== e ? (this.forEach(function(t) { t.innerHTML = e }), this) : this[0].innerHTML }, text: function(e) { return void 0 !== e ? (this.forEach(function(t) { t.innerText = e }), this) : this[0].innerText }, empty: function(e) { return e = e || 0, this.forEach(function(t) { setTimeout(function(e) { t.innerText = \"\" }, e) }), this }, val: function(e) { return void 0 !== e ? (this.forEach(function(t) { t.value = e }), this) : this[0].value || \"\" }, attr: function() { var e = arguments; if (\"object\" == o(arguments[0])) { var t = arguments[0] , n = this; return Object.keys(t).forEach(function(e) { n.forEach(function(n) { n.setAttribute(e, t[e]) }) }), this } return \"string\" == typeof arguments[0] && arguments.length < 2 ? this[0].getAttribute(arguments[0]) || \"\" : (this.forEach(function(t) { t.setAttribute(e[0], e[1]) }), this) }, removeAttr: function(e) { return this.forEach(function(t) { var n, r = 0, o = e && e.match(/[^\\x20\\t\\r\\n\\f\\*\\/\\\\]+/g); if (o && 1 === t.nodeType) for (; n = o[r++]; ) t.removeAttribute(n) }), this }, hasClass: function(e) { return !!this[0] && new RegExp(\"(\\\\s|^)\" + e + \"(\\\\s|$)\").test(this[0].getAttribute(\"class\")) }, addClass: function(e) { return this.forEach(function(t) { var n = (0, l.default)(t) , r = n.attr(\"class\"); n.hasClass(e) || n.attr(\"class\", r += \" \" + e) }), this }, removeClass: function(e) { return this.forEach(function(t) { var n = (0, l.default)(t) , r = n.attr(\"class\"); if (n.hasClass(e)) { var o = new RegExp(\"(\\\\s|^)\" + e + \"(\\\\s|$)\"); n.attr(\"class\", r.replace(o, \"\")) } }), this } }), (0, a.default)(l.default, { extend: a.default, noop: function() {}, navi: h, ua: h.userAgent, lang: h.language || h.languages[0], detect: u.default, store: p.default, escape: function(e) { return e && g.test(e) ? e.replace(v, function(e) { return b[e] }) : e }, unescape: function(e) { return e && y.test(e) ? e.replace(m, function(e) { return w[e] }) : e }, dynamicLoadSource: function(e, t) { if ((0, l.default)('script[src=\"' + e + '\"]').length) t && t(); else { var n = f.createElement(\"script\"); n.onload = n.onreadystatechange = function() { var e = this; e.onload = e.onreadystatechange = null, t && t(), (0, l.default)(n).remove() } , n.async = !0, n.setAttribute(\"referrerPolicy\", \"no-referrer\"); (0, l.default)(\"head\")[0].appendChild(n), n.src = e } }, sdkLoader: function(e, t, n) { t in window && window[t] ? (k && clearTimeout(k), n && n()) : l.default.dynamicLoadSource(e, function() { k = setTimeout(l.default.sdkLoader(e, t, n), 100) }) }, deleteInWin: function(e, t) { var n = function(t) { if (e in window) try { delete window[e] } catch (t) { window[e] = null } }; 0 === t ? n() : setTimeout(n, t || 500) }, ajax: function(e) { e = e || {}, e.type = (e.type || \"GET\").toUpperCase(), e.dataType = e.dataType || \"json\", e.async = e.async || !0, e.timeout = e.timeout || 8e3; var t = \"[object FormData]\" == {}.toString.call(e.data) ? e.data : function(e) { var t = []; for (var n in e) t.push(encodeURIComponent(n) + \"=\" + encodeURIComponent(e[n])); return t.push(\"t=\" + Date.now()), t.join(\"&\") }(e.data) , n = null , r = \"XMLHttpRequest\"in window ? new XMLHttpRequest : new ActiveXObject(\"Microsoft.XMLHTTP\"); r.onreadystatechange = function(t) { if (4 == r.readyState) { clearTimeout(n); var o = r.status; o >= 200 && o < 300 ? e.success && e.success(JSON.parse(r.responseText)) : e.fail && e.fail(o) } } , \"GET\" == e.type ? (r.open(\"GET\", e.url + \"?\" + t, e.async), r.send(null)) : \"POST\" == e.type && (r.open(\"POST\", e.url, e.async), void 0 == e.contentType || null == e.contentType ? r.send(t) : (r.setRequestHeader(\"Content-Type\", e.contentType), r.send(JSON.stringify(e.data)))), n = setTimeout(function(e) { clearTimeout(n), r.abort() }, e.timeout) } }), t.default = l.default } , function(e, t, n) { \"use strict\"; var r = TypeError , o = Object.getOwnPropertyDescriptor; if (o) try { o({}, \"\") } catch (e) { o = null } var i, a, s = function() { throw new r }, l = o ? function() { try { return arguments.callee, s } catch (e) { try { return o(arguments, \"callee\").get } catch (e) { return s } } }() : s, c = n(47)(), u = Object.getPrototypeOf || function(e) { return e.__proto__ } , d = i ? u(i) : void 0, p = a ? u(a) : void 0, f = a ? a() : void 0, h = \"undefined\" == typeof Uint8Array ? void 0 : u(Uint8Array), v = { \"%Array%\": Array, \"%ArrayBuffer%\": \"undefined\" == typeof ArrayBuffer ? void 0 : ArrayBuffer, \"%ArrayBufferPrototype%\": \"undefined\" == typeof ArrayBuffer ? void 0 : ArrayBuffer.prototype, \"%ArrayIteratorPrototype%\": c ? u([][Symbol.iterator]()) : void 0, \"%ArrayPrototype%\": Array.prototype, \"%ArrayProto_entries%\": Array.prototype.entries, \"%ArrayProto_forEach%\": Array.prototype.forEach, \"%ArrayProto_keys%\": Array.prototype.keys, \"%ArrayProto_values%\": Array.prototype.values, \"%AsyncFromSyncIteratorPrototype%\": void 0, \"%AsyncFunction%\": void 0, \"%AsyncFunctionPrototype%\": void 0, \"%AsyncGenerator%\": a ? u(f) : void 0, \"%AsyncGeneratorFunction%\": p, \"%AsyncGeneratorPrototype%\": p ? p.prototype : void 0, \"%AsyncIteratorPrototype%\": f && c && Symbol.asyncIterator ? f[Symbol.asyncIterator]() : void 0, \"%Atomics%\": \"undefined\" == typeof Atomics ? void 0 : Atomics, \"%Boolean%\": Boolean, \"%BooleanPrototype%\": Boolean.prototype, \"%DataView%\": \"undefined\" == typeof DataView ? void 0 : DataView, \"%DataViewPrototype%\": \"undefined\" == typeof DataView ? void 0 : DataView.prototype, \"%Date%\": Date, \"%DatePrototype%\": Date.prototype, \"%decodeURI%\": decodeURI, \"%decodeURIComponent%\": decodeURIComponent, \"%encodeURI%\": encodeURI, \"%encodeURIComponent%\": encodeURIComponent, \"%Error%\": Error, \"%ErrorPrototype%\": Error.prototype, \"%eval%\": eval, \"%EvalError%\": EvalError, \"%EvalErrorPrototype%\": EvalError.prototype, \"%Float32Array%\": \"undefined\" == typeof Float32Array ? void 0 : Float32Array, \"%Float32ArrayPrototype%\": \"undefined\" == typeof Float32Array ? void 0 : Float32Array.prototype, \"%Float64Array%\": \"undefined\" == typeof Float64Array ? void 0 : Float64Array, \"%Float64ArrayPrototype%\": \"undefined\" == typeof Float64Array ? void 0 : Float64Array.prototype, \"%Function%\": Function, \"%FunctionPrototype%\": Function.prototype, \"%Generator%\": i ? u(i()) : void 0, \"%GeneratorFunction%\": d, \"%GeneratorPrototype%\": d ? d.prototype : void 0, \"%Int8Array%\": \"undefined\" == typeof Int8Array ? void 0 : Int8Array, \"%Int8ArrayPrototype%\": \"undefined\" == typeof Int8Array ? void 0 : Int8Array.prototype, \"%Int16Array%\": \"undefined\" == typeof Int16Array ? void 0 : Int16Array, \"%Int16ArrayPrototype%\": \"undefined\" == typeof Int16Array ? void 0 : Int8Array.prototype, \"%Int32Array%\": \"undefined\" == typeof Int32Array ? void 0 : Int32Array, \"%Int32ArrayPrototype%\": \"undefined\" == typeof Int32Array ? void 0 : Int32Array.prototype, \"%isFinite%\": isFinite, \"%isNaN%\": isNaN, \"%IteratorPrototype%\": c ? u(u([][Symbol.iterator]())) : void 0, \"%JSON%\": \"object\" == typeof JSON ? JSON : void 0, \"%JSONParse%\": \"object\" == typeof JSON ? JSON.parse : void 0, \"%Map%\": \"undefined\" == typeof Map ? void 0 : Map, \"%MapIteratorPrototype%\": \"undefined\" != typeof Map && c ? u((new Map)[Symbol.iterator]()) : void 0, \"%MapPrototype%\": \"undefined\" == typeof Map ? void 0 : Map.prototype, \"%Math%\": Math, \"%Number%\": Number, \"%NumberPrototype%\": Number.prototype, \"%Object%\": Object, \"%ObjectPrototype%\": Object.prototype, \"%ObjProto_toString%\": Object.prototype.toString, \"%ObjProto_valueOf%\": Object.prototype.valueOf, \"%parseFloat%\": parseFloat, \"%parseInt%\": parseInt, \"%Promise%\": \"undefined\" == typeof Promise ? void 0 : Promise, \"%PromisePrototype%\": \"undefined\" == typeof Promise ? void 0 : Promise.prototype, \"%PromiseProto_then%\": \"undefined\" == typeof Promise ? void 0 : Promise.prototype.then, \"%Promise_all%\": \"undefined\" == typeof Promise ? void 0 : Promise.all, \"%Promise_reject%\": \"undefined\" == typeof Promise ? void 0 : Promise.reject, \"%Promise_resolve%\": \"undefined\" == typeof Promise ? void 0 : Promise.resolve, \"%Proxy%\": \"undefined\" == typeof Proxy ? void 0 : Proxy, \"%RangeError%\": RangeError, \"%RangeErrorPrototype%\": RangeError.prototype, \"%ReferenceError%\": ReferenceError, \"%ReferenceErrorPrototype%\": ReferenceError.prototype, \"%Reflect%\": \"undefined\" == typeof Reflect ? void 0 : Reflect, \"%RegExp%\": RegExp, \"%RegExpPrototype%\": RegExp.prototype, \"%Set%\": \"undefined\" == typeof Set ? void 0 : Set, \"%SetIteratorPrototype%\": \"undefined\" != typeof Set && c ? u((new Set)[Symbol.iterator]()) : void 0, \"%SetPrototype%\": \"undefined\" == typeof Set ? void 0 : Set.prototype, \"%SharedArrayBuffer%\": \"undefined\" == typeof SharedArrayBuffer ? void 0 : SharedArrayBuffer, \"%SharedArrayBufferPrototype%\": \"undefined\" == typeof SharedArrayBuffer ? void 0 : SharedArrayBuffer.prototype, \"%String%\": String, \"%StringIteratorPrototype%\": c ? u(\"\"[Symbol.iterator]()) : void 0, \"%StringPrototype%\": String.prototype, \"%Symbol%\": c ? Symbol : void 0, \"%SymbolPrototype%\": c ? Symbol.prototype : void 0, \"%SyntaxError%\": SyntaxError, \"%SyntaxErrorPrototype%\": SyntaxError.prototype, \"%ThrowTypeError%\": l, \"%TypedArray%\": h, \"%TypedArrayPrototype%\": h ? h.prototype : void 0, \"%TypeError%\": r, \"%TypeErrorPrototype%\": r.prototype, \"%Uint8Array%\": \"undefined\" == typeof Uint8Array ? void 0 : Uint8Array, \"%Uint8ArrayPrototype%\": \"undefined\" == typeof Uint8Array ? void 0 : Uint8Array.prototype, \"%Uint8ClampedArray%\": \"undefined\" == typeof Uint8ClampedArray ? void 0 : Uint8ClampedArray, \"%Uint8ClampedArrayPrototype%\": \"undefined\" == typeof Uint8ClampedArray ? void 0 : Uint8ClampedArray.prototype, \"%Uint16Array%\": \"undefined\" == typeof Uint16Array ? void 0 : Uint16Array, \"%Uint16ArrayPrototype%\": \"undefined\" == typeof Uint16Array ? void 0 : Uint16Array.prototype, \"%Uint32Array%\": \"undefined\" == typeof Uint32Array ? void 0 : Uint32Array, \"%Uint32ArrayPrototype%\": \"undefined\" == typeof Uint32Array ? void 0 : Uint32Array.prototype, \"%URIError%\": URIError, \"%URIErrorPrototype%\": URIError.prototype, \"%WeakMap%\": \"undefined\" == typeof WeakMap ? void 0 : WeakMap, \"%WeakMapPrototype%\": \"undefined\" == typeof WeakMap ? void 0 : WeakMap.prototype, \"%WeakSet%\": \"undefined\" == typeof WeakSet ? void 0 : WeakSet, \"%WeakSetPrototype%\": \"undefined\" == typeof WeakSet ? void 0 : WeakSet.prototype }, g = n(4), m = g.call(Function.call, String.prototype.replace), y = /[^%.[\\]]+|\\[(?:(-?\\d+(?:\\.\\d+)?)|([\"'])((?:(?!\\2)[^\\\\]|\\\\.)*?)\\2)\\]|(?=(?:\\.|\\[\\])(?:\\.|\\[\\]|%$))/g, b = /\\\\(\\\\)?/g, w = function(e) { var t = []; return m(e, y, function(e, n, r, o) { t[t.length] = r ? m(o, b, \"$1\") : n || e }), t }, x = function(e, t) { if (!(e in v)) throw new SyntaxError(\"intrinsic \" + e + \" does not exist!\"); if (void 0 === v[e] && !t) throw new r(\"intrinsic \" + e + \" exists, but is not available. Please file an issue!\"); return v[e] }; e.exports = function(e, t) { if (\"string\" != typeof e || 0 === e.length) throw new TypeError(\"intrinsic name must be a non-empty string\"); if (arguments.length > 1 && \"boolean\" != typeof t) throw new TypeError('\"allowMissing\" argument must be a boolean'); for (var n = w(e), i = x(\"%\" + (n.length > 0 ? n[0] : \"\") + \"%\", t), a = 1; a < n.length; a += 1) if (null != i) if (o && a + 1 >= n.length) { var s = o(i, n[a]); if (!(t || n[a]in i)) throw new r(\"base intrinsic for \" + e + \" exists, but the property is not available.\"); i = s ? s.get || s.value : i[n[a]] } else i = i[n[a]]; return i } } , function(e, t, n) { \"use strict\"; t.__esModule = !0; t.DEFAULT_EMOJI_CDN = \"//img.t.sinajs.cn/t4/appstyle/expression/ext/normal/\", t.DB_NAME = \"Comment\", t.defaultConfig = { lang: \"zh-CN\", langMode: null, appId: \"\", appKey: \"\", clazzName: \"Comment\", meta: [\"nick\", \"mail\", \"link\"], path: location.pathname, placeholder: \"Just Go Go\", pageSize: 10, recordIP: !0, serverURLs: \"\", visitor: !1, emojiCDN: \"\", emojiMaps: void 0, enableQQ: !1, requiredFields: [] }, t.defaultMeta = [\"nick\", \"mail\", \"link\"], t.QQCacheKey = \"_v_Cache_Q\", t.MetaCacheKey = \"_v_Cache_Meta\", t.RandomStr = (Date.now() + Math.round(1e3 * Math.random())).toString(32), t.VERSION = \"1.4.14\" } , function(e, t, n) { function r(e, t) { return new i(t).process(e) } var o = n(7) , i = n(29); t = e.exports = r, t.FilterCSS = i; for (var a in o) t[a] = o[a]; \"undefined\" != typeof window && (window.filterCSS = e.exports) } , function(e, t, n) { \"use strict\"; var r = n(32); e.exports = Function.prototype.bind || r } , function(e, t) { e.exports = { indexOf: function(e, t) { var n, r; if (Array.prototype.indexOf) return e.indexOf(t); for (n = 0, r = e.length; n < r; n++) if (e[n] === t) return n; return -1 }, forEach: function(e, t, n) { var r, o; if (Array.prototype.forEach) return e.forEach(t, n); for (r = 0, o = e.length; r < o; r++) t.call(n, e[r], r, e) }, trim: function(e) { return String.prototype.trim ? e.trim() : e.replace(/(^\\s*)|(\\s*$)/g, \"\") }, spaceIndex: function(e) { var t = /\\s|\\n|\\t/ , n = t.exec(e); return n ? n.index : -1 } } } , function(e, t, n) { \"use strict\"; t.__esModule = !0; var r = n(2) , o = { cdn: r.DEFAULT_EMOJI_CDN, maps: n(53), parse: function(e) { return String(e).replace(new RegExp(\":(\" + Object.keys(o.maps).join(\"|\") + \"):\",\"ig\"), function(e, t) { return o.maps[t] ? o.build(t) : e }) }, build: function(e) { var t = /^(https?:)?\\/\\//i , n = o.maps[e] , r = t.test(n) ? n : o.cdn + n; return t.test(r) ? '' : \"\" } }; t.default = o } , function(e, t) { function n() { var e = {}; return e[\"align-content\"] = !1, e[\"align-items\"] = !1, e[\"align-self\"] = !1, e[\"alignment-adjust\"] = !1, e[\"alignment-baseline\"] = !1, e.all = !1, e[\"anchor-point\"] = !1, e.animation = !1, e[\"animation-delay\"] = !1, e[\"animation-direction\"] = !1, e[\"animation-duration\"] = !1, e[\"animation-fill-mode\"] = !1, e[\"animation-iteration-count\"] = !1, e[\"animation-name\"] = !1, e[\"animation-play-state\"] = !1, e[\"animation-timing-function\"] = !1, e.azimuth = !1, e[\"backface-visibility\"] = !1, e.background = !0, e[\"background-attachment\"] = !0, e[\"background-clip\"] = !0, e[\"background-color\"] = !0, e[\"background-image\"] = !0, e[\"background-origin\"] = !0, e[\"background-position\"] = !0, e[\"background-repeat\"] = !0, e[\"background-size\"] = !0, e[\"baseline-shift\"] = !1, e.binding = !1, e.bleed = !1, e[\"bookmark-label\"] = !1, e[\"bookmark-level\"] = !1, e[\"bookmark-state\"] = !1, e.border = !0, e[\"border-bottom\"] = !0, e[\"border-bottom-color\"] = !0, e[\"border-bottom-left-radius\"] = !0, e[\"border-bottom-right-radius\"] = !0, e[\"border-bottom-style\"] = !0, e[\"border-bottom-width\"] = !0, e[\"border-collapse\"] = !0, e[\"border-color\"] = !0, e[\"border-image\"] = !0, e[\"border-image-outset\"] = !0, e[\"border-image-repeat\"] = !0, e[\"border-image-slice\"] = !0, e[\"border-image-source\"] = !0, e[\"border-image-width\"] = !0, e[\"border-left\"] = !0, e[\"border-left-color\"] = !0, e[\"border-left-style\"] = !0, e[\"border-left-width\"] = !0, e[\"border-radius\"] = !0, e[\"border-right\"] = !0, e[\"border-right-color\"] = !0, e[\"border-right-style\"] = !0, e[\"border-right-width\"] = !0, e[\"border-spacing\"] = !0, e[\"border-style\"] = !0, e[\"border-top\"] = !0, e[\"border-top-color\"] = !0, e[\"border-top-left-radius\"] = !0, e[\"border-top-right-radius\"] = !0, e[\"border-top-style\"] = !0, e[\"border-top-width\"] = !0, e[\"border-width\"] = !0, e.bottom = !1, e[\"box-decoration-break\"] = !0, e[\"box-shadow\"] = !0, e[\"box-sizing\"] = !0, e[\"box-snap\"] = !0, e[\"box-suppress\"] = !0, e[\"break-after\"] = !0, e[\"break-before\"] = !0, e[\"break-inside\"] = !0, e[\"caption-side\"] = !1, e.chains = !1, e.clear = !0, e.clip = !1, e[\"clip-path\"] = !1, e[\"clip-rule\"] = !1, e.color = !0, e[\"color-interpolation-filters\"] = !0, e[\"column-count\"] = !1, e[\"column-fill\"] = !1, e[\"column-gap\"] = !1, e[\"column-rule\"] = !1, e[\"column-rule-color\"] = !1, e[\"column-rule-style\"] = !1, e[\"column-rule-width\"] = !1, e[\"column-span\"] = !1, e[\"column-width\"] = !1, e.columns = !1, e.contain = !1, e.content = !1, e[\"counter-increment\"] = !1, e[\"counter-reset\"] = !1, e[\"counter-set\"] = !1, e.crop = !1, e.cue = !1, e[\"cue-after\"] = !1, e[\"cue-before\"] = !1, e.cursor = !1, e.direction = !1, e.display = !0, e[\"display-inside\"] = !0, e[\"display-list\"] = !0, e[\"display-outside\"] = !0, e[\"dominant-baseline\"] = !1, e.elevation = !1, e[\"empty-cells\"] = !1, e.filter = !1, e.flex = !1, e[\"flex-basis\"] = !1, e[\"flex-direction\"] = !1, e[\"flex-flow\"] = !1, e[\"flex-grow\"] = !1, e[\"flex-shrink\"] = !1, e[\"flex-wrap\"] = !1, e.float = !1, e[\"float-offset\"] = !1, e[\"flood-color\"] = !1, e[\"flood-opacity\"] = !1, e[\"flow-from\"] = !1, e[\"flow-into\"] = !1, e.font = !0, e[\"font-family\"] = !0, e[\"font-feature-settings\"] = !0, e[\"font-kerning\"] = !0, e[\"font-language-override\"] = !0, e[\"font-size\"] = !0, e[\"font-size-adjust\"] = !0, e[\"font-stretch\"] = !0, e[\"font-style\"] = !0, e[\"font-synthesis\"] = !0, e[\"font-variant\"] = !0, e[\"font-variant-alternates\"] = !0, e[\"font-variant-caps\"] = !0, e[\"font-variant-east-asian\"] = !0, e[\"font-variant-ligatures\"] = !0, e[\"font-variant-numeric\"] = !0, e[\"font-variant-position\"] = !0, e[\"font-weight\"] = !0, e.grid = !1, e[\"grid-area\"] = !1, e[\"grid-auto-columns\"] = !1, e[\"grid-auto-flow\"] = !1, e[\"grid-auto-rows\"] = !1, e[\"grid-column\"] = !1, e[\"grid-column-end\"] = !1, e[\"grid-column-start\"] = !1, e[\"grid-row\"] = !1, e[\"grid-row-end\"] = !1, e[\"grid-row-start\"] = !1, e[\"grid-template\"] = !1, e[\"grid-template-areas\"] = !1, e[\"grid-template-columns\"] = !1, e[\"grid-template-rows\"] = !1, e[\"hanging-punctuation\"] = !1, e.height = !0, e.hyphens = !1, e.icon = !1, e[\"image-orientation\"] = !1, e[\"image-resolution\"] = !1, e[\"ime-mode\"] = !1, e[\"initial-letters\"] = !1, e[\"inline-box-align\"] = !1, e[\"justify-content\"] = !1, e[\"justify-items\"] = !1, e[\"justify-self\"] = !1, e.left = !1, e[\"letter-spacing\"] = !0, e[\"lighting-color\"] = !0, e[\"line-box-contain\"] = !1, e[\"line-break\"] = !1, e[\"line-grid\"] = !1, e[\"line-height\"] = !1, e[\"line-snap\"] = !1, e[\"line-stacking\"] = !1, e[\"line-stacking-ruby\"] = !1, e[\"line-stacking-shift\"] = !1, e[\"line-stacking-strategy\"] = !1, e[\"list-style\"] = !0, e[\"list-style-image\"] = !0, e[\"list-style-position\"] = !0, e[\"list-style-type\"] = !0, e.margin = !0, e[\"margin-bottom\"] = !0, e[\"margin-left\"] = !0, e[\"margin-right\"] = !0, e[\"margin-top\"] = !0, e[\"marker-offset\"] = !1, e[\"marker-side\"] = !1, e.marks = !1, e.mask = !1, e[\"mask-box\"] = !1, e[\"mask-box-outset\"] = !1, e[\"mask-box-repeat\"] = !1, e[\"mask-box-slice\"] = !1, e[\"mask-box-source\"] = !1, e[\"mask-box-width\"] = !1, e[\"mask-clip\"] = !1, e[\"mask-image\"] = !1, e[\"mask-origin\"] = !1, e[\"mask-position\"] = !1, e[\"mask-repeat\"] = !1, e[\"mask-size\"] = !1, e[\"mask-source-type\"] = !1, e[\"mask-type\"] = !1, e[\"max-height\"] = !0, e[\"max-lines\"] = !1, e[\"max-width\"] = !0, e[\"min-height\"] = !0, e[\"min-width\"] = !0, e[\"move-to\"] = !1, e[\"nav-down\"] = !1, e[\"nav-index\"] = !1, e[\"nav-left\"] = !1, e[\"nav-right\"] = !1, e[\"nav-up\"] = !1, e[\"object-fit\"] = !1, e[\"object-position\"] = !1, e.opacity = !1, e.order = !1, e.orphans = !1, e.outline = !1, e[\"outline-color\"] = !1, e[\"outline-offset\"] = !1, e[\"outline-style\"] = !1, e[\"outline-width\"] = !1, e.overflow = !1, e[\"overflow-wrap\"] = !1, e[\"overflow-x\"] = !1, e[\"overflow-y\"] = !1, e.padding = !0, e[\"padding-bottom\"] = !0, e[\"padding-left\"] = !0, e[\"padding-right\"] = !0, e[\"padding-top\"] = !0, e.page = !1, e[\"page-break-after\"] = !1, e[\"page-break-before\"] = !1, e[\"page-break-inside\"] = !1, e[\"page-policy\"] = !1, e.pause = !1, e[\"pause-after\"] = !1, e[\"pause-before\"] = !1, e.perspective = !1, e[\"perspective-origin\"] = !1, e.pitch = !1, e[\"pitch-range\"] = !1, e[\"play-during\"] = !1, e.position = !1, e[\"presentation-level\"] = !1, e.quotes = !1, e[\"region-fragment\"] = !1, e.resize = !1, e.rest = !1, e[\"rest-after\"] = !1, e[\"rest-before\"] = !1, e.richness = !1, e.right = !1, e.rotation = !1, e[\"rotation-point\"] = !1, e[\"ruby-align\"] = !1, e[\"ruby-merge\"] = !1, e[\"ruby-position\"] = !1, e[\"shape-image-threshold\"] = !1, e[\"shape-outside\"] = !1, e[\"shape-margin\"] = !1, e.size = !1, e.speak = !1, e[\"speak-as\"] = !1, e[\"speak-header\"] = !1, e[\"speak-numeral\"] = !1, e[\"speak-punctuation\"] = !1, e[\"speech-rate\"] = !1, e.stress = !1, e[\"string-set\"] = !1, e[\"tab-size\"] = !1, e[\"table-layout\"] = !1, e[\"text-align\"] = !0, e[\"text-align-last\"] = !0, e[\"text-combine-upright\"] = !0, e[\"text-decoration\"] = !0, e[\"text-decoration-color\"] = !0, e[\"text-decoration-line\"] = !0, e[\"text-decoration-skip\"] = !0, e[\"text-decoration-style\"] = !0, e[\"text-emphasis\"] = !0, e[\"text-emphasis-color\"] = !0, e[\"text-emphasis-position\"] = !0, e[\"text-emphasis-style\"] = !0, e[\"text-height\"] = !0, e[\"text-indent\"] = !0, e[\"text-justify\"] = !0, e[\"text-orientation\"] = !0, e[\"text-overflow\"] = !0, e[\"text-shadow\"] = !0, e[\"text-space-collapse\"] = !0, e[\"text-transform\"] = !0, e[\"text-underline-position\"] = !0, e[\"text-wrap\"] = !0, e.top = !1, e.transform = !1, e[\"transform-origin\"] = !1, e[\"transform-style\"] = !1, e.transition = !1, e[\"transition-delay\"] = !1, e[\"transition-duration\"] = !1, e[\"transition-property\"] = !1, e[\"transition-timing-function\"] = !1, e[\"unicode-bidi\"] = !1, e[\"vertical-align\"] = !1, e.visibility = !1, e[\"voice-balance\"] = !1, e[\"voice-duration\"] = !1, e[\"voice-family\"] = !1, e[\"voice-pitch\"] = !1, e[\"voice-range\"] = !1, e[\"voice-rate\"] = !1, e[\"voice-stress\"] = !1, e[\"voice-volume\"] = !1, e.volume = !1, e[\"white-space\"] = !1, e.widows = !1, e.width = !0, e[\"will-change\"] = !1, e[\"word-break\"] = !0, e[\"word-spacing\"] = !0, e[\"word-wrap\"] = !0, e[\"wrap-flow\"] = !1, e[\"wrap-through\"] = !1, e[\"writing-mode\"] = !1, e[\"z-index\"] = !1, e } function r(e, t, n) {} function o(e, t, n) {} function i(e, t) { return a.test(t) ? \"\" : t } var a = /javascript\\s*\\:/gim; t.whiteList = n(), t.getDefaultWhiteList = n, t.onAttr = r, t.onIgnoreAttr = o, t.safeAttrValue = i } , function(e, t) { e.exports = { indexOf: function(e, t) { var n, r; if (Array.prototype.indexOf) return e.indexOf(t); for (n = 0, r = e.length; n < r; n++) if (e[n] === t) return n; return -1 }, forEach: function(e, t, n) { var r, o; if (Array.prototype.forEach) return e.forEach(t, n); for (r = 0, o = e.length; r < o; r++) t.call(n, e[r], r, e) }, trim: function(e) { return String.prototype.trim ? e.trim() : e.replace(/(^\\s*)|(\\s*$)/g, \"\") }, trimRight: function(e) { return String.prototype.trimRight ? e.trimRight() : e.replace(/(\\s*$)/g, \"\") } } } , function(e, t, n) { \"use strict\"; var r = n(40) , o = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol(\"foo\") , i = Object.prototype.toString , a = Array.prototype.concat , s = Object.defineProperty , l = function(e) { return \"function\" == typeof e && \"[object Function]\" === i.call(e) } , c = s && function() { var e = {}; try { s(e, \"x\", { enumerable: !1, value: e }); for (var t in e) return !1; return e.x === e } catch (e) { return !1 } }() , u = function(e, t, n, r) { (!(t in e) || l(r) && r()) && (c ? s(e, t, { configurable: !0, enumerable: !1, value: n, writable: !0 }) : e[t] = n) } , d = function(e, t) { var n = arguments.length > 2 ? arguments[2] : {} , i = r(t); o && (i = a.call(i, Object.getOwnPropertySymbols(t))); for (var s = 0; s < i.length; s += 1) u(e, i[s], t[i[s]], n[i[s]]) }; d.supportsDescriptors = !!c, e.exports = d } , function(e, t, n) { \"use strict\"; var r = Object.prototype.toString; e.exports = function(e) { var t = r.call(e) , n = \"[object Arguments]\" === t; return n || (n = \"[object Array]\" !== t && null !== e && \"object\" == typeof e && \"number\" == typeof e.length && e.length >= 0 && \"[object Function]\" === r.call(e.callee)), n } } , function(e, t, n) { \"use strict\"; var r = n(45) , o = n(44) , i = n(46) , a = i(\"String.prototype.replace\") , s = /^[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+/ , l = /[\\x09\\x0A\\x0B\\x0C\\x0D\\x20\\xA0\\u1680\\u180E\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF]+$/; e.exports = function() { var e = o(r(this)); return a(a(e, s, \"\"), l, \"\") } } , function(e, t, n) { \"use strict\"; var r = n(4) , o = n(1) , i = o(\"%Function%\") , a = i.apply , s = i.call; e.exports = function() { return r.apply(s, arguments) } , e.exports.apply = function() { return r.apply(a, arguments) } } , function(e, t, n) { \"use strict\"; var r = n(11) , o = \"​\"; e.exports = function() { return String.prototype.trim && o.trim() === o ? String.prototype.trim : r } } , function(e, t) { var n; n = function() { return this }(); try { n = n || Function(\"return this\")() || (0, eval)(\"this\") } catch (e) { \"object\" == typeof window && (n = window) } e.exports = n } , function(e, t, n) { function r() { return { a: [\"target\", \"href\", \"title\"], abbr: [\"title\"], address: [], area: [\"shape\", \"coords\", \"href\", \"alt\"], article: [], aside: [], audio: [\"autoplay\", \"controls\", \"loop\", \"preload\", \"src\"], b: [], bdi: [\"dir\"], bdo: [\"dir\"], big: [], blockquote: [\"cite\"], br: [], caption: [], center: [], cite: [], code: [], col: [\"align\", \"valign\", \"span\", \"width\"], colgroup: [\"align\", \"valign\", \"span\", \"width\"], dd: [], del: [\"datetime\"], details: [\"open\"], div: [], dl: [], dt: [], em: [], font: [\"color\", \"size\", \"face\"], footer: [], h1: [], h2: [], h3: [], h4: [], h5: [], h6: [], header: [], hr: [], i: [], img: [\"src\", \"alt\", \"title\", \"width\", \"height\"], ins: [\"datetime\"], li: [], mark: [], nav: [], ol: [], p: [], pre: [], s: [], section: [], small: [], span: [], sub: [], sup: [], strong: [], table: [\"width\", \"border\", \"align\", \"valign\"], tbody: [\"align\", \"valign\"], td: [\"width\", \"rowspan\", \"colspan\", \"align\", \"valign\"], tfoot: [\"align\", \"valign\"], th: [\"width\", \"rowspan\", \"colspan\", \"align\", \"valign\"], thead: [\"align\", \"valign\"], tr: [\"rowspan\", \"align\", \"valign\"], tt: [], u: [], ul: [], video: [\"autoplay\", \"controls\", \"loop\", \"preload\", \"src\", \"height\", \"width\"] } } function o(e, t, n) {} function i(e, t, n) {} function a(e, t, n) {} function s(e, t, n) {} function l(e) { return e.replace(S, \"&lt;\").replace(O, \"&gt;\") } function c(e, t, n, r) { if (n = v(n), \"href\" === t || \"src\" === t) { if (\"#\" === (n = _.trim(n))) return \"#\"; if (\"http://\" !== n.substr(0, 7) && \"https://\" !== n.substr(0, 8) && \"mailto:\" !== n.substr(0, 7) && \"tel:\" !== n.substr(0, 4) && \"#\" !== n[0] && \"/\" !== n[0]) return \"\" } else if (\"background\" === t) { if (I.lastIndex = 0, I.test(n)) return \"\" } else if (\"style\" === t) { if (P.lastIndex = 0, P.test(n)) return \"\"; if (M.lastIndex = 0, M.test(n) && (I.lastIndex = 0, I.test(n))) return \"\"; !1 !== r && (r = r || A, n = r.process(n)) } return n = g(n) } function u(e) { return e.replace($, \"&quot;\") } function d(e) { return e.replace(E, '\"') } function p(e) { return e.replace(j, function(e, t) { return \"x\" === t[0] || \"X\" === t[0] ? String.fromCharCode(parseInt(t.substr(1), 16)) : String.fromCharCode(parseInt(t, 10)) }) } function f(e) { return e.replace(T, \":\").replace(C, \" \") } function h(e) { for (var t = \"\", n = 0, r = e.length; n < r; n++) t += e.charCodeAt(n) < 32 ? \" \" : e.charAt(n); return _.trim(t) } function v(e) { return e = d(e), e = p(e), e = f(e), e = h(e) } function g(e) { return e = u(e), e = l(e) } function m() { return \"\" } function y(e, t) { function n(t) { return !!r || -1 !== _.indexOf(e, t) } \"function\" != typeof t && (t = function() {} ); var r = !Array.isArray(e) , o = [] , i = !1; return { onIgnoreTag: function(e, r, a) { if (n(e)) { if (a.isClosing) { var s = \"[/removed]\" , l = a.position + s.length; return o.push([!1 !== i ? i : a.position, l]), i = !1, s } return i || (i = a.position), \"[removed]\" } return t(e, r, a) }, remove: function(e) { var t = \"\" , n = 0; return _.forEach(o, function(r) { t += e.slice(n, r[0]), n = r[1] }), t += e.slice(n) } } } function b(e) { return e.replace(R, \"\") } function w(e) { var t = e.split(\"\"); return t = t.filter(function(e) { var t = e.charCodeAt(0); return 127 !== t && (!(t"}],"posts":[{"title":"c++工程师面试常见问题","slug":"c++工程师面试常见问题","date":"2020-07-23T09:16:50.294Z","updated":"2020-07-23T09:16:50.294Z","comments":true,"path":"2020/07/23/c++工程师面试常见问题/","link":"","permalink":"https://tetedetian2.github.io/2020/07/23/c++%E5%B7%A5%E7%A8%8B%E5%B8%88%E9%9D%A2%E8%AF%95%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98/","excerpt":"","text":"","categories":[],"tags":[{"name":"c++","slug":"c","permalink":"https://tetedetian2.github.io/tags/c/"},{"name":"面试","slug":"面试","permalink":"https://tetedetian2.github.io/tags/%E9%9D%A2%E8%AF%95/"}]},{"title":"计算机网络基础知识点","slug":"计算机网络基础知识点","date":"2020-07-19T18:42:06.371Z","updated":"2020-07-23T10:28:07.785Z","comments":true,"path":"2020/07/20/计算机网络基础知识点/","link":"","permalink":"https://tetedetian2.github.io/2020/07/20/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/","excerpt":"————这里，有一些计算机网络的基础知识，希望对你有帮助^_^———— ————（针对c++后台开发）————","text":"————这里，有一些计算机网络的基础知识，希望对你有帮助^_^———— ————（针对c++后台开发）———— 前言第一章——计算机网络概述1.计算机网络性能 1. 速率：速率即数据率或比特率是计算机网络中最重要的一个性能指标。速率的单位是 b/s，或kb/s, Mb/s, Gb/s 等 2. 带宽：数字信道所能传送的“最高数据率”的同义语，单位是“比特每秒”，或 b/s (bit/s)。 3. 吞吐量：表示在单位时间内通过某个网络（或信道、接口）的数据量。受网络的带宽或网络的额定速率的限制。 4. 时延：发送数据时，数据块从结点进入到传输媒体所需要的时间。 5. 时延带宽积：时延带宽积 = 传播时延 *带宽 6. 利用率：信道利用率指出某信道有百分之几的时间是被利用的（有数据通过）。完全空闲的信道的利用率是零。网络利用率则是全网络的信道利用率的加权平均值。 2.计算机网络体系结构 3.OSI的7层大约作用3.1 分层的好处： 各层之间是独立的、灵活性好、结构上可分割开、易于实现和维护、能促进标准化工作。 3.2 OSI七层模型及其包含的协议如下: 物理层: 通过媒介传输比特,确定机械及电气规范,传输单位为bit，主要包括的协议为：IEE802.3 CLOCK RJ45 数据链路层: 将比特组装成帧和点到点的传递,传输单位为帧,主要包括的协议为MAC VLAN PPP 网络层：负责数据包从源到宿的传递和网际互连，传输单位为包,主要包括的协议为IP ARP ICMP 传输层：提供端到端的可靠报文传递和错误恢复，传输单位为报文,主要包括的协议为TCP UDP 会话层：建立、管理和终止会话，传输单位为SPDU，主要包括的协议为RPC NFS 表示层: 对数据进行翻译、加密和压缩,传输单位为PPDU，主要包括的协议为JPEG ASII 应用层: 允许访问OSI环境的手段,传输单位为APDU，主要包括的协议为FTP HTTP DNS 3.3TCP/IP 4层模型包括： 网络接口层：MAC VLAN 网络层:IP ARP ICMP 传输层:TCP UDP 应用层:HTTP DNS SMTP 第二章——物理层1.基本概念物理层的主要任务描述为确定与传输媒体的接口的一些特性，即： 机械特性 指明接口所用接线器的形状和尺寸、引线数目和排列、固定和锁定装置等等。 电气特性 指明在接口电缆的各条线上出现的电压的范围。 功能特性 指明某条线上出现的某一电平的电压表示何种意义。 过程特性 指明对于不同功能的各种可能事件的出现顺序 第三章——数据链路层1.数据链路层基本概念与三个基本问题1.1基本概念 除了物理线路外，还必须有通信协议来控制这些数据的传输。若把实现这些协议的硬件和软件加到链路上，就构成了数据链路。数据链路层传送的是帧 1.2三个基本问题 (1) 封装成帧：封装成帧(framing)就是在一段数据的前后分别添加首部和尾部，然后就构成了一个帧。确定帧的界限。 (2) 透明传输：发送端的数据链路层在数据中出现控制字符“SOH”或“EOT”的前面插入一个转义字符“ESC”(其十六进制编码是 1B) (3) 差错控制 ：在数据链路层传送的帧中，广泛使用了循环冗余检验 CRC 的检错技术。 仅用循环冗余检验 CRC 差错检测技术只能做到无差错接受。“无差错接受”是指：“凡是接受的帧（即不包括丢弃的帧），我们都能以非常接近于 1 的概率认为这些帧在传输过程中没有产生差错”。也就是说：“凡是接收端数据链路层接受的帧都没有传输差错”（有差错的帧就丢弃而不接受）。要做到“可靠传输”（即发送什么就收到什么）就必须再加上确认和重传机制。 2.两种情况下的数据链路层2.1使用点对点信道的数据链路层（用PPP） PPP 协议应满足的需求 1.简单——这是首要的要求。2.封装成帧 。3.透明性 。4.多种网络层协议。 5.多种类型链路。 6.差错检测。 7.检测连接状态。 8.最大传送单元 。9.网络层地址协商 。10.数据压缩协商 。 ppp协议组成部分 (1)一个将 IP 数据报封装到串行链路的方法。(接近物理层) (2)链路控制协议 LCP (Link Control Protocol)。 (3)网络控制协议 NCP (Network Control Protocol)。（接近网络层） ppp协议的帧格式 首部与尾部的F字段是帧定界符 2.2使用广播信道的数据链路层（用CSMA/CD） CSMA/CD协议 要点： 1.多点接入：表示许多计算机以多点接入的方式连接在一根总线上。 2.载波监听：是指每一个站在发送数据之前先要检测一下总线上是否有其他计算机在发送数据，如果有，则暂时不要发送数据，以免发生碰撞。 总线上并没有什么“载波”。因此， “载波监听”就是用电子技术检测总线上有没有其他计算机发送的数据信号。 3.碰撞检测：就是计算机边发送数据边检测信道上的信号电压大小。 重要特性： 1.使用 CSMA/CD 协议的以太网不能进行全双工通信而只能进行双向交替通信（半双工通信）。 2.每个站在发送数据之后的一小段时间内，存在着遭遇碰撞的可能性。 3.这种发送的不确定性使整个以太网的平均通信量远小于以太网的最高数据率。 3.虚拟局域网 （VLAN） （1）一个交换机可以通过划分VLAN，形成虚拟局域网。同一VLAN中的计算机处于同一虚拟局域网里。VLAN1中的广播不会传到VLAN2。相当于把交换机划分成两个交换机。 （2）不同的VLAN之间的帧会有特殊标记，所以不会互相广播 第四章——网络层1.网络层提供的两种服务 （1）虚电路服务：A计算机发给B计算机的所有数据，都沿着同一条虚电路传送。 （2）数据报服务：计算机发给B计算机的数据，可能沿着不同路径传送。（现在在用的服务） 2.虚拟互联网 使用虚拟互连网络的好处是：当互联网上的主机进行通信时，就好像在一个网络上通信一样，而看不见互连的各具体的网络异构细节。 3.ip3.1 ip协议及配套使用协议网际协议 IP 是 TCP/IP 体系中两个最主要的协议之一。与 IP 协议配套使用的还有三个协议： 地址解析协议 ARP (Address Resolution Protocol) 网际控制报文协议 ICMP (Internet Control Message Protocol) 网际组管理协议 IGMP (Internet Group Management Protocol) 3.2 ip地址分类 ip地址分为A、B、C三类地址。A类的前1位固定为0，B类的前2位固定为10，C类的前3位固定为110。用于识别是哪类地址。图示如下 因为前面1~3位已经固定，因此A、B、C三类地址的前8位范围是： A类：0000000001111111，转为十进制就是0126（127划分到了本地环回地址） B类：1000000010111111，转为十进制就是128191 C类：1100000011011111，转为十进制就是192223 分类的目的：满足不同用户的需求，有些可能网络号需求多，有些电脑连接多。 3.3子网掩码 网络号字段全置1，主机号字段全置0 （1）默认：A类：255.0.0.0 ，B类：255.255.0.0 ，C类：255.255.255.0 （2）子网划分： 当C类地址还需要进行子网划分时，子网掩码就不一定是255.255.255.0了。 比如有200台计算机使用C类网络，但是需要每100台使用一个子网，比如192.168.0.00000000192.168.0.011111111为一子网，192.168.0.10000000192.168.0.111111111为另一子网。即C类网络主机号的第一位划分到网络号了，此时子网掩码是255.255.255.10000000，即255.255.255.128。据此，不同划分情况时，子网掩码后面8位数值可能是128、192、224、240、248、252 注意：划分的子网主机号部分字段不可以全为1或者全为0。全为1或者全为0有特殊用处。 （3）网段合并： 简单来说，就是通过改变子网的数值，重新划分网络号和主机号（网络位置1，主机位置0） 例子1：将 192.168.0.0，netmask:255.255.255.0 和 192.168.1.0,netmask:255.255.255.0 合并。 192.168.0.0—&gt;11000000.10101000.00000000.00000000 255.255.255.0 —&gt;11111111.11111111.11111111.00000000 192.168.1.0—&gt;11000000.10101000.00000001.00000000 255.255.255.0 —&gt;11111111.11111111.11111111.00000000 要合并网段，就要使得两个ip地址的网络号相同，因此子网掩码就要改变（因为子网掩码就是用来标识网络号和主机号的） 可以看到连个的ip地址不同在于： 因此网络号要避开这两位，因此子网掩码应该变为11111111.11111111.11111110.00000000—&gt;255.255.254.0 4.ip和MAC ip地址决定了数据包的起点和终点，MAC地址决定了数据帧的下一跳是哪里。 5.路由选择协议（1）内部网关协议（在区域内） RIP协议：动态路由协议，根据路由器数量选择路径。每30秒更新一次路由表 OSPF协议：动态路由协议，根据带宽选择路径。 （2）外部网关协议 BGP协议：BGP 是不同自治系统的路由器之间交换路由信息的协议。 （3）三个协议之间的关系： 三个协议统称ip协议，RIP和OSPF协议是自治系统（AS）内部路由的选择协议，不同自治系统（AS）之间的通信是用BGP协议。 如下图所示 第五章——传输层1.用户数据报协议 UDP (User Datagram Protocol)1.1特点： （1）一个数据包就能完成数据通信，是不可靠传输。 （2）发送数据之前不需要建立连接(会话)。 （3）尽最大努力交付，即不保证可靠交付，同时也不使用拥塞控制。 （4）面向报文的。UDP 没有拥塞控制，很适合多媒体通信的要求。 （5）支持一对一、一对多、多对一和多对多的交互通信。 （6）首部开销小，只有 8 个字节。 比如QQ聊天，多播就是用到UDP，这些过程的数据都比较小，一个数据包就可以传输。通过观察也可以判定，比如我们聊天的时候就是一个个信息打包发过去，遇上网络问题就会显示发送失败，这也算是不可靠传输的一种机制，可以通过提醒发送方重新发送。 1.2报文格式 （1）数据在经过运输层，IP层的大约处理流程： （2）UDP 的首部格式 端口：为了使运行不同操作系统的计算机的应用进程能够互相通信，就必须用统一的方法对 TCP/IP 体系的应用进程进行标志。因此有了端口。简而言之，端口就好像不同系统用来定位自己进程的同一标识。 伪首部：在计算检验和时，临时把“伪首部”和 UDP 用户数据报连接在一起。伪首部仅仅是为了计算检验和。 2.传输控制协议 TCP (Transmission Control Protocol)2.1 特点： （1）对数据进行分段、编号，建立会话，是可靠传输。 （2）每一条 TCP 连接只能有两个端点(endpoint)，每一条 TCP 连接只能是点对点的（一对一）。 （3）提供全双工通信(同时收发)。 （4）面向字节流（传输的时候并不管数据的完整性，而是直接把数据分成小的字节段打包发过去）。 比如QQ传文件，访问网址，下载文件。因为这些传输的数据都很大，难以通过一个数据包传输过去（比如带宽限制），因此就要通过对数据进行分段，编号，建立会话进行传输。 2.2 TCP 报文段的首部格式 上面特点有说，TCP是将数据分段传输，要使得分段的数据能够在网络上传到指定位置，以及接受数据的计算机能够将数据拼接起来，就要给数据添加一些标识信息。下图是TCP 报文段的首部格式 。 说明： （1）**首部**一般是20个字节，有些特殊数据会更长。 （2）可以看到，源端口和目的端口占16位，也就是2个字节。序号占32位，就是4个字节，其他以此类推。 （3）序号 ：就是被分割成段的数据每一段的序号，数据段的第一个字节是整个文件的第几个字节，它的序号就是多少。 （4）确认号：一般就是数据段的最后一个字节是整个文件的第几个字节+1，作用是告诉发送者下一次发第几个字节。然后发送者就会根据这个确认号去找序号是这个确认号的数据段。 （5）数据偏移： 用来告诉接收端首部有多长，数据部分从第几个字节开始。 （6）保留字段：占 6 位，保留为今后使用，但目前应置为 0。 （7）紧急 URG ：当 URG = 1 时，表明紧急指针字段有效。它告诉系统此报文段中有紧急数据，应尽快传送(相当于高优先级的数据)。 （8）确认 ACK ： 只有当 ACK = 1 时确认号字段才有效。当 ACK = 0 时，确认号无效。 （9）推送 PSH (PuSH) ： 接收 TCP 收到 PSH = 1 的报文段，就尽快地交付接收应用进程，而不再等到整个缓存都填满了后再向上交付。 （10）复位 RST (ReSeT) ：当 RST = 1 时，表明 TCP 连接中出现严重差错（如由于主机崩溃或其他原因），必须释放连接，然后再重新建立运输连接。 （11）同步 SYN ：同步 SYN = 1 表示这是一个连接请求或连接接受报文。 （12）终止 FIN (FINis) ：用来释放一个连接。FIN = 1 表明此报文段的发送端的数据已发送完毕，并要求释放运输连接。 （13）检验和 ：占 2 字节。检验和字段检验的范围包括首部和数据这两部分。在计算检验和时，要在 TCP 报文段的前面加上 12 字节的伪首部。 （14）紧急指针字段 ：占 16 位，指出在本报文段中紧急数据共有多少个字节（紧急数据放在本报文段数据的最前面）。 （15）选项字段 ：长度不定。TCP 最初只规定了一种选项，即最大报文段长度 MSS。MSS 告诉对方 TCP：“我的缓存所能接收的报文段的数据字段的最大长度是 MSS 个字节。” 还有一些其他选项。 2.3 如何实现可靠传输 原理简述：接受方需要对接受的数据包回发确认信息，确保可靠交付 下图是最初原理示意图： 通过上面的方法传输的缺点：每次都要等待B的确认信息才能发下一个数据报，信道利用率低、浪费时间。因此常用的是下图的流水线传输方法以及利用滑动窗口。 滑动窗口原理：发送窗口内的数据分段可以连续发送，每接受到B的一个确认信息，就往前移动。比如A收到B确认5收到的报文段，则窗口移动到5后面。万一B只收到1245呢？ B会在回发的数据报文段的“选项”添加选择确认 SACK，可以告知发送端不连续字节块的边界信息。（选项最长40字节，因此可以存放8个边界信息，也就4个字节块边界信息） 2.4 拥塞控制 （1）什么是拥塞： 简单来说就是网络堵车了，假如就50M带宽，但是在网络上的每秒数据量都100M了，就会产生丢包，甚至路由器死机之类的。可以看下图，是控制前后的对比。可以看到在无拥塞控制得情况下，在给50M负载的时候，吞吐量并没有50M。就好像我们的手机，运行内存写6G，实际上用了5G以上就感觉卡了。 （2）大约怎么进行拥塞控制：根据前面学的TCP数据传输原理，容易知道，可以通过控制发送方的发送窗口大小从而控制单位时间内发送出去的数据量，进行拥塞控制。简单来说，就是通过控制所有计算机的数据发送速率，减小网络负担。 （3）具体方法： 1）慢开始算法：给每个发送方设定一个叫做拥塞窗口（cwnd）的变量，用于控制发送窗口大小。cwnd有一个门限：ssthresh（用来限制cwnd最大值）。一开始cwnd设置为1，ssthresh设置为16（1和16指报文段数目，）。使用慢开始算法后，每经过一个传输轮次（例如，拥塞窗口 cwnd = 4，这时的往返时间 RTT 就是发送方连续发送 4 个报文段，并收到这 4 个报文段的确认，总共经历的时间。 ），拥塞窗口 cwnd 就加倍。 当 cwnd = ssthresh 后，开始使用拥塞避免算法。 2）拥塞避免算法： 当 cwnd = ssthresh 后，让拥塞窗口 cwnd 缓慢地增大，每经过一个传输轮次就把 cwnd 加 1，而不是加倍，使cwnd 按线性规律缓慢增长。 3）当网络拥塞后：无论在慢开始阶段还是在拥塞避免阶段，只要发送方判断网络出现拥塞（其根据就是没有按时收到确认），就要把慢开始门限 ssthresh 设置为出现拥塞时的发送方窗口值的一半（但不能小于2）。然后把cwnd 重新设置为 1，执行慢开始算法。 示意图 4）快重传： 接收方每收到一个失序的报文段后就立即重复发出3的确认。发送方只要一连收到三个重复确认就应当立即重传对方尚未收到的报文段。这样做可以让发送方及早知道有报文段没有到达接收方。比如A传12345，但是B只收到1245，收到4的时候B就开始回发3的重传确认。 5）快恢复： 当发送端收到连续三个重复的确认时，把慢开始门限 ssthresh 减半。但接下去不执行慢开始算法。由于能够连着接受3个确认，发送方会认为网络很可能没有发生拥塞，因此不执行慢开始算法，即拥塞窗口 cwnd 现在不设置为 1，而是设置为慢开始门限 ssthresh 减半后的数值，然后开始执行拥塞避免算法，使拥塞窗口缓慢地线性增大。 如下图 2.5 TCP 的连接建立:三次握手 过程 1）A向B发送请求报文，报文的SYN=1，代表这是一个连接请求或连接接受报文。seq是序号这个报文的序号。 2）B收到后回发一个SYN=1，ACK=1，seq=y，ack=x+1的报文。其中ACK=1代表ack有效。seq是B发出的报文的序号，ack=x+1是B发出的确认号，也就是告诉A下次发序号是x+1的报文。 3）A收到B的确认报文后，向B发一个ACK=1，seq=x+1，ack=y+1的报文。seq=x+1是因为B给A发了ack=x+1的报文，A发出去的报文序号seq就要是x+1。 （x,y都是随机的，数值不是重点，重点是每次两台计算机的互相响应） 为什么要有第三次握手？ 两次握手不是已经可以证明能够通信了吗，第三次握手岂不是多此一举？ 原因： 第三次握手是用来再次确认。加入没有第三次：假设A发了请求，但是请求的报文走了远路，报文还没到B。A觉得太久了，给B发了第二次请求，第二次请求走了近路，比第一次还快到达，然后AB进行了通信。但是一会后，第一次请求也到B了，B接受到请求，又给A发了确认，接着等待A的通信。但是因为A已经在接受过B的确认了，就会不理A的确认。这会B岂不是在干等了？会浪费资源 下图展示了三次握手的过程以及计算机状态 当两台计算机都是ESTAB—LISHED状态了，就进行数据传送 2.6 TCP 的连接释放 :四次挥手 过程见下图：一共发送了四个报文 1)FIN = 1, seq = u：FIN代表要释放链接，告诉B要停止发送数据了。 2）ACK = 1, seq = v, ack= u + 1：B回应A,允许它断开链接。 3）FIN = 1, ACK = 1, seq = w, ack= u + 1：FIN代表要释放链接，告诉B要停止发送数据了。 4）ACK = 1, seq = u + 1, ack = w + 1：同理，A回应B。 为什么A最后需要等待一段时间（2MSL）？： 因为如果A发给B的确认，B没收到，B就会重新发送释放链接的报文（也就是第三个）。所以此时要是没有TIME-WAIT状态等待，而是直接关了，A就无法接到B的请求，也就不会回应，这样B的连接就释放不了了。 第六章——应用层1.统一资源定位符 URL 怎样标志分布在整个因特网上的万维网文档？ 答案：使用统一资源定位符 URL (Uniform Resource Locator)来标志万维网上的各种文档。使每一个文档在整个因特网的范围内具有唯一的标识符 URL。 URL 的一般形式 ：&lt;协议&gt;://&lt;主机&gt;:&lt;端口&gt;/&lt;路径&gt; 协议：ftp —— 文件传送协议 FTP、http —— 超文本传送协议 HTTP、News —— USENET 新闻 主机： 是存放资源的主机在因特网中的域名 端口和路径：经常省略 2.超文本传送协议 HTTP为了使超文本的链接能够高效率地完成，需要用 HTTP 协议来传送一切必须的信息 2.1 使用HTTP的URL格式 上面URL的格式&lt;协议&gt;://&lt;主机&gt;:&lt;端口&gt;/&lt;路径&gt;中的协议部分，就可以选择HTTP协议。格式如下： 2.2HTTP 的报文结构 ：HTTP 有两类报文：请求报文——从客户向服务器发送请求报文、响应报文——从服务器到客户的回答。 （1）请求报文 报文格式： 方法：是面向对象技术中使用的专门名词。所谓“方法”就是对所请求的对象进行的操作，因此这些方法实际上也就是一些命令。因此，请求报文的类型是由它所采用的方法决定的。 URL：是所请求的资源的 URL。 版本：是 HTTP 的版本。 （2）响应报文 报文格式： 状态码：状态码都是三位数字 ，1xx 表示通知信息的，如请求收到了或正在进行处理；2xx 表示成功，如接受或知道了；3xx 表示重定向，表示要完成请求还必须采取进一步的行动；4xx 表示客户的差错，如请求中有错误的语法或不能完成；5xx 表示服务器的差错，如服务器失效无法完成请求。 短语：解释状态码的简单短语 3.用户点击链接后所发生的事件以在浏览器点击链接到百度的超链接为例 (1) 浏览器分析超链指向页面的 URL。 (2) 浏览器向 DNS 请求解析 www.baidu.com的 IP 地址。 (3) 域名系统 DNS 解析出百度服务器的 IP 地址。 (4) 浏览器与服务器建立 TCP 连接 (5) 浏览器发出取文件命令： GET /chn/yxsz/index.htm。 (6) 服务器给出响应，把文件 index.htm 发给浏览器。 (7) TCP 连接释放。 (8) 浏览器显示 index.htm 中的所有文本。","categories":[],"tags":[{"name":"计算机网络","slug":"计算机网络","permalink":"https://tetedetian2.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"}]},{"title":"搭建博客之——[hexo+github]","slug":"搭建博客之——[hexo+github]","date":"2020-07-19T18:42:06.368Z","updated":"2020-07-04T18:48:03.976Z","comments":true,"path":"2020/07/20/搭建博客之——[hexo+github]/","link":"","permalink":"https://tetedetian2.github.io/2020/07/20/%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2%E4%B9%8B%E2%80%94%E2%80%94[hexo+github]/","excerpt":"教你从0开始搭建博客","text":"教你从0开始搭建博客 一、hexo和github是什么？ 一般网站需要两个东西 程序+服务器（放程序的地方) hexo 实际上可以看做一个程序，是用来生成博客页面 比如主页index.html github仓库相当于服务器，存放hexo生成的index.html等文件的地方 在本地电脑上用hexo生成了博客页面，写好文章，然后上传到github的仓库，别人就可以访问仓库下的页面了，也就是访问博客 二、搭建流程^Tip1.环境搭建 node.js node.js是一个能够在服务器端运行JavaScript的开放源代码、跨平台JavaScript 运行环境。 下载地址：https://nodejs.org/zh-cn/ （一般下载LTS版，即长期支持版） npm git","categories":[],"tags":[{"name":"博客搭建与运营","slug":"博客搭建与运营","permalink":"https://tetedetian2.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B8%8E%E8%BF%90%E8%90%A5/"}]},{"title":"yilia主题使用方法","slug":"yilia主题使用方法","date":"2020-07-19T18:42:06.364Z","updated":"2020-07-07T07:46:49.293Z","comments":true,"path":"2020/07/20/yilia主题使用方法/","link":"","permalink":"https://tetedetian2.github.io/2020/07/20/yilia%E4%B8%BB%E9%A2%98%E4%BD%BF%E7%94%A8%E6%96%B9%E6%B3%95/","excerpt":"这里，有yilia主题的配置方法及一些问题的解决方法，希望对你有帮助^_^","text":"这里，有yilia主题的配置方法及一些问题的解决方法，希望对你有帮助^_^ 置顶文章、文章阅读数统计、鼠标点击小红心的设置以及一些其他的功能添加，点这里 注意：文章中下图这个地方有错，因为不蒜子域名有变 变为 1&lt;script async src&#x3D;&quot;https:&#x2F;&#x2F;busuanzi.ibruce.info&#x2F;busuanzi&#x2F;2.3&#x2F;busuanzi.pure.mini.js&quot;&gt;&lt;&#x2F;script&gt; 改背景，加头像旋转效果，点这里","categories":[],"tags":[{"name":"博客搭建与运营","slug":"博客搭建与运营","permalink":"https://tetedetian2.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B8%8E%E8%BF%90%E8%90%A5/"}]},{"title":"MySQL基础知识点","slug":"MySQL基础知识点","date":"2020-07-19T18:42:06.362Z","updated":"2020-07-23T09:10:02.090Z","comments":true,"path":"2020/07/20/MySQL基础知识点/","link":"","permalink":"https://tetedetian2.github.io/2020/07/20/MySQL%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/","excerpt":"————这里，有MySQL的一些基础知识点^_^————","text":"————这里，有MySQL的一些基础知识点^_^———— 前言注：此博客内容基于《MySQL必知必会》一书，下载链接：https://pan.baidu.com/s/1phUYbp982A-aGwWTiGosKw 提取码:4d7l 个人喜欢在学习一样新东西之前先了解它是什么、它有什么用、为什么要学它、大约怎么学。不然学起来云里雾里，心肌梗塞的感觉。那么现在先回答一下上面的问题： 1.它是什么：MySQL其实是一个数据库管理系统，可以理解为一种数据库软件。 2.它有什么用：平时我们接触的很多东西都与数据库有关，比如你在学校的学籍信息系统通过你的学号查询你的信息，就是通过访问学校创建的数据库来查询的。而MySQL就相当于访问的工具。 3.为什么要学它：因为前面说的，我们日常生活中有许许多多的数据，我们要学会怎么去查看，获取等。 4.大约怎么学： 1.安装MySQL，微信搜索“软件安装管家”，软件目录里有多个MySQL版本的下载地址以及安装教程，最后那个Navicat Premium是一个将数据库可视化的软件。 2.建立《MySQL必知必会》用到的数据库，后面学习需要用，就像学习excel一样，需要有一个表格来处理。《MySQL必知必会》后面的附录B有介绍。也可参考博客：https://blog.csdn.net/x__Sherlock/article/details/104223646 3.学习MySQL知识以及处理命令 第一章——了解SQLSQL: 结构化查询语言（Structured Query Language），是一种专门用来与数据库通信的语言 数据库： 保存有组织的数据的容器 数据库组成 表：某种特定类型数据的结构化清单 表名: 数据库中的每个表都有一个名字，用来标识自己 列和数据类型：列中存储表的部分信息，比如顾客地址，号码 行:例如，顾客表可以每行存储一个顾客。表中的行数为记录的总数 主键：占据一列，用于标识行 第二章——MySQL简介MySQL 含义：是一种DBMS（数据库管理系统），即它是一种数据库软件 数据的所有存储、检索、管理和处理实际上是由数据库软件——DBMS（数据库管理系统）完成的 第三章——使用MySQL注意：1.MySQL命令用;或\\g结束，换句话说，仅按Enter不执行命令 2.输入quit或exit退出命令行实用程序。 1.基本命令1.1创建新数据库 如下，创建一个名为“test”的数据库create database test; 1.2查看数据库 show databases; 1.3使用某个数据库 格式：“use 数据库名字;”，比如下面是使用数据库“test”use test; 1.4查看数据库的表 show tables;查看数据库的表之前需要先“use”数据库，指明需要显示的数据库，如下 1.5查看表的列信息 show columns from customers;或describe customers;返回的是每一列的信息，即字段名、数据类型、是否允许NULL、键信息、默认值以及其他信息显示结果如下 下图为customers表，自己比较一下 第四章——检索数据1.简单检索1.1检索单列 例子：select prod_name from products;解释：上述语句利用SELECT语句从 products表中检索一个名为prod_name的列。 1.2检索多个列 例子：select prod_id,prod_name,prod_price from products;解释：上述语句利用SELECT语句从products表中检索名为 prod_id,prod_name,prod_price 的三个列。 1.3检索所有列 例子：select * from products;解释：上述语句利用SELECT语句从products表中检索所有列。 1.4检索不同行 例子：select distinct vend_id from products; 解释：上述语句利用SELECT语句从products表中检索vend_id列不同的行。输出看下图 对比下图select vend_id from products;的输出结果 2.限制结果检索2.1限制行数 例子：select vend_id from products limit 5; 解释：上述语句利用SELECT语句从products表中检索vend_id前五行。输出看下图 例子：select vend_id from products limit 5,5; 解释：上述语句利用SELECT语句从products表中检索vend_id 的6~10行（因为第一行为行0，不是行1，类似c语言的数组元素定义）。输出看下图 2.2使用完全限定的表名 例子：1.select products.prod_name from products; ​ 2.select products.prod_name from test.products; (test是我存放这些表的) 解释：1和2与select prod_name from products;功能一样至于有什么特殊用处，我还不知道。。。 第五章——排序检索数据1.根据一个列排序 例子：select prod_name from products order by prod_name; 解释：上述语句将products表中prod_name列排序输出。（按照字母排序） 2.根据多个列排序 例子：select prod_id,prod_price,prod_name from products order by prod_price,prod_name; 解释：上述语句将products表中prod_id,prod_price,prod_name三列根据prod_price,prod_name排序输出。（先按照prod_price排序，prod_price相同的，按照prod_name排），输出如下图 3.指定排序方向 排序方向指升序还是降序，默认升序，需要降序的话需要用到desc关键字 例子：select prod_id,prod_price,prod_name from products order by prod_price desc,prod_name; 解释：上述语句将products表中prod_id,prod_price,prod_name三列根据prod_price降序,prod_name升序，排序输出。 4.排序并限制输出数量 例子：select prod_price from products order by prod_price desc limit 1; 解释：上述语句将products表中prod_price列根据prod_price降序排序输出，并指输出一个。比如生活中需要找到最贵的选项。 第六章——过滤数据本章将讲授如何使用 SELECT 语句的 WHERE 子句指定搜索条件 1.相等检查 例子： 1select prod_name,prod_price from products where prod_price=2.50; 解释：显示prod_name,prod_price两列，但只显示prod_price=2.50的行。输出看下图 例子： 1select prod_name,prod_price from products where prod_name='fuses'; 解释：显示prod_name,prod_price两列，但只显示prod_name=’fuses’的行(因为是字符串，需要用单引号)。 2.范围值检查 例子： 1select prod_name,prod_price from products where prod_price between 5 and 10; 解释：显示prod_name,prod_price两列，但只显示5&lt;=prod_price&lt;=10的行。 3.空值检查 例子： 1select prod_name,prod_price from products where prod_price is null; 解释：显示prod_name,prod_price两列，但只显示prod_price为空的行（注意：0不是空）。 4.其他的where子句操作符 5.一些注意点： 1.NULL值的行在匹配或不匹配具体数值是，不会返回。 2.where 与order by 一起用时，where需要放在order by 前面。例如 1select prod_name,prod_price from products where prod_price=2.50 order by prod_name desc; 输出如下 第七章——数据过滤(这名字咋和第六章这么像呢) 本章讲授如何组合WHERE子句以建立功能更强的更高级的搜索条件。我们还将学习如何使用NOT和IN操作符。 1.and操作符 例子： 1select prod_name,prod_price from products where vend_id=1003 and prod_price&lt;=10; 解释：显示prod_name,prod_price两列，但只显示同时满足vend_id=1003 和 prod_price&lt;=10的行。 2.or操作符 例子： 1select prod_name,prod_price from products where vend_id=1003 or vend_id=1002; 解释：显示prod_name,prod_price两列，但只显示满足vend_id=1003 或 vend_id=1002的行。 3.and与or优先级 and的优先级大于or，与加减乘除优先级类似，and相当于乘除，or加减 例子： 1select prod_name,prod_price from products where vend_id=1002 or vend_id=1003 and prod_price&gt;=10; 解释：输出显示prod_name,prod_price两列，但只显示满足vend_id=1003 and prod_price&gt;=10 或 vend_id=1002的行。 可以通过加括号控制计算顺序，比如 1select prod_name,prod_price from products where (vend_id=1002 or vend_id=1003) and prod_price&gt;=10; 4.in操作符 例子： 1select prod_name,prod_price from products where vend_id in (1003,1002); 解释：显示prod_name,prod_price两列，但只显示满足vend_id=1003 或 vend_id=1002的行。其实，他的功能和select prod_name,prod_price from products where vend_id=1003 or vend_id=1002;是一样的。 相对于or的优点： 1.在使用长的合法选项清单时， in操作符的语法更清楚且更直观。2.在使用in时，计算的次序更容易管理（因为使用的操作符更少）。3.in操作符一般比OR操作符清单执行更快。4.in的最大优点是可以包含其他SELECT语句，使得能够更动态地建立WHERE子句。 5.not操作符 例子： 1select prod_name,prod_price from products where vend_id not in (1003,1002); 解释：显示vend_id=1003 或 vend_id=1002 之外的行。 第八章——用通配符进行过滤本章介绍什么是通配符、如何使用通配符以及怎样使用LIKE操作符进行通配搜索，以便对数据进行复杂过滤。 通配符：用来匹配值的一部分的特殊字符 。 搜索模式：由字面值、通配符或两者组合构成的搜索条件。 比如直接相等匹配和使用通配符匹配是两种搜索模式。 1.like操作符（是一种谓词) 为在搜索子句中使用通配符，必须使用like操作符。like指示MySQL，后跟的搜索模式利用通配符匹配而不是直接相等匹配进行比较。 （就是用来告诉MySQL搜索模式的） 2.百分号（%）通配符 在搜索串中， %表示任何字符出现任意次数。 例子： 1select prod_id,prod_name from products where prod_name like 'jet%'; 解释：显示prod_name中以jet开头的行。 例子： 1select prod_id,prod_name from products where prod_name like '%anvil%'; 解释：显示prod_name中包含jet的行。 3.下划线（_）通配符 与下划线的用途与%一样，但下划线只匹配单个字符而不是多个字符 。 例子： 1select prod_id,prod_name from products where prod_name like '_ ton anvil'; 解释：”_“的地方只可以有一个字符。对比一下下面的例子 例子： 1select prod_id,prod_name from products where prod_name like '% ton anvil'; 第九章——用正则表达式进行搜索本章将学习如何在MySQL WHERE子句内使用正则表达式来更好地控制数据过滤。用到 regexp 操作符 1.基本字符匹配 例子： 1select prod_name from products where prod_name regexp '1000'; 解释：显示prod_name中包含1000的行。 2.进行或匹配 例子： 1select prod_name from products where prod_name regexp '1000|2000'; 解释：显示prod_name中包含1000或2000的行。 3.匹配几个字符之一 例子： 1select prod_name from products where prod_name regexp '[123] ton'; 解释：显示prod_name中包含”1 ton”、”2 ton” 或者”3 ton“的行。 4.匹配范围 上面的select prod_name from products where prod_name regexp &#39;[123] ton&#39;;还可以换成 1select prod_name from products where prod_name regexp '[1-3] ton'; 还有字母也可以，比如[a-z] 5.匹配特殊字符 比如. ， | ， [] ，这些有特殊含义的字符，需要用\\\\来进行转义 例子： 1select prod_name from products where prod_name regexp '\\\\.'; 例子： 1select prod_name from products where prod_name regexp '.'; 解释：因为.在regexp操作中，代表任意字符，如果不在前面，MySQL就以为你想搜索任意字符 6.匹配字符类 例子： 1select prod_name from products where prod_name regexp '[:upper:]'; 解释:显示prod_name中包含大写字母的行。 7.匹配多次出现 例子 1select prod_name from products where prod_name regexp &#39;\\\\([0-9] sticks?\\\\)&#39;; 解释：\\\\( 匹配 ( ，[0-9]匹配任意数字（这个例子中为1和5），sticks?匹配stick和sticks（s后的?使s可选，因为?匹配它前面的任何字符的0次或1次出现），\\\\)匹配)。 例子 1select prod_name from products where prod_name regexp &#39;[[:digit:]]&#123;4&#125;&#39;; 解释：[[:digit:]]{4}匹配连在一起的任意4位数字。 8.定位符 *注意：^的双重用途 ^有两种用法。在集合中（用[和]定义），用它来否定该集合，否则，用来指串的开始处。 * 例子 1select prod_name from products where prod_name regexp &#39;^[0-9\\\\.]&#39;; 解释：^[0-9\\\\.]匹配0到9，或者.为开头的prod_name,^[0-9\\\\.]也可写成^[123456789\\\\.] 例子 1select prod_name from products where prod_name regexp &#39;[[:&lt;:]]t&#39;; 解释：[[:&lt;:]]t匹配t开头的词。 第十章——创建计算字段*本章介绍什么是计算字段，如何创建计算字段以及怎样从应用程序中使用别名引用它们。 * 1.拼接字段 使用concat函数 例子： 1select concat (vend_name,'(',vend_country,')') from vendors; 解释：Concat()需要一个或多个指定的串，各个串之间用逗号分隔。上面的语句连接了4个元素。 2.使用别名 使用as关键字 例子： 1select concat (vend_name,'(',vend_country,')') as vend_title from vendors; 解释：这不用解释了吧？ 3.执行算数计算 例子： 1select prod_id,quantity,item_price,quantity*item_price as expanded_price from orderitems where order_num=20005; 解释：这也不用解释了吧？加减乘除就是##-*/，也可以加括号。 第十一章——使用数据处理函数本章介绍什么是函数， MySQL支持何种函数，以及如何使用这些函数。 1.文本处理函数 例子： 1select vend_name,upper(vend_name) as vend_name_upcase from vendors; 解释：upper()函数将文本装换为大写。 下面列举了一些常用函数 上面列举的函数中，有个特别有趣的函数：soundex（）函数。 soundex是一个将任何文本串转换为描述其语音表示的字母数字模式的算法。 作用是根据发音来查找数据。 例子： 1select cust_name,cust_contact from customers where soundex(cust_contact)=soundex('Y Lie'); 因为Y.Lee和Y.Lie发音相似，所以它们的SOUNDEX值匹配 。这个的作用是能够对录入数据时的错误进行补救。 2.日期和时间处理函数 上图列出了一些常用的日期和时间处理函数，使用这些函数，有一些注意点，如下：1.日期必须为格式yyyy-mm-dd ，因为它排除了多义性（如，04/05/06是2006年5月4日或2006年4月5日或2004年5月6日或……）。 2.对于日期比较，习惯使用date()函数。 例如： 1select cust_id,order_num from orders where date(order_date)='2005-09-01'; 比 1select cust_id,order_num from orders where order_date='2005-09-01'; 要好。因为order_date的数据类型为datetime。这种类型存储日期及时间值。 比 如 ， 存 储 的 order_date 值 为2005-09-01 11:30:05，则WHERE order_date = ‘2005-09-01’失败。即使给出具有该日期的一行，也不会把它检索出来，因为WHERE匹配失败。 同理，也应该在适当的时候使用time（）函数（筛选时间的）。 3.数值处理函数 数值处理函数，就是我们平时学习其他语言都会有的一类函数。 第十二章——汇总数据*本章介绍什么是SQL的聚集函数以及如何利用它们汇总表的数据 * 上图是一些基本的汇总数据的函数 用法例子： 1select avg(prod_price) from products; 其他函数用法类似，不过需要注意count（）函数用法。 count()函数 1.使用COUNT(*)对表中行的数目进行计数， 不管表列中包含的是空值（NULL）还是非空值。2.使用COUNT(column)对特定列中具有值的行进行计数，忽略NULL值。 例子(1)： 1select count(*) from customers; 例子(2)： 1select count(cust_email) from customers; 因为cust_email只有三个数据，另外两个是空的，所以显示3 distinct参数 作用：只对不同的值进行处理 例子： 1select avg(distinct prod_price) from products; 只对prod_price中的不同值进行取平均值操作。 第十三章——分组数据本章将介绍如何分组数据，以便能汇总表内容的子集。这涉及两个新SELECT语句子句，分别是GROUP BY子句和HAVING子句 1.创建分组 例子： 1select vend_id,count(*) as num_prods from products group by vend_id; 解释：group by子句把vend_id按照数值进行了分组 group by使用注意点： 1.**group by子句必须出现在where子句之后，order by子句之前。 例子： 1select vend_id,count(*) as num_prods from products where vend_id&lt;=1003 group by vend_id order by vend_id desc; 2.过滤分组 使用having子句 例子： 1select vend_id,count(*) as num_prods from products group by vend_id having count(*)&gt;3; 解释：可以比较上面的例子，having count(*)把大于3的过滤出来，只显示大于3的 3.分组和排序 group by和order by组合使用 例子： 1select order_num,sum(quantity*item_price) as ordertotal from orderitems group by order_num having sum(quantity*item_price)&gt;=50 order by ordertotal; 第十四章——使用子查询1.利用子查询进行过滤 例子： 1select cust_name,cust_contact from customers where cust_id in (select cust_id from orders where order_num in (select order_num from orderitems where prod_id='TNT2')); 解释：(1) 检索包含物品TNT2的所有订单的编号。(2) 检索具有前一步骤列出的订单编号的所有客户的ID。(3) 检索前一步骤返回的所有客户ID的客户信息。 这个例子，运用十五章学习的联结知识也可以解决，命令如下 1select cust_name,cust_contact from customers,orderitems,orders where customers.cust_id=orders.cust_id and orderitems.order_num=orders.order_num and prod_id='TNT2'; 2.子查询作为计算字段 例子： 1select cust_name,cust_state,(select count(*) from orders where orders.cust_id=customers.cust_id) as orders from customers order by cust_name; 解释：select count(*) from orders where orders.cust_id=customers.cust_id 的作用是：对于检索出的每个客户，统计其在orders表中的订单数目 。 第十五章——联结表本章将介绍什么是联结，为什么要使用联结，如何编写使用联结的SELECT语句。 1.基础概念1.1关系表 简单来说，就是两个表之间有一列数值是对应的，两个表的行之间是对应的。 1.2联结 简单地说，联结是一种机制，用来在一条SELECT语句中关联表，因此称之为联结。使用特殊的语法，可以联结多个表返回一组输出，联结在运行时关联表中正确的行。 2.创建联结2.1联结两个表 例子： 1select vend_name,prod_name,prod_price from vendors,products where vendors.vend_id=products.vend_id order by vend_name,prod_name; vend_name是表vendors的数据， prod_name,prod_price是表products的数据。上面的语句把两个表的数据联结起来了 上面的例子也可以换个语法， 1select vend_name,prod_name,prod_price from vendors inner join products on vendors.vend_id=products.vend_id order by vend_name,prod_name; 使用的是inner join语法 2.2联结多个表 例子： 1select vend_name,prod_name,prod_price,quantity from vendors,products,orderitems where vendors.vend_id=products.vend_id and orderitems.prod_id=products.prod_id and order_num=20005; 第十六章——创建高级联结本章将讲解另外一些联结类型（包括它们的含义和使用方法），介绍如何对被联结的表使用表别名和聚集函数。 1.使用表别名 例子： 1select vend_name,prod_name,prod_price,quantity from vendors as v,products as p,orderitems as o where v.vend_id=p.vend_id and o.prod_id=p.prod_id and order_num=20005; 给vendors ,products ,orderitems 三个表起了别名，目的是缩短SQL语句，方便多次使用表 应该注意：表别名只在查询执行中使用。与列别名不一样，表别名不返回到客户机。 2.使用不同类型的联结2.1自联结 问题：假如你发现某物品（其ID为DTNTR）存在问题，因此想知道生产该物品的供应商生产的其他物品是否也存在这些问题。此查询要求首先找到生产ID为DTNTR的物品的供应商，然后找出这个供应商生产的其他物品。 1select p1.prod_id,p1.prod_name from products as p1,products as p2 where p1.vend_id=p2.vend_id and p2.prod_id='DTNTR'; 使用了自联结的方法，其实也可以使用子查询的方法。但有时候处理联结远比处理子查询快得多。 2.2自然联结2.3外部联结 许多联结将一个表中的行与另一个表中的行相关联。但有时候会需要包含没有关联行的那些行。 比如：对每个客户下了多少订单进行计数，包括那些至今尚未下订单的客户； 先来看一下两个表 表1是orders表，表2是customers表。根据问题，要讲customers表所有的cust_id全部列出来，哪怕他在orders表没数据 1select customers.cust_id,orders.order_num from customers left outer join orders on customers.cust_id=orders.cust_id; 输出显示，就算cust_id=10002在orders表里没有数据，一样会输出，只是显示NULL。这主要是left outer join的作用，left指定了将left outer join左边的表的左右行输出，即customers。如果left替换成right，则指orders表。 3.使用带聚集函数的联结 例子： 1select customers.cust_name,customers.cust_id,count(orders.order_num) as num_ord from customers left outer join orders on customers.cust_id=orders.cust_id group by customers.cust_id; 第十七章——组合查询本章讲述如何利用UNION操作符将多条SELECT语句组合成一个结果集。 使用union 例子： 1select vend_id,prod_id,prod_price from products where prod_price union select vend_id,prod_id,prod_price from products where vend_id IN (1001,1002); UNION指示MySQL执行两条SELECT语句，并把输出组合成单个查询结果集。 union一些特性： 1.每个查询必须包含相同的列、表达式或聚集函数（不过分析各个列不需要以相同的次序列出）。 2.UNION从查询结果集中自动去除了重复的行。若想保留重复行，可用UNION ALL 。 3.在用UNION组合查询时，只能使用一条ORDER BY子句，它必须出现在最后一条SELECT语句之后。 第十八章——全文本搜索本章将学习如何使用MySQL的全文本搜索功能进行高级的数据查询和选择 1.全文本搜索是什么？ 是可以进行精确、多功能，高性能的文本搜索方式 2.使用方法(步骤)： （1）.创建表的时候要使用fulltext命令来对指定索引的列。 例子：（这个表在导入的时候已经存在了，这里只是演示怎么创建的，create table命令后面怎么用后面章节会讲，先理解fulltext作用） 123456789create table productnotes( note_id int not null auto_increment, prod_id char(10) not null, note_date datetime not null, note_text text null, primary key(note_id), fulltext(note_text))engine=myisam; 这个例子fulltext(note_text)指定了全文本搜索时对note_text列进行搜索。 （2）.进行全文本搜索 例子： 1select note_text from productnotes where match(note_text) against('rabbit'); productnotes表中的note_text列有两行含有rabbit，因此被检索出来了。其中，Match(note_text)指示MySQL针对指定的列进行搜索， Against(‘rabbit’)指定词rabbit作为搜索文本。 3.全文本搜索优点 （1）相对于like+通配符,正则表达式这些来说，性能高 （2）全文本搜索会根据被搜索文本出现的先后，次数等进行排序 4.使用查询扩展 例子： 1select note_text from productnotes where match(note_text) against('anvils' with query expansion); with query expansion使得搜索结果不仅输出anvils所在行，还会输出带有anvils所在行其他单词的行，就是anvils所在行的其他单词，要是在其他行出现，会被认为相关，然后一起输出 5.布尔文本搜索 即使没有FULLTEXT索引也可以使用布尔文本搜索 以布尔方式，可以提供关于如下内容的细节：  要匹配的词； 要排斥的词（如果某行包含这个词，则不返回该行，即使它包含其他指定的词也是如此）； 排列提示（指定某些词比其他词更重要，更重要的词等级更高）； 表达式分组； 另外一些内容 例子： 1select note_text from productnotes where match(note_text) against ('heavy -ropes*' in boolean mode); 添加in boolean mode代表进行布尔文本搜索，-rope*代表排除包含rope*（任何以rope开始的词，包括ropes）的行 。 6.全文本搜索的使用说明 (1)在索引全文本数据时，短词被忽略且从索引中排除。短词定义为那些具有3个或3个以下字符的词（如果需要，这个数目可以更改）。(2) MySQL带有一个内建的非用词（stopword）列表，这些词在索引全文本数据时总是被忽略。如果需要，可以覆盖这个列表（请参阅MySQL文档以了解如何完成此工作）。(3)许多词出现的频率很高，搜索它们没有用处（返回太多的结果）。因此， MySQL规定了一条50%规则，如果一个词出现在50%以上的行中，则将它作为一个非用词忽略。 50%规则不用于IN BOOLEAN MODE。(4)如果表中的行数少于3行，则全文本搜索不返回结果（因为每个词或者不出现，或者至少出现在50%的行中）。(5) 忽略词中的单引号。例如， don’t索引为dont。(6)不具有词分隔符（包括日语和汉语）的语言不能恰当地返回全文本搜索结果。(7)如前所述，仅在MyISAM数据库引擎中支持全文本搜索。 第十九章——插 入 数 据本章介绍如何利用SQL的INSERT语句将数据插入表中。 1.插入行 使用insert into 例子：给表customers添加了两行 123insert into customers(cust_name,cust_address,cust_city,cust_state,cust_zip,cust_country)values('tian','dong shan street','huazhou','MI','66666','CH'), ('bin','dong shan street','huazhou','MI','66066','CH'); insert into后面跟着表名，需要添加数据的列用括号括着。values指出需要添加的数据，需要按照前面的列名顺序添加。 2.插入检索出的数据 例子：将表custnew的行插入到表customers中 假设A,B,C,D,E,F,G 是表custnew的列名。这个例子是把A列插入到cust_name，B列插入到cust_address，以此类推 12insert into customers(cust_name,cust_address,cust_city,cust_state,cust_zip,cust_country)select A,B,C,D,E,F,G from custnew; 第二十章——更新和删除数据本章介绍如何利用UPDATE和DELETE语句进一步操纵表数据。 1.更新数据 使用update语句 例子1：给表customers里的一位客户添加邮箱地址 1update customers set cust_email='elmer@fudd.com' where cust_id=10005; 例子1：更新表customers里的数据 1update customers set cust_name='The Fudds',cust_email='elmer@fudd.com' where cust_id=10005; 记得不要漏了where语句，不然就会把全部行的数据都更新了。如果想删除某个列数值，可设置它为NULL 。 ignore关键字： 如果用UPDATE语句更新多行，并且在更新这些行中的一行或多行时出一个现错误，则整个UPDATE操作被取消（错误发生前更新的所有行被恢复到它们原来的值）。为即使是发生错误，也继续进行更新，可使用IGNORE关键字，如下所示：UPDATE IGNORE customers… 2.删除数据 （1）删除整个行，使用delete语句 例子： 1delete from customers where cust_id=10005; （2）删除所有行，使用truncate table语句 例子1：更新表customers里的 1truncate table customers; 3.注意点 （1）小心使用 MySQL没有撤销（ undo）按钮。应该非常小心地使用UPDATE和DELETE，否则你会发现自己更新或删除了错误的数据。 （2）在对UPDATE或DELETE语句使用WHERE子句前，应该先用SELECT进行测试，保证它过滤的是正确的记录，以防编写的WHERE子句不正确 。 第二十一章——创建和操纵表本章讲授表的创建、更改和删除的基本知识。 1.创建表 使用create table (1)表的主键可以在创建表时用PRIMARY KEY关键字指定。主键是用来标识表中每个行的列。 (2)每个表列或者是NULL列，或者是NOT NULL列，需要规定好。NULL为默认设置，如果不指定NOT NULL，则认为指定的是NULL。NULL代表该列可以是空的，NOT NULL代表该列一定要有值。 (3) AUTO_INCREMENT :添加了AUTO_INCREMENT的列每当增加一行时自动增量 。 (4) 指定默认值 :使用DEFAULT ，与AUTO_INCREMENT添加位置一样，比如添加default 1,那么这一列在没给出数值的时候就是默认值1。 (5) 引擎类型 :可以看到下面例子的最后有个语句：ENGINE=InnoDB ，这语句是用来配置引擎的，InnoDB是一个可靠的事务处理引擎 。除此之外还有MEMORY、MyISAM 例子：表customers的创建 2.操纵表2.1 更新表 使用ALTER TABLE语句 例子1：给表添加一个列 1alter table vendors add vend_phone char(20); 例子2：给表删除一个列 1alter table vendors drop column vend_phone; 2.2 删除表 删除表（删除整个表而不是其内容） ,使用DROP TABLE语句， 与上一章的delete不一样， 例子： 1drop table vendors2; 请谨慎使用！ 2.3 重命名表 使用RENAME TABLE语句可以重命名一个表 例子： 1rename table vendors to vendor,vendor to vendors; 第二十二章——使 用 视 图本章将介绍视图究竟是什么，它们怎样工作，何时使用它们。我们还将看到如何利用视图简化前面章节中执行的某些SQL操作。 1. 什么是视图 简单来说，就是可以通过视图，呈现多个表数据的组合，在对视图进行检索、查看的时候，其实是通过一定的方式查看视图引用的表的数据，视图并没有像表这样实际数据。我们前面有学习了联结，联结的语句一般会比较复杂，利用视图就可以简化复杂语句的使用了。 再简而言之，视图就是对筛选的数据进行封装，但是它并没有真正的复制表的数据，只是引用。 2.使用视图注意点 （1）视图可以嵌套，即可以利用从其他视图中检索数据的查询来构造一个视图。（2）ORDER BY可以用在视图中，但如果从该视图检索数据SELECT中也含有ORDER BY，那么该视图中的ORDER BY将被覆盖。（3）视图不能索引，也不能有关联的触发器或默认值。（4）视图可以和表一起使用。例如，编写一条联结表和视图的SELECT语句。 3.使用视图创建视图：CREATE VIEW语句查看创建某视图的语句： 使用SHOW CREATE VIEW viewname（viewname是实际视图名字）删除视图：其语法为DROP VIEW viewname。更新视图时：可以先用DROP再用CREATE，也可以直接用CREATE ORREPLACE VIEW。 3.1 利用视图简化复杂的联结 例子：创建一个视图，呈现内容与select customers.cust_id,orders.order_num from customers left outer join orders on customers.cust_id=orders.cust_id;一致。 1create view customers_num as select customers.cust_id,orders.order_num from customers left outer join orders on customers.cust_id=orders.cust_id; 创建之后，可通过 1select * from customers_num; 查看与上述联结语句一样的内容 3.2用视图过滤不想要的数据 其实与利用视图简化联结一样用法 例子：过滤没有邮箱的客户 1create view customers_not_email as select cust_id,cust_name,cust_email from customers where cust_email is not null; 其他的视图创建都差不多，后面跟着select语句。 第二十三章——使用存储过程本章介绍什么是存储过程，为什么要使用存储过程以及如何使用存储过程，并且介绍创建和使用存储过程的基本语法。 1.什么是存储过程 简单来说，存储过程的各语言里的子函数很像，把一些语句封装成块，使用的时候直接调用即可。 2.创建存储过程 使用create procedure语句 DELIMITER //告诉命令行实用程序使用//作为新的语句结束分隔符 ，如果用；会报错 例子： 12345DELIMITER //CREATE PROCEDURE ordertotal(IN onumber INT, OUT ototal DECIMAL(8,2))BEGIN SELECT SUM(item_price*quantity) FROM orderitems WHERE order_num=onumber INTO ototal;END// 创建完成后，下面是把分隔符换回;，调用存储过程，以及使用的截图 3.建立智能存储过程 例子：对某些顾客增加增值税 --后面的是注释，taxable它是一个布尔值（如果要增加税则为真，否则为假）,DECLARE语句定义了两个局部变量。 COMMENT它不是必需的，但如果给出，将在SHOW PROCEDURE STATUS的结果中显示。 输入输出： 4.检查存储过程 为显示用来创建一个存储过程的CREATE语句，使用SHOW CREATEPROCEDURE语句 1SHOW CREATE PROCEDURE ordertotal; 第二十四章——使 用 游 标本章将讲授什么是游标以及如何使用游标。 1.什么是游标 如果学过c语言，就比较好理解。游标的作用与指针类似。比如在一个操作里，需要对一个表的一千行进行有规律的操作，比如+1、+2、+3……，那么使用一千条语句就不现实了。此时就可以通过游标和循环，每次对一行操作，循环一千次。 2.使用游标 创建游标: 用DECLARE ....CURSOR语句创建 。 打开和关闭游标：用OPEN语句来打开 ，用CLOSE语句来打开,如果你不明确关闭游标， MySQL将会在到达END语句时自动关闭它。 使用游标数据 :游标被打开后，可以使用FETCH语句分别访问它的每一行。FETCH指定检索什么数据（所需的列），检索出来的数据存储在什么地方。它还向前移动游标中的内部行指针，使下一条FETCH语句检索下一行（不重复读取同一行）。 例子： 1234567891011121314151617181920212223242526272829303132333435363738DELIMITER //CREATE PROCEDURE processorders()BEGIN --声明局部变量 DECLARE done BOOLEAN DEFAULT 0; DECLARE o INT; DECLARE t DECIMAL(8,2); --声明游标 DECLARE ordernumbers CURSOR FOR SELECT order_num FROM orders; --定义了一个CONTINUE HANDLER，它是在条件出现时被执行的代码。这里它指出当SQLSTATE'02000'出现时，SET done=1。 DECLARE CONTINUE HANDLER FOR SQLSTATE '02000' SET done=1; --创建一个表存数据 CREATE TABLE IF NOT EXISTS ordertotals --打开游标 OPEN ordernumbers; --重复使用FETCH REPEAT FETCH ordernumbers INTO o; --掉用前面增加增值税的存储过程，并且返回结果 CALL ordertotal(o,1,t); --保存数据，十九章内容 INSERT INTO ordertotals(order_num,total) VALUES(o,t); --结束循环 UNTIL done END REPEAT; --关闭游标 CLOSE ordernumbers; END// 第二十五章——使用触发器本章学习什么是触发器，为什么要使用触发器以及如何使用触发器。本章还介绍创建和使用触发器的语法。 如果你想要某条语句（或某些语句）在事件发生时自动执行，怎么办呢？ 答案：使用触发器 要点： （1）触发器只能触发的语句：DELETE、 INSERT、UPDATE。 （2）只有表才支持触发器，视图不支持（临时表也不支持）。 （3） 触发器自带一些虚拟表，比如NEW,OLD。 1.创建触发器 创建触发器要求： 唯一的触发器名； 触发器关联的表； 触发器应该响应的活动（DELETE、 INSERT或UPDATE）； 触发器何时执行（处理之前或之后）。 用CREATE TRIGGER语句创建 例子：这个例子暂时有问题 12--文本Productadded将对每个插入的行显示一次。CREATE TRIGGER newproduct AFTER INSERT ON products FOR EACH ROW SELECT 'product added' INTO @tip; 测试一下： 12INSERT INTO products(prod_id,vend_id,prod_name,prod_price,prod_desc)VALUES(&#39;tian&#39;,1003,&#39;yutian&#39;,10,&#39;sss&#39;); 2.删除触发器 和前面的删除语句一样 1DROP TRIGGER newproduct; 第二十六章——管理事务处理本章介绍什么是事务处理以及如何利用COMMIT和ROLLBACK语句来管理事务处理 1.什么是事务处理 事务处理是一种机制，用来管理必须成批执行的MySQL操作，以保证数据库不包含不完整的操作结果。通俗点来说就是用来避免因为一些故障导致sql语句执行到一半就停止了，然后产生了错误的数据。 事务处理以START TRANSACTION;开始，有点类似一个函数块，然后可以利用一些语句对整个事务处理进行控制。 2.使用ROLLBACK ROLLBACK命令用来回退（撤销） MySQL语句 注意： (1)ROLLBACK只能在一个事务处理内使用（在执行一条STARTTRANSACTION命令之后）。 (2)不能回退SELECT语句。（这样做也没有什么意义。）不能回退CREATE或DROP操作。 例子 :撤销删除操作 123456SELECT * FROM orders;START TRANSACTION;DELETE FROM orders;SELECT * FROM orders;ROLLBACK;SELECT * FROM orders; 2.使用COMMIT 为进行明确的提交，使用COMMIT语句。也就是COMMIT用来保证语句执行完毕无误后再提交结果 例子： 1234START TRANSACTION;DELETE FROM orderitems WHERE order_num = 20010;DELETE FROM orders WHERE order_num = 20010;COMMIT; 最后的COMMIT语句仅在不出错时写出更改。如果第一条DELETE起作用，但第二条失败，则DELETE不会提交（实际上，它是被自动撤销的）。 3.使用保留点 ROLLBACK和COMMIT语句可以写入或撤销整个事务处理。但是复杂的事务处理可能需要部分提交或回退。便可以使用保留点 使用SAVEPOINT语句 创建保留点 1SAVEPOINT goback; goback就是保留点名称，如果需要返回保留点，就用 1ROLLBACK TO goback; 释放保留点就用 1RELEASE SAVEPOINT goback; 4.更改默认的提交行为 在事务处理里，每一个语句都是立刻执行并提交的，如果想指示MySQL不自动提交更改 ，可以用以下语句 1SET autocommit=0; 以及 1SET autocommit=1; 设置autocommit为0（假）指示MySQL不自动提交更改（直到autocommit被设置为真为止）。 第二十七章——全球化和本地化本章介绍MySQL处理不同字符集和语言的基础知识。 1.字符集和校对顺序 (1)显示所有可用的字符集以及每个字符集的描述和默认校对: 1SHOW CHARACTER SET; (2)显示所有可用的校对，以及它们适用的字符集 : 1SHOW COLLATION; (3)给表指定字符集和校对 此语句创建一个包含两列的表，并且指定一个字符集和一个校对顺序。 123456CREATE TABLE mytable( columnn1 INT, COLUMNN2 VARCHAR(10))DEFAULT CHARACTER SET hebrewCOLLATE hebrew_general_ci; (4)对每个列指定字符集个校对 1234567CREATE TABLE mytable( columnn1 INT, COLUMNN2 VARCHAR(10), column3 VARCHAR(10) CHARACTER SET latin1 COLLATE latin1_general_ci)DEFAULT CHARACTER SET hebrewCOLLATE hebrew_general_ci; 第二十八章——安 全 管 理数据库服务器通常包含关键的数据，确保这些数据的安全和完整需要利用访问控制。本章将学习MySQL的访问控制和用户管理。 1.创建，重命名，删除用户 （1）创建用户 使用CREATE USER语句 1CREATE USER tian1 IDENTIFIED BY '111111'; tian1是用户名，111111是密码。不过创建新用户不一定需要设置密码。 （2）重命名 1RENAME USER tian1 TO tiantian; （3）删除 1DROP USER tiantian; 2.设置访问权限在创建用户账号后，必须接着分配访问权限。新创建的用户账号没有访问权限。它们能登录MySQL，但不能看到数据，不能执行任何数据库操作。 (1)查看权限 1SHOW GRANTS FOR tian1; USAGE ON *.*：USAGE表示没有权限，*.*表示任意数据库以及任意表。所以，此结果表示在任意数据库和任意表上对任何东西没有权限。 （2）添加权限 使用GRANT语句 1GRANT SELECT,INSERT ON crashcourses.* TO tian1; 此GRANT允许用户在crashcourse.*（crashcourse数据库的所有表）上使用SELECT。 （3）删除权限 1REVOKE SELECT ON crashcourse.* FROM tian1; 3.更改密码 使用SET PASSWORD语句 例子1：更改tian1的密码 1SET PASSWORD FOR tian1=Password('222222'); 例子1：更改当前登录用户的密码 1SET PASSWORD =Password('222222'); 第二十九章——数据库维护本章学习如何进行常见的数据库维护。 (1)ANALYZE TABLE，用来检查表键是否正确。 1ANALYZE TABLE orders; (2) 第三十章——改善性能本章将复习与MySQL性能有关的某些要点。 （1）MySQL是用一系列的默认设置预先配置的，从这些设置开始通常是没问题的。但过一段时间后你可能需要调整内存分配、缓冲区大小等。（为查看当前设置，可使用 SHOW VARIABLES;和 SHOW STATUS;。）（2）MySQL一个多用户多线程的DBMS，换言之，它经常同时执行多个任务。如果这些任务中的某一个执行缓慢，则所有请求都会执行缓慢。如果你遇到显著的性能不良，可使用SHOW PROCESSLIST显示所有活动进程（以及它们的线程ID和执行时间）。你还可以用KILL命令终结某个特定的进程（使用这个命令需要作为管理员登录）。（3）总是有不止一种方法编写同一条SELECT语句。 应该试验联结、并、子查询等，找出最佳的方法。（4）使用EXPLAIN语句让MySQL解释它将如何执行一条SELECT语句。（5）一般来说，存储过程执行得比一条一条地执行其中的各条MySQL语句快。（6）应该总是使用正确的数据类型。（7）决不要检索比需求还要多的数据。换言之，不要用SELECT *（除非你真正需要每个列）。（8） 有的操作（包括INSERT）支持一个可选的DELAYED关键字，如果使用它，将把控制立即返回给调用程序，并且一旦有可能就实际执行该操作。（9）在导入数据时，应该关闭自动提交。你可能还想删除索引（包括FULLTEXT索引），然后在导入完成后再重建它们。（10）必须索引数据库表以改善数据检索的性能。（11）你的SELECT语句中有一系列复杂的OR条件吗？通过使用多条SELECT语句和连接它们的UNION语句，你能看到极大的性能改进。（12）索引改善数据检索的性能，但损害数据插入、删除和更新的性能。如果你有一些表，它们收集数据且不经常被搜索，则在有必要之前不要索引它们。（索引可根据需要添加和删除。）（13）LIKE很慢。一般来说，最好是使用FULLTEXT而不是LIKE。（14）数据库是不断变化的实体。一组优化良好的表一会儿后可能就面目全非了。由于表的使用和内容的更改，理想的优化和配置也会改变。","categories":[],"tags":[{"name":"数据库","slug":"数据库","permalink":"https://tetedetian2.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"}]},{"title":"markdown小技巧","slug":"markdown小技巧","date":"2020-07-19T18:42:06.360Z","updated":"2020-07-16T05:23:05.793Z","comments":true,"path":"2020/07/20/markdown小技巧/","link":"","permalink":"https://tetedetian2.github.io/2020/07/20/markdown%E5%B0%8F%E6%8A%80%E5%B7%A7/","excerpt":"markdown的基础语法以及一些稍微高级的用法","text":"markdown的基础语法以及一些稍微高级的用法 markdown是什么？ 百度百科：Markdown是一种可以使用普通文本编辑器编写的标记语言，通过简单的标记语法，它可以使普通文本内容具有一定的格式。 换种说法，就是文章内容会根据你标记的符号来呈现特定的格式，markdown文件后缀是md。 在这里，给大家介绍一款我在用的markdown编辑器——Typera（特殊的编辑器会根据markdown语法实时渲染，呈现格式。）效果可以看视频。 基础语法看这里 1.链接1 2.连接2 基础语法没怎么提及的用法 控制主页显示内容 &lt;!--more--&gt;只显示 &lt;!--more--&gt; 之前的内容、 插入图片 目前我使用的是阿里云+Typora的方法，方法见知乎：https://zhuanlan.zhihu.com/p/138878534目前我是用4.98元买了6个月的资源包，后续费用怎样我再写上来 调节图片大小 方法1：格式：&lt;img src=&quot;图片路径或网址&quot; width=&quot;这里写宽度px&quot;&gt; 比如下面这张图片的代码是&lt;img src=&quot;http://tetedetian.oss-cn-shenzhen.aliyuncs.com/img/image-20200706141931838.png&quot; width=&quot;100px&quot;&gt; 方法2： 格式：&lt;img src=&quot;图片路径或网址&quot; alt=&quot;图片描述（图片没显示时显示的文字）&quot; style=&quot;zoom: 一个百分数（控制大小）;&quot; /&gt; 图片描述也可以不要：&lt;img src=&quot;图片路径或网址&quot; style=&quot;zoom: 一个百分数（控制大小）;&quot; /&gt; 比如下面这张图片的代码是&lt;img src=&quot;http://tetedetian.oss-cn-shenzhen.aliyuncs.com/img/image-20200706141931838.png&quot; style=&quot;zoom: 67%;&quot; /&gt; 方法3：根据上面插入图片的方法配置好，可以直接把图片复制粘贴到Typora，会自动上传阿里云并且编辑好方法2的格式，十分方便。 添加目录 利用vscode的“Markdown TOC”插件可以自动生成目录 文字居中 比如这样 格式：&lt;div align=&quot;center&quot; &gt;比如这样&lt;/div&gt;","categories":[],"tags":[{"name":"博客搭建与运营","slug":"博客搭建与运营","permalink":"https://tetedetian2.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B8%8E%E8%BF%90%E8%90%A5/"}]},{"title":"Linux基础知识点","slug":"Linux基础知识点","date":"2020-07-19T18:42:06.358Z","updated":"2020-07-16T05:25:04.889Z","comments":true,"path":"2020/07/20/Linux基础知识点/","link":"","permalink":"https://tetedetian2.github.io/2020/07/20/Linux%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86%E7%82%B9/","excerpt":"这里，有我学习linux的一些笔记^_^","text":"这里，有我学习linux的一些笔记^_^ [TOC] 前言 为什么学习 Linux 系统？ 可以看一下下图linux相对于windows的优势 Linux的这些优势就是需要学习Linux的部分原因 一、linux基础命令1.命令格式命令名称 [命令参数] [命令对象] 命令名称、命令参数、命令对象之间请用空格键分隔。命令对象一般是指要处理的文件、目录、用户等资源，而命令参数可以用长格式（完整的选项名称,例如：man --help）， 也可以用短格式（单个字母的缩写，例如：man -h）， 两者分别用--与-作为前缀 . 2.常用系统工作命令 man命令 man可以用来查看命令的帮助信息，比如我想了解date命令的帮助信息 1man date echo命令 格式:“echo [字符串 | $变量]”，echo 命令用于在终端输出字符串或变量提取后的值。 1.输出字符串“tiantian” 12tian@tian-virtual-machine:~$ echo tiantiantiantian 2.提取变量SHELL的值 12tian@tian-virtual-machine:~$ echo $SHELL&#x2F;bin&#x2F;bash date命令 格式：“date [选项] [+指定的格式]” ，date 命令用于显示及设置系统的时间或日期 。 reboot命令 reboot命令用于重启系统 poweroff命令 poweroff命令用于关闭系统 wget命令 ps命令 格式：“ps [参数]”，ps 命令用于查看系统中的进程状态， top命令 格式： top top 命令用于动态地监视进程活动与系统负载等信息 top 命令执行结果的前 5 行为系统整体的统计信息，其所代表的含义如下。 第 1 行：系统时间、运行时间、登录终端数、系统负载（三个数值分别为 1 分钟、 5分钟、 15 分钟内的平均值，数值越小意味着负载越低）。 第 2 行：进程总数、运行中的进程数、睡眠中的进程数、停止的进程数、僵死的进程数。 第 3 行：用户占用资源百分比、系统内核占用资源百分比、改变过优先级的进程资源百分比、空闲的资源百分比等。（96.0id 意味着有 96.0%的 CPU 处理器资源处于空闲 ） 第 4 行：物理内存总量、内存使用量、内存空闲量、作为内核缓存的内存量。 第 5 行：虚拟内存总量、虚拟内存使用量、虚拟内存空闲量、已被提前加载的内存量。 pidof命令 格式：“pidof [参数] [服务名称]”， pidof 命令用于查询某个指定服务进程的 PID 值， 每个进程的进程号码值（PID）是唯一的，因此可以通过 PID 来区分不同的进程。 kill命令 格式：“kill [参数] [进程 PID]”， kill 命令用于终止某个指定 PID 的服务进程 killall 命令 格式：“killall [参数] [进程名称]”，killall 命令用于终止某个指定名称的服务所对应的全部进程。 2.系统状态检测命令 ifconfig 命令 ifconfig 命令用于获取网卡配置与网络状态等信息，格式为“ifconfig [网络设备] [参数]”。 输出如下，网卡名称、 inet 参数后面的 IP 地址、 ether 参数后面的网卡物理地址（又称为 MAC 地址），以及 RX、 TX 的接收数据包与发送数据包的个数及累计流量 ，都是重要参数 123456789101112131415161718root@tian-virtual-machine:~# ifconfigens33: flags&#x3D;4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt; mtu 1500 inet 192.168.231.130 netmask 255.255.255.0 broadcast 192.168.231.255 inet6 fe80::cce1:d7a5:4905:6f54 prefixlen 64 scopeid 0x20&lt;link&gt; ether 00:0c:29:09:5b:2c txqueuelen 1000 (以太网) RX packets 2960 bytes 1124457 (1.1 MB) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 1266 bytes 186200 (186.2 KB) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0lo: flags&#x3D;73&lt;UP,LOOPBACK,RUNNING&gt; mtu 65536 inet 127.0.0.1 netmask 255.0.0.0 inet6 ::1 prefixlen 128 scopeid 0x10&lt;host&gt; loop txqueuelen 1000 (本地环回) RX packets 516 bytes 41664 (41.6 KB) RX errors 0 dropped 0 overruns 0 frame 0 TX packets 516 bytes 41664 (41.6 KB) TX errors 0 dropped 0 overruns 0 carrier 0 collisions 0 uname命令 uname 命令用于查看系统内核与系统版本等信息，格式为“uname [-a]”。 *uptime 命令 * uptime 用于查看系统的负载信息，格式为 uptime。 12root@tian-virtual-machine:~# uptime 14:47:03 up 1:35, 2 users, load average: 0.04, 0.01, 0.00 它可以显示当前系统时间、系统已运行时间、启用终端数量以及平均负载值等信息。平均负载值指的是系统在最近 1 分钟、 5 分钟、 15 分钟内的压力情况，负载值越低越好 。 free 命令 free 用于显示当前系统中内存的使用量信息，格式为“free [-h]”。 1234root@tian-virtual-machine:~# free -h 总计 已用 空闲 共享 缓冲&#x2F;缓存 可用内存： 1.9G 929M 387M 7.0M 641M 865M交换： 2.0G 0B 2.0G 共享：进程共享的内存量。缓冲/缓存：磁盘缓存的内存量。可用：缓存的内存量。 （我的系统显示的是中文） who 命令 who 用于查看当前登入主机的用户终端信息，格式为“who [参数]”。 123root@tian-virtual-machine:~# whotian :0 2020-07-09 13:12 (:0)tian pts&#x2F;2 2020-07-09 13:15 (192.168.231.1) last 命令 last 命令用于查看所有系统的登录记录，格式为“last [参数]”。 history 命令 history 命令用于显示历史执行过的命令，格式为“history”，要清除记录，用history -c。还可以使用“!编码数字”的方式来重复执行某一次的命令。 1234567root@tian-virtual-machine:~# history 1 history 2 date 3 historyroot@tian-virtual-machine:~# !2date2020年 07月 09日 星期四 15:10:56 CST sosreport 命令 sosreport 命令用于收集系统配置及架构信息并输出诊断文档，格式为 sosreport。 3.工作目录切换命令 pwd 命令 pwd 命令用于显示用户当前所处的工作目录，格式为“pwd [选项]”。 cd命令 cd 命令用于切换工作路径，格式为“cd [目录名称]”。 cd ~切换到根目录，cd -切换到上一次的目录. ls命令 ls 命令用于显示目录中的文件信息，格式为“ls [选项] [文件] ”。 ls -a看到全部文件（包括隐藏文件） ,ls -l查看文件的属性、大小等详细信息。 4.文本文件编辑命令 cat命令 cat 命令用于查看纯文本文件（内容较少的），格式为“cat [选项] [文件]”。 *more 命令 * more 命令用于查看纯文本文件（内容较多的），格式为“more [选项]文件”。 可以使用空格键或回车键向下翻页 head 命令 head 命令用于查看纯文本文档的前 N 行，格式为“head [选项] [文件]”。 *tail 命令 * tail 命令用于查看纯文本文档的后 N 行或持续刷新内容，格式为“tail [选项] [文件]”。 tr 命令 tr 命令用于替换文本文件中的字符，格式为“tr [原始字符] [目标字符]”。 wc 命令 wc 命令用于统计指定文本的行数、字数、字节数，格式为“wc [参数] 文本”。 参数 作用 -l 只显示行数 -w 只显示单词数 -c 只显示字节数 stat 命令 stat 命令用于查看文件的具体存储信息和时间等信息，格式为“stat 文件名称”。 cut 命令 cut 命令用于按“列”提取文本字符，格式为“cut [参数] 文本”。 diff 命令 diff 命令用于比较多个文本文件的差异，格式为“diff [参数] 文件”。 以使用–brief 参数来确认两个文件是否不同，还可以使用-c参数来详细比较出多个文件的差异之处， 5.文件目录管理命令 touch 命令 touch 命令用于创建空白文件或设置文件的时间，格式为“touch [选项] [文件]”。 创建tian.txt文件 1tian@tian-virtual-machine:~$ touch tian.txt mkdir 命令 mkdir 命令用于创建空白的目录，格式为“mkdir [选项] 目录”。 创建tian文件夹 1tian@tian-virtual-machine:~$ mkdir tian cp 命令 cp 命令用于复制文件或目录，格式为“cp [选项] 源文件 目标文件”。 参数 作用 -p 保留原始文件的属性 -d 若对象为“链接文件”，则保留该“链接文件”的属性 -r 递归持续复制（用于目录） -i 若目标文件存在则询问是否覆盖 -a 相当于-pdr（p、 d、 r 为上述参数） 将tian.txt复制到tian文件夹 1tian@tian-virtual-machine:~$ cp tian.txt tian mv 命令 mv 命令用于剪切文件或将文件重命名，格式为“mv [选项] 源文件 [目标路径|目标文件名]”。 rm 命令 rm 命令用于删除文件或目录，格式为“rm [选项] 文件”。 rm 命令后跟上-f 参数来强制删除。 想要删除一个目录，需要在 rm 命令后面一个-r 参数 dd 命令 dd 命令用于按照指定大小和个数的数据块来复制文件或转换文件，格式为“dd [参数]”。 file 命令 file 命令用于查看文件的类型，格式为“file 文件名”。 12tian@tian-virtual-machine:~&#x2F;tian$ file tian.txttian.txt: ASCII text 6.打包与压缩的命令 tar 命令 tar 命令用于对文件进行打包压缩或解压，格式为“tar [选项] [文件]”。 参数 作用 -c 创建压缩文件 -x 解开压缩文件 -t 查看压缩包内有哪些文件 -z 用 Gzip 压缩或解压 -j 用 bzip2 压缩或解压 -v 显示压缩或解压的过程 -f 目标文件名 -p 保留原始的权限与属性 -P 使用绝对路径来压缩 -C 指定解压到的目录 将tian文件夹用 Gzip 压缩，并且显示压缩的过程，压缩文件命名为tian.gz 123tian@tian-virtual-machine:~$ tar -czvf tian.gz tiantian&#x2F;tian&#x2F;tian.txt grep 命令 grep 命令用于在文本中执行关键词搜索，并显示匹配的结果，格式为“grep [选项] [文件]”。 参数 作用 -b 将可执行文件（binary）当作文本文件（text）来搜索 -c 仅显示找到的行数 -i 忽略大小写 -n 显示行号 -v 反向选择—仅列出没有“关键词”的行 在tian.txt文件中找“c”,结果只显示c的行数 12tian@tian-virtual-machine:~&#x2F;tian$ grep -n c tian.txt3:c find 命令 find 命令用于按照指定条件来查找文件，格式为“find [查找路径] 寻找条件 操作”。 参数 作用 -name 匹配名称 -perm 匹配权限（mode 为完全匹配， -mode 为包含即可） -user 匹配所有者 -group 匹配所有组 -mtime -n +n 匹配修改内容的时间（-n 指 n 天以内， +n 指 n 天以前） -atime -n +n 匹配访问文件的时间（-n 指 n 天以内， +n 指 n 天以前） -ctime -n +n 匹配修改文件权限的时间（-n 指 n 天以内， +n 指 n 天以前） -nouser 匹配无所有者的文件 -nogroup 匹配无所有组的文件 -newer f1 !f2 匹配比文件 f1 新但比 f2 旧的文件 –type b/d/c/p/l/f 匹配文件类型（后面的字幕参数依次表示块设备、目录、字符设备、管道、 链接文件、文本文件） -size 匹配文件的大小（+50KB 为查找超过 50KB 的文件，而-50KB 为查找小于 50KB 的文件） -prune 忽略某个目录 -exec …… {}; 后面可跟用于进一步处理搜索结果的命令（下文会有演示） 第三章——管道符、重定向与环境变量1.输入输出重定向输入重定向：把文件导入到命令中。 输出重定向：把原本要输出到屏幕的数据信息写入到指定文件中。 标准输出重定向: 错误信息不会被输出到重定向的文件里。 错误输出重定向: 错误信息也会输出到重定向的文件里。两者具体区别可以看下面的例子 ​ 输入重定向中用到的符号及其作用 符号 作用 命令 &lt; 文件 将文件作为命令的标准输入 命令 &lt;&lt; 分界符 从标准输入中读入，直到遇见分界符才停止 命令 &lt; 文件 1 &gt; 文件 2 将文件 1 作为命令的标准输入并将标准输出到文件 2 输出重定向中用到的符号及其作用 符号 作用 命令 &gt; 文件 将标准输出重定向到一个文件中（清空原有文件的数据） 命令 2&gt; 文件 将错误输出重定向到一个文件中（清空原有文件的数据） 命令 &gt;&gt; 文件 将标准输出重定向到一个文件中（追加到原有内容的后面） 命令 2&gt;&gt; 文件 将错误输出重定向到一个文件中（追加到原有内容的后面） 命令 &gt;&gt; 文件 2&gt;&amp;1 或 命令 &amp;&gt;&gt; 文件 将标准输出与错误输出共同写入到文件中（追加到原有内容的 后面） 例子： 1.将man ls的输出内容写到tian.txt文件里面去 1tian@tian-virtual-machine:~&#x2F;tian$ man ls &gt; tian.txt 2.用tian tian aaaa覆盖tian.txt里面的内容，tian tian bbbb追加在后面 123456tian@tian-virtual-machine:~&#x2F;tian$ echo &quot;tian tian aaaa&quot;&gt;tian.txttian@tian-virtual-machine:~&#x2F;tian$ cat tian.txttian tian aaaatian@tian-virtual-machine:~&#x2F;tian$ echo &quot;tian tian bbbb&quot;&gt;&gt;tian.txttian tian aaaatian tian bbbb 3.使用标准输出重定向（222是不存在的目录，瞎编的） 可以看到，第3行进行查看tian.txt，显示是空，说明错误提示并没有输入到tian.txt里 1234tian@tian-virtual-machine:~&#x2F;tian$ ls -l 222 &gt;tian.txtls: 无法访问&#39;222&#39;: 没有那个文件或目录tian@tian-virtual-machine:~&#x2F;tian$ cat tian.txttian@tian-virtual-machine:~&#x2F;tian$ 4.使用错误输出重定向（222是不存在的目录，瞎编的） 可以看到，第2行进行查看tian.txt，显示内容就是ls -l 222 2&gt;tian.txt的错误信息 1234tian@tian-virtual-machine:~&#x2F;tian$ ls -l 222 2&gt;tian.txttian@tian-virtual-machine:~&#x2F;tian$ cat tian.txtls: 无法访问&#39;222&#39;: 没有那个文件或目录tian@tian-virtual-machine:~&#x2F;tian$ 2.管道命令符（|）作用：把前一个命令原本要输出到屏幕的数据当作是后一个命令的标准输入 3.命令行的通配符星号（*）：匹配零个或多个字符 问号（?）：代表匹配单个字符 [0-9] : 代表匹配 0～9之间的单个数字的字符,当然，括号里面的范围可以自己定义。 [abc] :则是代表匹配 a、 b、 c 三个字符中的任意一个字符。 4.常用的转义字符4 个最常用的转义字符如下所示。 反斜杠（\\）：使反斜杠后面的一个变量变为单纯的字符串。单引号（’’）：转义其中所有的变量为单纯的字符串。双引号（””）：保留其中的变量属性，不进行转义处理。反引号（``）：把其中的命令执行后返回结果。 例子： 1234tian@tian-virtual-machine:~&#x2F;tian$ echo uname -auname -atian@tian-virtual-machine:~&#x2F;tian$ echo &#96;uname -a&#96;Linux tian-virtual-machine 5.3.0-51-generic #44~18.04.2-Ubuntu SMP Thu Apr 23 14:27:18 UTC 2020 x86_64 x86_64 x86_64 GNU&#x2F;Linux 5.重要的环境变量Linux 系统中最重要的 10 个环境变量 变量名称 作用 HOME 用户的主目录（即家目录） SHELL 用户在使用的 Shell 解释器名称 HISTSIZE 输出的历史命令记录条数 HISTFILESIZE 保存的历史命令记录条数 MAIL 邮件保存路径 LANG 系统语言、语系名称 RANDOM 生成一个随机数字 PS1 Bash 解释器的提示符 PATH 定义解释器搜索用户执行命令的路径 EDITOR 用户默认的文本编辑器 查看变量值，可以使用echo $变量,例如 1echo $PATH 我们完全可以自行创建变量，来满足工作需求。例如设置一个名称为 WORKDIR 的变量，方便用户更轻松地进入一个层次较深的目录： 12345tian@tian-virtual-machine:~$ mkdir tian&#x2F;zhu&#x2F;datian@tian-virtual-machine:~$ WORKDIR&#x3D;tian&#x2F;zhu&#x2F;datian@tian-virtual-machine:~$ cd $WORKDIRtian@tian-virtual-machine:~&#x2F;tian&#x2F;zhu&#x2F;da$ pwd&#x2F;home&#x2F;tian&#x2F;tian&#x2F;zhu&#x2F;da 第四章——Vim 编辑器与 Shell 命令脚本1.Vim 文本编辑器1.1三种模式 (1)命令模式：控制光标移动，可对文本进行复制、粘贴、删除和查找等工作。(2)输入模式：正常的文本录入。(3)末行模式：保存或退出文档，以及设置编辑环境。 在每次运行 Vim 编辑器时，默认进入命令模式 三种模式切换方法： 1.2 常用命令（1）命令模式中常用的一些命令 命令 作用 dd 删除（剪切）光标所在整行 5dd 删除（剪切）从光标处开始的 5 行 yy 复制光标所在整行 5yy 复制从光标处开始的 5 行 n 显示搜索命令定位到的下一个字符串 N 显示搜索命令定位到的上一个字符串 u 撤销上一步的操作 p 将之前删除（dd）或复制（yy）过的数据粘贴到光标后面 （2）末行模式中常用的一些命令 命令 作用 :w 保存 :q 退出 :q! 强制退出（放弃对文档的修改内容） :wq! 强制保存退出 :set nu 显示行号 :set nonu 不显示行号 :命令 执行该命令 :整数 跳转到该行 :s/one/two 将当前光标所在行的第一个 one 替换成 two :s/one/two/g 将当前光标所在行的所有 one 替换成 two :%s/one/two/g 将全文中的所有 one 替换成 two ?字符串 在文本中从下至上搜索该字符串 /字符串 在文本中从上至下搜索该字符串 2.编写 Shell 脚本2.1编写一个简单脚本第一行的脚本声明（#!）用来告诉系统使用哪种 Shell 解释器来执行该脚本。 第二行的注释信息（#）是对脚本功能和某些命令的介绍信息，使得自己或他人在日后看到这个脚本内容时，可以快速知道该脚本的作用或一些警告信息。 第三、四行的可执行语句也就是我们平时执行的 Linux 命令了。 12345678910111213141516171819root@tian-virtual-machine:~# touch tiana.shroot@tian-virtual-machine:~# vim tiana.sh#!&#x2F;bin&#x2F;bash#一个简单脚本pwdls -a~~~~root@tian-virtual-machine:~# cat tiana.sh#!&#x2F;bin&#x2F;bash#一个简单脚本pwdls -aroot@tian-virtual-machine:~# bash tiana.sh&#x2F;root. .. .bash_history .bashrc .cache .gnupg .profile tiana.sh .viminforoot@tian-virtual-machine:~# 2.2 接收用户的参数一些字符的含义： $0 ：当前 Shell 脚本程序的名称 $#：参数总数 $*：对应的是所有位置的参数值 $?：对应的是显示上一次命令的执行返回值 $N：第 N 个位置的参数值 例子： 123456789101112131415161718tian@tian-virtual-machine:~$ vim tiana.sh#!&#x2F;bin&#x2F;bashecho &quot;当前脚本名称是$0&quot;echo &quot;当前总共有$#个参数，分别是$*&quot;echo &quot;第一个参数是$1&quot;~这里省略了一大堆“~”~&quot;tiana.sh&quot; [新] 8L, 123C 已写入 tian@tian-virtual-machine:~$ sh tiana.sh 1 2 3 4当前脚本名称是tiana.sh当前总共有4个参数，分别是1 2 3 4第一个参数是1tian@tian-virtual-machine:~$ 2.3判断用户的参数（1）文件判断 Shell 脚本中的条件测试语法可以判断表达式是否成立，若条件成立则返回数字 0，否则便返回其他随机数值。 条件测试语法的执行格式如下图所示，切记，条件表达式两边均应有一个空格。 运算符 作用 -d 测试文件是否为目录类型 -e 测试文件是否存在 -f 判断是否为一般文件 -r 测试当前用户是否有权限读取 -w 测试当前用户是否有权限写入 -x 测试当前用户是否有权限执行 文件测试所用参数表 （2）逻辑判断 还可以利用逻辑语句对测试结果进行逻辑分析，根据测试结果可实现不同的效果。 &amp;&amp;：表示当前面的命令执行成功后才会执行它后面的命令 。 || ：表示当前面的命令执行失败后才会执行它后面的命令 ！ ：表示把条件测试中的判断结果取相反值 例子(tian.sh是存在的，t.sh是不存在的)： 123456789101112root@tian-virtual-machine:~# ls -a. .. .bash_history .bashrc .cache .gnupg .profile tiana.sh tian.sh .viminforoot@tian-virtual-machine:~# [ -f tian.sh ]root@tian-virtual-machine:~# echo $?0root@tian-virtual-machine:~# [ -f tian.sh ] &amp;&amp; echo &quot;存在&quot;存在root@tian-virtual-machine:~# [ -f t.sh ] || echo &quot;存在&quot;存在root@tian-virtual-machine:~# [ ! -f tian.sh ] || echo &quot;存在&quot;存在root@tian-virtual-machine:~# 再来看一个复杂一点的例子： 12root@tian-virtual-machine:~# [ ! -f tian.sh ] &amp;&amp; echo &quot;不存在&quot; || echo &quot;存在&quot; 存在 （3）整数判断 整数比较运算符仅是对数字的操作，不能将数字与字符串、文件等内容一起操作 运算符 作用 -eq 是否等于 -ne 是否不等于 -gt 是否大于 -lt 是否小于 -le 是否等于或小于 -ge 是否大于或等于 可用的整数比较运算符表 例子1： 12root@tian-virtual-machine:~# [ 10 -eq 10 ] &amp;&amp; echo &quot;10&#x3D;10&quot;10&#x3D;10 例子2：判断内存是否不足，小于1024内存不足 1234567891011121314151617181920root@tian-virtual-machine:~# free -m 总计 已用 空闲 共享 缓冲&#x2F;缓存 可用内存： 1958 878 442 9 638 914交换： 2047 0 2047root@tian-virtual-machine:~# free -m | grep &quot;内存：&quot;内存： 1958 878 442 9 638 914root@tian-virtual-machine:~# free -m 总计 已用 空闲 共享 缓冲&#x2F;缓存 可用内存： 1958 878 442 9 638 914交换： 2047 0 2047root@tian-virtual-machine:~# free -m | grep &quot;内存：&quot;内存： 1958 878 442 9 638 914root@tian-virtual-machine:~# free -m | grep &quot;内存：&quot; | awk &#39;&#123;print $4&#125;&#39;442root@tian-virtual-machine:~# FreeMem&#x3D;&#96;free -m | grep &quot;内存：&quot; | awk &#39;&#123;print $4&#125;&#39;&#96;root@tian-virtual-machine:~# echo $FreeMem441 root@tian-virtual-machine:~# [ $FreeMem -lt 1024 ] &amp;&amp; echo &quot;内存不足&quot;内存不足root@tian-virtual-machine:~# free -m: 获取当前系统正在使用及可用的内存量信息，-m是以Mb显示。 grep &quot;内存：&quot;:只显示“内存”这一行。 awk &#39;{print $4}&#39;:只保留第四列 。 （4）.字符判断 运算符 作用 = 比较字符串内容是否相同 != 比较字符串内容是否不同 -z 判断字符串内容是否为空 例子： 123456root@tian-virtual-machine:~# [ fkjdk &#x3D; dslfk ]root@tian-virtual-machine:~# echo $?1root@tian-virtual-machine:~# [ ff &#x3D; ff ]root@tian-virtual-machine:~# echo $?0 2.4流程控制语句（1）if 条件测试语句 例子： 为了避免用户等待时间过长，需要通过-c 参数来规定尝试的次数，并使用-i 参数定义每个数据包的发送间隔，以及使用-W 参数定义等待超时时间 ，192.168.231.134是虚拟机ip地址 12345678910111213141516171819202122root@tian-virtual-machine:~# vim test_ping.sh#!bin&#x2F;bashping -c 3 -i 0.2 -w 3 $1 &amp;&gt; &#x2F;dev&#x2F;nullif [ $? -eq 0 ]then echo &quot;Host $1 is On-line&quot;else echo &quot;Host $1 is off-line&quot;fi~~~~~&quot;test_ping.sh&quot; 10L, 135C 已写入 root@tian-virtual-machine:~# bash test_ping.sh 192.168.231.134Host 192.168.231.134 is On-lineroot@tian-virtual-machine:~# bash test_ping.sh 192.168.231.133Host 192.168.231.133 is off-lineroot@tian-virtual-machine:~# （2）for 条件循环语句 例子：尝试让脚本从文本中自动读取主机列表（ip_test.txt），然后自动逐个测试这些主机是否在线。 $（命令）:执行括号或双引号括起来的命令。 /dev/null 是一个被称作 Linux 黑洞的文件，把输出信息重定向到这个文件等同于删除数据（类似于没有回收功能的垃圾箱），可以让用户的屏幕窗口保持简洁。 12345678910111213141516171819202122232425262728root@tian-virtual-machine:~# vim ip_test.txt192.168.231.134192.168.231.135192.168.231.136root@tian-virtual-machine:~# vim ip_test.sh#!&#x2F;bin&#x2F;bashHLIST&#x3D;$(cat ip_test.txt)for IP in $HLISTdo ping -c 3 -i 0.2 -w 3 $IP &amp;&gt; &#x2F;dev&#x2F;null if [ $? -eq 0 ] then echo &quot;HOST $IP is On-line&quot; else echo &quot;HOST $IP is off-line&quot; fidone~~&quot;ip_test.sh&quot; 13L, 197C 已写入 root@tian-virtual-machine:~# bash ip_test.shHOST 192.168.231.134 is off-lineHOST 192.168.231.135 is On-lineHOST 192.168.231.136 is off-lineroot@tian-virtual-machine:~# (3)while 条件循环语句 例子：编写一个用来猜测数值大小的脚本 guess.sh。 $RANDOM：调取出一个随机的数值（范围为 0～32767） expr：使用 expr 命令取得$RANDOM结果 read -p：读入用户输入的信息到后面的变量（INT），-p是添加提示。 123456789101112131415161718192021222324252627282930313233343536373839404142434445root@tian-virtual-machine:~# vim guess.sh#!&#x2F;bin&#x2F;bashPRICE&#x3D;$(expr $RANDOM % 1000)TIMES&#x3D;0echo &quot;我这里有个宝贝价格在0~999之间，猜猜看是多少？&quot;while truedo read -p &quot;请输入你猜测的价格：&quot; INT let TIMES++ if [ $INT -eq $PRICE ] then echo &quot;恭喜你答对了！实际价格是$PRICE&quot; echo &quot;你共猜了$TIMES次&quot; exit 0 elif [ $INT -gt $PRICE ] then echo &quot;太高了！&quot; else echo &quot;太低了！&quot; fidone~~&quot;guess.sh&quot; 20L, 408C 已写入 root@tian-virtual-machine:~# bash guess.sh我这里有个宝贝价格在0~999之间，猜猜看是多少？请输入你猜测的价格：500太低了！请输入你猜测的价格：750太低了！请输入你猜测的价格：875太高了！请输入你猜测的价格：812太低了！请输入你猜测的价格：840太低了！请输入你猜测的价格：858太高了！请输入你猜测的价格：850太低了！请输入你猜测的价格：854太高了！请输入你猜测的价格：852恭喜你答对了！实际价格是852你共猜了9次 （4）case 条件测试语句 12345678910111213141516171819202122[root@linuxprobe ~]# vim Checkkeys.sh#!&#x2F;bin&#x2F;bashread -p &quot;请输入一个字符，并按 Enter 键确认： &quot; KEYcase &quot;$KEY&quot; in[a-z]|[A-Z])echo &quot;您输入的是 字母。 &quot;;;[0-9])echo &quot;您输入的是 数字。 &quot;;;*)echo &quot;您输入的是 空格、功能键或其他控制字符。 &quot;esac[root@linuxprobe ~]# bash Checkkeys.sh请输入一个字符，并按 Enter 键确认： 6您输入的是 数字。[root@linuxprobe ~]# bash Checkkeys.sh请输入一个字符，并按 Enter 键确认： p您输入的是 字母。[root@linuxprobe ~]# bash Checkkeys.sh请输入一个字符，并按 Enter 键确认： ^[[15~您输入的是 空格、功能键或其他控制字符。 2.5计划任务服务程序第五章——用户身份与文件权限1.用户身份与能力1.1 useradd 命令useradd 命令用于创建新的用户，格式为“useradd [选项] 用户名”。 useradd 命令中的用户参数以及作用 参数 作用 -d 指定用户的家目录（默认为/home/username） -e 账户的到期时间，格式为 YYYY-MM-DD. -u 指定该用户的默认 UID -g 指定一个初始的用户基本组（必须已存在） -G 指定一个或多个扩展用户组 -N 不创建与用户同名的基本用户组 -s 指定该用户的默认 Shell 解释器 例子： 1234root@tian-virtual-machine:&#x2F;home&#x2F;tian# useradd -d &#x2F;tian&#x2F;zhu zhuroot@tian-virtual-machine:&#x2F;home&#x2F;tian# id zhuuid&#x3D;1001(zhu) gid&#x3D;1001(zhu) 组&#x3D;1001(zhu)root@tian-virtual-machine:&#x2F;home&#x2F;tian# 1.2 groupadd 命令groupadd 命令用于创建用户组，格式为“groupadd [选项] 群组名”。 1.3usermod 命令usermod 命令用于修改用户的属性，格式为“usermod [选项] 用户名”。 usermod 命令中的参数及作用 参数 作用 -c 填写用户账户的备注信息 -d -m 参数-m 与参数-d 连用，可重新指定用户的家目录并自动把旧的数据转移过去 -e 账户的到期时间，格式为 YYYY-MM-DD -g 变更所属用户组 G 变更扩展用户组 -L 锁定用户禁止其登录系统 -U 解锁用户，允许其登录系统 -s 变更默认终端 -u 修改用户的 UID 例子：把用户zhu添加到root组 123root@tian-virtual-machine:&#x2F;home&#x2F;tian# usermod -G root zhuroot@tian-virtual-machine:&#x2F;home&#x2F;tian# id zhuuid&#x3D;1001(zhu) gid&#x3D;1001(zhu) 组&#x3D;1001(zhu),0(root) 1.4passwd 命令passwd 命令用于修改用户密码、过期时间、认证信息等，格式为“passwd [选项] [用户名]”。 usermod 命令中的参数以及作用 参数 作用 -l 锁定用户，禁止其登录 -u 解除锁定，允许用户登录 –stdin 允许通过标准输入修改用户密码，如 echo “NewPassWord” | passwd –stdin Username -d 使该用户可用空密码登录系统 -e 强制用户在下次登录时修改密码 -S 显示用户的密码是否被锁定，以及密码所采用的加密算法名称 1.5userdel 命令userdel 命令用于删除用户，格式为“userdel [选项] 用户名” 。 userdel 命令的参数以及作用 参数 作用 -f 强制删除用户 -r 同时删除用户及用户家目录 例子： 123root@tian-virtual-machine:&#x2F;home&#x2F;tian# userdel zhuroot@tian-virtual-machine:&#x2F;home&#x2F;tian# id zhuid: &quot;zhu&quot;: no such user 2.文件权限与归属在 Linux 系统中，每个文件都有所属的所有者和所有组，并且规定了文件的所有者、所有组以及其他人对文件所拥有的可读（r）、可写（w）、可执行（x）等权限。对目录文件来说，“可读”表示能够读取目录内的文件列表；“可写”表示能够在目录内新增、删除、重命名文件；而“可执行”则表示能够进入该目录。 文件的读、写、执行权限可以简写为 rwx，亦可分别用数字 4、 2、 1 来表示 。例如，若某个文件的权限为 7 则代表可读、可写、可执行（4+2+1）；若权限为 6 则代表可读、可写（4+2）。 例子： 12root@tian-virtual-machine:&#x2F;home&#x2F;tian# ls -l tian.txt-rw-rw-r-- 1 tian tian 14 7月 11 14:20 tian.txt 这里表示文件的所有者、所有组以及其他人对tian.txt的权限分别是读写、读写、读。 3.文件的特殊权限3.1 SUIDSUID 可以让二进制程序的执行者临时拥有属主的权限 （就是root） 平时用户的密码是存储在shadow文件中，通过查看可以发现，其他人对shadow三个权限都没有，那普通用户为什么可以通过passwd命令更改自己的密码呢？就是因为在passwd加上了SUID 特殊权限位 ，这样就可以使得普通用户在使用passwd命令时暂时地获得root权限，进行密码更改。 12root@tian-virtual-machine:~# ls -l &#x2F;etc&#x2F;shadow-rw-r----- 1 root shadow 1393 7月 14 23:26 &#x2F;etc&#x2F;shadow 3.2 SGIDSGID和SUID很像，只是SGID临时获得的是组的全线 SGID 主要实现如下两种功能： (1)让执行者临时拥有属组的权限（对拥有执行权限的二进制程序进行设置）。(2)在某个目录中创建的文件自动继承该目录的用户组（只可以对目录进行设置）。 功能（1）例子：创建public_tian目录，并且更改目录权限 下面用到chmod 命令，能够用来设置文件或目录的权限，格式为“chmod [参数] 权限 文件或目录名称”。 12345678910111213# 创建public_tian目录root@tian-virtual-machine:&#x2F;home&#x2F;tian# mkdir public_tian# 查看权限root@tian-virtual-machine:&#x2F;home&#x2F;tian# ls -ald public_tiandrwxr-xr-x 2 root root 4096 7月 15 13:08 public_tian# 更改目录的权限为777，即rwxrwxrwx，root@tian-virtual-machine:&#x2F;home&#x2F;tian# chmod -Rf 777 public_tianroot@tian-virtual-machine:&#x2F;home&#x2F;tian# ls -ald public_tiandrwxrwxrwx 2 root root 4096 7月 15 13:08 public_tian# 添加SGID权限位root@tian-virtual-machine:&#x2F;home&#x2F;tian# chmod -Rf g+s public_tianroot@tian-virtual-machine:&#x2F;home&#x2F;tian# ls -ald public_tiandrwxrwsrwx 2 root root 4096 7月 15 13:08 public_tian 功能（2）例子： 使用命令为 chown，其格式为“chown [参数] 所有者:所属组 文件或目录名称”。 123456root@tian-virtual-machine:&#x2F;home# ls -ald zhudrwxrwxrwx 2 root root 4096 7月 15 14:02 zhu# 将目录zhu的所有者和所属组更改为zhuroot@tian-virtual-machine:&#x2F;home# chown zhu:zhu &#x2F;home&#x2F;zhuroot@tian-virtual-machine:&#x2F;home# ls -ald zhudrwxrwxrwx 2 zhu zhu 4096 7月 15 14:02 zhu 3.3 SBITSBIT 特殊权限位可确保用户只能删除自己的文件，而不能删除其他用户的文件。 想对其他目录来设置 SBIT 特殊权限位，用 chmod 命令就可以了。对应的参数 o+t 代表设置 SBIT 粘滞位权限 例子： 12345root@tian-virtual-machine:&#x2F;home&#x2F;zhu# ls -ald newdrwxr-xr-x 2 root root 4096 7月 15 14:50 newroot@tian-virtual-machine:&#x2F;home&#x2F;zhu# chmod -R o+t newroot@tian-virtual-machine:&#x2F;home&#x2F;zhu# ls -ald newdrwxr-xr-t 2 root root 4096 7月 15 14:50 new 4.文件的隐藏属性4.1 chattr 命令chattr 命令用于设置文件的隐藏权限，格式为“chattr [参数] 文件”。 如果想要把某个隐藏功能添加到文件上，则需要在命令后面追加“+参数”，如果想要把某个隐藏功能移出文件，则需要追加“-参数”。 chattr 命令中用于隐藏权限的参数及其作用 参数 作用 i 无法对文件进行修改；若对目录设置了该参数，则仅能修改其中的子文件内容而 不能新建或删除文件 a 仅允许补充（追加）内容，无法覆盖/删除内容（Append Only） S 文件内容在变更后立即同步到硬盘（sync） s 彻底从硬盘中删除，不可恢复（用 0 填充原文件所在硬盘区域） A 不再修改这个文件或目录的最后访问时间（atime） b 不再修改文件或目录的存取时间 D 检查压缩文件中的错误 d 使用 dump 命令备份时忽略本文件/目录 c 默认将文件或目录进行压缩 u 当删除该文件后依然保留其在硬盘中的数据，方便日后恢复 t 让文件系统支持尾部合并（tail-merging） X 可以直接访问压缩文件中的内容 例子： 123456789101112131415# 查看目录，tian.txt存在root@tian-virtual-machine:&#x2F;home&#x2F;tian# lshh.txt public_tian tian tiana.sh tian.gz tian.txt users_test.txt zhu 公共的 模板 视频 图片 文档 下载 音乐 桌面# 使用chattr给tian.txt添加+a参数root@tian-virtual-machine:&#x2F;home&#x2F;tian# chattr +a tian.txt# 尝试删除，无法删除root@tian-virtual-machine:&#x2F;home&#x2F;tian# rm tian.txtrm: 无法删除&#39;tian.txt&#39;: 不允许的操作# 利用-a参数将限制去掉root@tian-virtual-machine:&#x2F;home&#x2F;tian# chattr -a tian.txtroot@tian-virtual-machine:&#x2F;home&#x2F;tian# rm tian.txt# 查看目录，tian.txt已经被删除root@tian-virtual-machine:&#x2F;home&#x2F;tian# lshh.txt public_tian tian tiana.sh tian.gz users_test.txt zhu 公共的 模板 视频 图片 文档 下载 音乐 桌面root@tian-virtual-machine:&#x2F;home&#x2F;tian# 4.2 lsattr 命令lsattr 命令用于显示文件的隐藏权限，格式为“lsattr [参数] 文件”。 例子： 1234567root@tian-virtual-machine:&#x2F;home&#x2F;tian# touch tian.txtroot@tian-virtual-machine:&#x2F;home&#x2F;tian# chattr +a tian.txtroot@tian-virtual-machine:&#x2F;home&#x2F;tian# lsattr tian.txt-----a--------e--- tian.txtroot@tian-virtual-machine:&#x2F;home&#x2F;tian# chattr -a tian.txtroot@tian-virtual-machine:&#x2F;home&#x2F;tian# lsattr tian.txt--------------e--- tian.txt 5.文件访问控制列表如果希望对某个指定的用户进行单独的权限控制，就需要用到文件的访问控制列表（ACL）了。 5.1 setfacl 命令 setfacl 命令用于管理文件的 ACL 规则，格式为“setfacl [参数] 文件名称”。 使用 setfacl 命令可以针对单一用户或用户组、单一文件或目录来进行读/写/执行权限的控制。 针对目录文件需要使用-R 递归参数；针对普通文件则使用-m 参数；如果想要删除某个文件的 ACL，则可以使用-b 参数。 5.2 getfacl 命令getfacl 命令用于显示文件上设置的 ACL 信息，格式为“getfacl 文件名称”。 例子： 12345678root@tian-virtual-machine:~# getfacl &#x2F;home&#x2F;tian&#x2F;zhugetfacl: 从绝对路径名尾部去除&quot; &#x2F; &quot;字符。# file: home&#x2F;tian&#x2F;zhu# owner: root# group: rootuser::rwxgroup::r-xother::r-x 6. su 命令与 sudo 服务6.1 su 命令su 命令可以切换用户身份，使得当前用户在不退出登录的情况下，顺畅地切换到其他用户，比如从 root 管理员切换至普通用户： 例子： 1234root@tian-virtual-machine:~# su - zhu$ su - root密码： root@tian-virtual-machine:~# 上面的 su 命令与用户名之间有一个减号（-），这意味着完全切换到新的用户，即把环境变量信息也变更为新用户的相应信息，而不是保留原始的信息。强烈建议在切换用户身份时添加这个减号（-）。 6.2 sudo 服务普通用户可以完全切换到 root 管理员身份来完成相应工作，但这将暴露 root 管理员的密码，从而增大了系统密码被黑客获取的几率；这并不是最安全的方案。 sudo 命令用于给普通用户提供额外的权限来完成原本 root 管理员才能完成的任务，格式为“sudo [参数] 命令名称”。 sudo 服务中的可用参数以及作用 参数 作用 -h 列出帮助信息 -l 列出当前用户可执行的命令 -u 用户名或 UID 值 以指定的用户身份执行命令 -k 清空密码的有效时间，下次执行 sudo 时需要再次进行密码验证 -b 在后台执行指定的命令 -p 更改询问密码的提示语 第六章——存储结构与磁盘划分1.常见的目录 Linux 系统中常见的目录名称以及相应内容 目录名称 应放置文件的内容 /boot 开机所需文件—内核、开机菜单以及所需配置文件等 /dev 以文件形式存放任何设备与接口 /etc 配置文件 /home 用户家目录 /bin 存放单用户模式下还可以操作的命令 /lib 开机时用到的函数库，以及/bin 与/sbin 下面的命令要调用的函数 /sbin 开机过程中需要的命令 /media 用于挂载设备文件的目录 /opt 放置第三方的软件 /root 系统管理员的家目录 /srv 一些网络服务的数据文件目录 /tmp 任何人均可使用的“共享”临时目录 /proc 虚拟文件系统，例如系统内核、进程、外部设备及网络状态等 /usr/local 用户自行安装的软件 /usr/sbin Linux 系统开机时不会使用到的软件/命令/脚本 /usr/share 帮助与说明文件，也可放置共享文件 /var 主要存放经常变化的文件，如日志 /lost+found 当文件系统发生错误时，将一些丢失的文件片段存放在这里 绝对路径指的是从根目录（/）开始写起的文件或目录名称 2.物理设备的命名规则常见的硬件设备及其文件名称 硬件设备 文件名称 IDE 设备 /dev/hd[a-d] SCSI/SATA/U 盘 /dev/sd[a-p] 软驱 /dev/fd[0-1] 打印机 /dev/lp[0-15] 光驱 /dev/cdrom 鼠标 /dev/mouse 磁带机 /dev/st0 或/dev/ht0 3.文件系统与数据资料这一章剩下的暂时省略，学下面的先 第七章——使用 RAID 与 LVM 磁盘阵列技术也先省略 第八章——iptables 与 firewalld 防火墙","categories":[],"tags":[{"name":"Linux","slug":"Linux","permalink":"https://tetedetian2.github.io/tags/Linux/"}]},{"title":"Hexo功能设置","slug":"Hexo功能设置","date":"2020-07-19T18:42:06.355Z","updated":"2020-07-05T08:37:22.815Z","comments":true,"path":"2020/07/20/Hexo功能设置/","link":"","permalink":"https://tetedetian2.github.io/2020/07/20/Hexo%E5%8A%9F%E8%83%BD%E8%AE%BE%E7%BD%AE/","excerpt":"这里有一些hexo功能的使用方法以及注意点（我踩过的坑…）","text":"这里有一些hexo功能的使用方法以及注意点（我踩过的坑…） 如何给文章添加标签1.建立一个标签配置文件 在博客文件夹下，执行下面的命令 1hexo new page tags 执行后，会在source文件夹里创建一个tags文件夹，tags文件夹里会生成一个index.md文件，这个文件是用来配置你的标签的，文件内容参考下面的样例进行更改 注意：冒号“:”后面要有一个空格 12345---title: 博客搭建与运营date: 2020-07-05 01:04:45type: &quot;tags&quot;--- 如上所示，title对应你的标签名，你想要啥名字就写啥。type: “tags”是用来说明这是在配置标签的，不要改动。 2.给文章添加标签 打开文章，在文章开头添加下列文本。这里的tags后面就是你希望这个文章打上的标签名 注意：冒号“:”后面要有一个空格，不然“tags: [博客搭建与运营]”会被当成文章内容显示，并且不会归类到[博客搭建与运营]标签上。 123---tags: [博客搭建与运营]---","categories":[],"tags":[{"name":"博客搭建与运营","slug":"博客搭建与运营","permalink":"https://tetedetian2.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B8%8E%E8%BF%90%E8%90%A5/"}]},{"title":"Welcome here","slug":"hello-world","date":"2020-07-19T18:42:06.353Z","updated":"2020-07-21T15:48:53.481Z","comments":true,"path":"2020/07/20/hello-world/","link":"","permalink":"https://tetedetian2.github.io/2020/07/20/hello-world/","excerpt":"————欢迎来到我的博客~————","text":"————欢迎来到我的博客~————","categories":[],"tags":[]}],"categories":[],"tags":[{"name":"c++","slug":"c","permalink":"https://tetedetian2.github.io/tags/c/"},{"name":"面试","slug":"面试","permalink":"https://tetedetian2.github.io/tags/%E9%9D%A2%E8%AF%95/"},{"name":"计算机网络","slug":"计算机网络","permalink":"https://tetedetian2.github.io/tags/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/"},{"name":"博客搭建与运营","slug":"博客搭建与运营","permalink":"https://tetedetian2.github.io/tags/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E4%B8%8E%E8%BF%90%E8%90%A5/"},{"name":"数据库","slug":"数据库","permalink":"https://tetedetian2.github.io/tags/%E6%95%B0%E6%8D%AE%E5%BA%93/"},{"name":"Linux","slug":"Linux","permalink":"https://tetedetian2.github.io/tags/Linux/"}]}